import React, { Fragment } from 'react';
import { Grid, Box } from '@material-ui/core';
import { withStyles } from '@material-ui/core/styles';
import QRCode from 'react-qr-code';
import { ToWords } from 'to-words';
import getStateList from 'src/components/StateList';
import * as unitHelper from 'src/components/Helpers/ProductUnitHelper';
import PackageDetailsHeader from './PackageDetails/PackageDetailsHeader';
import PackageDetailsRow from './PackageDetails/PackageDetilsRow';
import * as currencyHelper from 'src/components/Utility/CurrencyUtility';

const toWords = new ToWords({
  localeCode: 'en-IN',
  converterOptions: {
    currency: true,
    ignoreDecimal: false,
    ignoreZeroCurrency: false,
    doNotAddOnly: false,
    currencyOptions: {
      // can be used to override defaults for the selected locale
      name: 'Rupee',
      plural: 'Rupees',
      symbol: 'â‚¹',
      fractionalUnit: {
        name: 'Paisa',
        plural: 'Paise',
        symbol: ''
      }
    }
  }
});

const toWordsUSD = new ToWords({
  localeCode: 'en-IN',
  converterOptions: {
    currency: true,
    ignoreDecimal: false,
    ignoreZeroCurrency: false,
    doNotAddOnly: false,
    currencyOptions: {
      // can be used to override defaults for the selected locale
      name: 'Dollars',
      plural: 'Dollars',
      symbol: '$',
      fractionalUnit: {
        name: 'Cent',
        plural: 'Cents',
        symbol: ''
      }
    }
  }
});

let isTemple = localStorage.getItem('isTemple')
  ? localStorage.getItem('isTemple') === 'true'
  : false;

let testTime = new Date().toLocaleTimeString([], {
  hour: '2-digit',
  minute: '2-digit',
  hour12: 'true'
});

const styles = (theme) => ({
  separator: {
    height: '5px',
    width: '100%'
  }
});

class InvoiceRegularPrint extends React.PureComponent {
  getSeparator = (rows, separator) => {
    const separators = [];
    for (let i = 0; i <= rows; i++) {
      separators.push(
        <div key={i} style={{ height: '5px', width: '100%' }}></div>
      );
    }
    return separators;
  };

  getEmptyRows = (rows) => {
    const separators = [];
    for (let i = 0; i <= rows; i++) {
      separators.push(<br />);
    }
    return separators;
  };

  render() {
    const { classes, isPackagePreivew, taxSettingsData } = this.props;
    console.log('invoice', isPackagePreivew, taxSettingsData);
    let _data = {};

    const data = {
      billTitle: '',
      billTo: '',
      invoiceNumber: '',
      salesInvoiceNumber: '',
      date: '',
      salesReturnDate: '',
      time: testTime,
      duedate: '',
      subTotal: 0,
      totalAmount: '',
      subTotalDisc: 0,
      totalDiscount: 0,
      strTotal: '',
      receivedAmount: 0,
      balanceAmount: '',
      paymentMode: '',
      paidReceivedTitle: '',
      invoiceNoTitle: '',
      mainTitle: '',
      astrologyDetails: '',
      additionalTempleDetails: '',
      bankPaymentType: '',
      totalCess: '',
      poNo: '',
      poDate: '',
      transportMode: '',
      vehicleNo: '',
      tname: '',
      tphone: '',
      tadd: '',
      tgstn: '',
      tstate: '',
      qrCodestr: '',
      eInvoiceQrCodeStr: '',
      shipToCustomerName: '',
      shipToCustomerAddress: '',
      shipToCustomerPhoneNo: '',
      shipToCustomerGSTNo: '',
      shipToCustomerState: '',
      eWayBillNo: '',
      isSale: false,
      notes: '',
      placeOfSupplyName: '',
      irnNo: '',
      ackNo: '',
      ackDt: '',
      updatedAt: '',
      tcsName: '',
      tcsRate: 0,
      tcsAmount: 0,
      tcsCode: '',
      tdsName: '',
      tdsRate: 0,
      tdsAmount: 0,
      tdsCode: '',
      order_type: '',
      waiter_name: '',
      waiter_phoneNo: '',
      tableNumber: '',
      chairsUsedInString: '',
      totalTaxableAmount: 0,
      paymentType: '',
      transporterId: '',
      terms: '',
      exportCountry: '',
      exportCountryOrigin: '',
      vesselFlightNo: '',
      portOfLoading: '',
      portOfDischarge: '',
      buyerOhterThanBillTo: {},
      exportCurrency: '',
      exportConversionRate: 0
    };

    let settings = {};
    let auditSettings = {};
    let outStandingType = '';
    let outStandingBalance = 0;
    let TxnSettings = {};
    let totalqty = 0;
    let totalfreeqty = 0;
    let totaltax_gst = 0;
    let totalGrossWt = 0.0;
    let totalNetWt = 0.0;
    let totalStoneWt = 0.0;
    let totalCGST = 0;
    let totalSGST = 0;
    let totalIGST = 0;
    let listOfPaymentInData = [];

    const txtSmall = '8px';
    const txtMedium = '10px';
    const txtLarge = '12px';

    const logoSmall = '50px';
    const logoMedium = '55px';
    const logoLarge = '60px';
    const logoHeightS = 'undefined';
    const logoHeightM = 'undefined';
    const logoHeightL = 'undefined';

    const bisLogoSmall = '50px';
    const bisLogoMedium = '52px';
    const bisLogoLarge = '54px';
    const bisLogoHeightS = '40px';
    const bisLogoHeightM = '42px';
    const bisLogoHeightL = '44px';

    const signatureSmall = '35px';
    const signatureMedium = '40px';
    const signatureLarge = '45px';

    let minRowHeight = '';

    const gstMap = new Map();

    const cgstMap = new Map();
    const sgstMap = new Map();
    const igstMap = new Map();
    const taxableAmount = new Map();

    let taxSplitDataList = new Map();

    const TxnEnableFieldsMap = new Map();

    const getFloatWithTwoDecimal = (val) => {
      return parseFloat(val).toFixed(2);
    };

    const mapPrintableData = async () => {
      if (_data.estimateType === 'open' || _data.estimateType === 'close') {
        data.invoiceNumber = _data.sequenceNumber;
        data.billTitle = 'Bill To';
        data.paidReceivedTitle = 'Received';
        data.invoiceNoTitle = 'Estimate No';
        data.mainTitle = 'Estimate';
        if (
          TxnSettings &&
          TxnSettings.billTitle !== '' &&
          TxnSettings.billTitle !== null
        ) {
          data.mainTitle = TxnSettings.billTitle;
          data.invoiceNoTitle = TxnSettings.billTitle + ' No';
        }

        data.notes = _data.notes;

        // customer Data
        data.tname = _data.customer_name ? _data.customer_name : 'NA';
        data.tphone = _data.customer_phoneNo ? _data.customer_phoneNo : '';
        data.tadd = _data.customer_address ? _data.customer_address : '';
        data.tgstn = _data.customerGSTNo ? 'GSTIN: ' + _data.customerGSTNo : '';
        //data.updatedAt = _data.updatedAt;

        if (_data.customerState) {
          let result = getStateList().find(
            (e) => e.name === _data.customerState
          );
          if (result) {
            data.tstate =
              'State: ' + _data.customerState + ', Code: ' + result.code;
          } else {
            data.tstate = 'State: ' + _data.customerState;
          }
        } else {
          data.tstate = '';
        }
      } else if (_data.job_work_in_invoice_number) {
        data.invoiceNumber = _data.sequenceNumber;
        data.billTitle = 'Bill To';
        data.paidReceivedTitle = 'Received';
        data.invoiceNoTitle = 'JWO. No';
        data.mainTitle = 'Job Work - In Bill';
        data.notes = _data.notes;
        data.duedate = _data.due_date ? _data.due_date : '';

        // customer Data
        data.tname = _data.customer_name ? _data.customer_name : 'NA';
        data.tphone = _data.customer_phoneNo ? _data.customer_phoneNo : '';
        data.tadd = _data.customer_address ? _data.customer_address : '';
        data.tgstn = _data.customerGSTNo ? 'GSTIN: ' + _data.customerGSTNo : '';
        if (_data.customerState) {
          let result = getStateList().find(
            (e) => e.name === _data.customerState
          );
          if (result) {
            data.tstate =
              'State: ' + _data.customerState + ', Code: ' + result.code;
          } else {
            data.tstate = 'State: ' + _data.customerState;
          }
        } else {
          data.tstate = '';
        }
      } else if (_data.sale_order_invoice_number) {
        data.invoiceNumber = _data.sequenceNumber;
        data.billTitle = 'Bill To';
        data.paidReceivedTitle = 'Received';
        data.invoiceNoTitle = 'SO No.';
        data.mainTitle = 'Sale Order';
        data.notes = _data.notes;
        data.date = _data.invoice_date ? _data.invoice_date : '';
        data.duedate = _data.due_date ? _data.due_date : '';
        data.placeOfSupplyName = _data.placeOfSupplyName;
        if (data.placeOfSupplyName) {
          let result = getStateList().find(
            (e) => e.name === data.placeOfSupplyName
          );

          if (result) {
            data.placeOfSupplyName = result.code + '-' + data.placeOfSupplyName;
          }
        }

        // customer Data
        data.tname = _data.customer_name ? _data.customer_name : 'NA';
        data.tphone = _data.customer_phoneNo ? _data.customer_phoneNo : '';
        if (_data.customer) {
          data.tadd = _data.customer.address ? _data.customer.address : '';
          data.tgstn = _data.customer.gstNumber
            ? 'GSTIN: ' + _data.customer.gstNumber
            : '';

          if (_data.customer.state) {
            let result = getStateList().find(
              (e) => e.name === _data.customer.state
            );
            if (result) {
              data.tstate =
                'State: ' + _data.customer.state + ', Code: ' + result.code;
            } else {
              data.tstate = 'State: ' + _data.customer.state;
            }
          } else {
            data.tstate = '';
          }
        }
      } else if (_data.sales_return_number) {
        data.invoiceNumber = _data.sequenceNumber;
        data.salesInvoiceNumber = _data.saleSequenceNumber;
        data.salesReturnDate = _data.date;
        data.billTitle = 'Return From';
        data.paidReceivedTitle = 'Paid';
        data.receivedAmount = _data.linked_amount;
        data.invoiceNoTitle = 'Return No';
        data.mainTitle = 'Credit Note - Sales Return';
        data.notes = _data.notes;
        data.duedate = _data.dueDate ? _data.dueDate : '';

        // customer Data
        data.tname = _data.customer_name ? _data.customer_name : 'NA';
        data.tphone = _data.customer_phoneNo ? _data.customer_phoneNo : '';
        data.tadd = _data.customer_address ? _data.customer_address : '';
        data.tgstn = _data.customerGSTNo ? 'GSTIN: ' + _data.customerGSTNo : '';
        if (_data.customerState) {
          let result = getStateList().find(
            (e) => e.name === _data.customerState
          );
          if (result) {
            data.tstate =
              'State: ' + _data.customerState + ', Code: ' + result.code;
          } else {
            data.tstate = 'State: ' + _data.customerState;
          }
        } else {
          data.tstate = '';
        }
      } else if (_data.purchase_order_invoice_number) {
        data.mainTitle = 'Purchase Order';
        data.billTitle = 'Vendor Details';
        data.invoiceNumber = _data.sequenceNumber;
        data.invoiceNoTitle = 'PO No.';
        data.date = _data.po_date ? _data.po_date : '';
        data.duedate = _data.due_date ? _data.due_date : '';
        data.notes = _data.notes;

        // Vendor Data
        data.tname = _data.vendor_name ? _data.vendor_name : 'NA';
        data.tphone = _data.vendor_phone_number
          ? _data.vendor_phone_number
          : '';
        data.tadd = _data.vendorAddress ? _data.vendorAddress : '';
        data.tgstn = _data.vendor_gst_number
          ? 'GSTIN: ' + _data.vendor_gst_number
          : '';
        if (_data.vendorState) {
          let result = getStateList().find((e) => e.name === _data.vendorState);
          if (result) {
            data.tstate =
              'State: ' + _data.vendorState + ', Code: ' + result.code;
          } else {
            data.tstate = 'State: ' + _data.vendorState;
          }
        } else {
          data.tstate = '';
        }
        data.placeOfSupplyName = _data.placeOfSupplyName;
        if (data.placeOfSupplyName) {
          let result = getStateList().find(
            (e) => e.name === data.placeOfSupplyName
          );

          if (result) {
            data.placeOfSupplyName = result.code + '-' + data.placeOfSupplyName;
          }
        }
      } else if (_data.delivery_challan_invoice_number) {
        data.mainTitle = 'Delivery Challan';
        data.billTitle = 'Ship To';
        data.invoiceNoTitle = 'DC No.';
        data.invoiceNumber = _data.sequenceNumber;
        data.date = _data.invoice_date ? _data.invoice_date : '';
        data.duedate = _data.due_date ? _data.due_date : '';

        //Customer Data
        if (_data.customerShippingData) {
          data.shipToCustomerName =
            _data.customerShippingData.customer_name &&
            _data.customerShippingData.customer_name;
          data.shipToCustomerPhoneNo =
            _data.customerShippingData.customer_phoneNo &&
            _data.customerShippingData.customer_phoneNo;
          data.shipToCustomerAddress =
            _data.customerShippingData.address &&
            _data.customerShippingData.address;
          if (_data.customerShippingData.state) {
            let result = getStateList().find(
              (e) => e.name === _data.customerShippingData.state
            );
            if (result) {
              data.shipToCustomerState =
                'State: ' +
                _data.customerShippingData.state +
                ', Code: ' +
                result.code;
            } else {
              data.shipToCustomerState =
                'State: ' + _data.customerShippingData.state;
            }
          } else {
            data.shipToCustomerState = '';
          }
        }
        data.shipToCustomerGSTNo = _data.customerGSTNo && _data.customerGSTNo;
        data.notes = _data.notes;
      } else if (_data.backToBackPurchaseNumber) {
        data.invoiceNumber = _data.lrNumber;
        data.billTitle = 'Transported By';
        data.invoiceNoTitle = 'LR No';
        data.mainTitle = 'Procurement';
        data.notes = _data.notes;
        data.vehicleNo = _data.vehicleNumber;

        // Vendor Data
        data.tname = _data.transporterVendorName
          ? _data.transporterVendorName
          : 'NA';
        data.tphone = _data.transporterVendorPhoneNumber
          ? _data.transporterVendorPhoneNumber
          : '';
        data.tadd = _data.transporterVendorAddress
          ? _data.transporterVendorAddress
          : '';
        data.tgstn = _data.transporterVendorGstNumber
          ? 'GSTIN: ' + _data.transporterVendorGstNumber
          : '';
        if (_data.transporterVendorState) {
          let result = getStateList().find(
            (e) => e.name === _data.transporterVendorState
          );
          if (result) {
            data.tstate =
              'State: ' +
              _data.transporterVendorState +
              ', Code: ' +
              result.code;
          } else {
            data.tstate = 'State: ' + _data.transporterVendorState;
          }
        } else {
          data.tstate = '';
        }
      } else if (_data.sequenceNumber) {
        data.isSale = true;
        data.invoiceNumber = _data.sequenceNumber;
        data.billTitle = 'Bill To';
        data.paidReceivedTitle = 'Received';
        data.receivedAmount = _data.linked_amount;
        data.invoiceNoTitle = 'Invoice No';
        data.eWayBillNo = _data.ewayBillNo;
        data.irnNo = _data.irnNo && _data.irnNo;
        data.ackNo = _data.einvoiceDetails && _data.einvoiceDetails.ackNo;
        data.ackDt = _data.einvoiceDetails && _data.einvoiceDetails.ackDt;
        data.eInvoiceQrCodeStr =
          _data.einvoiceDetails && _data.einvoiceDetails.signedQrCode;
        data.duedate = _data.dueDate ? _data.dueDate : '';

        data.mainTitle = 'Tax Invoice';
        if (_data.order_type === 'kot') {
          data.order_type = _data.order_type;
          data.chairsUsedInString = _data.chairsUsedInString;
          data.tableNumber = _data.tableNumber;
          data.waiter_name = _data.waiter_name;
          data.waiter_phoneNo = _data.waiter_phoneNo;
        }
        if (
          TxnSettings &&
          TxnSettings.billTitle !== null &&
          TxnSettings.billTitle !== ''
        ) {
          data.mainTitle = TxnSettings.billTitle;
        } else if (
          _data.templeBillType !== '' &&
          _data.templeBillType !== null
        ) {
          data.mainTitle = _data.templeBillType;
        } else if (_data.balance_amount > 0) {
          data.mainTitle = 'Credit - Tax Invoice';
        }

        data.poNo = _data.poInvoiceNo;
        data.transportMode = _data.transportMode;
        data.transporterId = _data.transporterId;
        data.vehicleNo = _data.vehicleNo;
        if (_data.poDate) {
          data.poDate = _data.poDate;
        }

        data.exportCountryOrigin = _data.exportCountryOrigin;
        data.exportCountry = _data.exportCountry;

        data.vesselFlightNo = _data.vesselFlightNo;
        data.portOfLoading = _data.portOfLoading;
        data.portOfDischarge = _data.portOfDischarge;
        data.buyerOhterThanBillTo = _data.buyerOhterThanBillTo;
        data.exportCurrency = _data.exportCurrency?.split(' - ')?.[0];
        data.exportCurrency =
          currencyHelper.currencySymbol[data.exportCurrency];
        data.exportConversionRate = _data.exportConversionRate;

        data.placeOfSupplyName = _data.placeOfSupplyName;
        if (data.placeOfSupplyName) {
          let result = getStateList().find(
            (e) => e.name === data.placeOfSupplyName
          );

          if (result) {
            data.placeOfSupplyName = result.code + '-' + data.placeOfSupplyName;
          }
        }
        data.notes = _data.notes;

        // customer Data
        data.tname = _data.customer_name ? _data.customer_name : 'NA';
        data.tphone = _data.customer_phoneNo ? _data.customer_phoneNo : '';
        data.tadd = _data.customer_address ? _data.customer_address : '';
        data.tgstn = _data.customerGSTNo ? 'GSTIN: ' + _data.customerGSTNo : '';
        if (_data.customerState) {
          let result = getStateList().find(
            (e) => e.name === _data.customerState
          );

          if (result) {
            data.tstate =
              'State: ' + _data.customerState + ', Code: ' + result.code;
          } else {
            data.tstate = 'State: ' + _data.customerState;
          }
        } else {
          data.tstate = '';
        }

        const isBuyerOtherThanConsignee =
          TxnSettings?.enableBuyerOtherThanConsignee;

        data.shipToCustomerName = isBuyerOtherThanConsignee
          ? _data.buyerOtherBillTo?.name
            ? _data.buyerOtherBillTo?.name
            : 'NA'
          : _data.shipToCustomerName
          ? _data.shipToCustomerName
          : 'NA';
        data.shipToCustomerAddress = isBuyerOtherThanConsignee
          ? _data.buyerOtherBillTo?.address
            ? _data.buyerOtherBillTo?.address
            : ''
          : _data.shipToCustomerAddress
          ? _data.shipToCustomerAddress
          : '';
        data.shipToCustomerPhoneNo = isBuyerOtherThanConsignee
          ? _data.buyerOtherBillTo?.phoneNo
            ? _data.buyerOtherBillTo?.phoneNo
            : ''
          : _data.shipToCustomerPhoneNo
          ? _data.shipToCustomerPhoneNo
          : '';
        data.shipToCustomerGSTNo = isBuyerOtherThanConsignee
          ? _data.buyerOtherBillTo?.gstNo
            ? _data.buyerOtherBillTo?.gstNo
            : ''
          : _data.shipToCustomerGSTNo
          ? _data.shipToCustomerGSTNo
          : '';
        if (_data.shipToCustomerState) {
          let result = getStateList().find(
            (e) => e.name === _data.shipToCustomerState
          );
          if (result) {
            data.shipToCustomerState =
              'State: ' + _data.shipToCustomerState + ', Code: ' + result.code;
          } else {
            data.shipToCustomerState = 'State: ' + _data.shipToCustomerState;
          }
        } else {
          data.shipToCustomerState = '';
        }
        data.shipToCustomerState = _data.buyerOtherBillTo?.state
          ? _data.buyerOtherBillTo?.state
          : data.shipToCustomerState;
      } else if (_data.purchase_return_number) {
        data.invoiceNumber = _data.purchaseReturnBillNumber;
        data.billTitle = 'Return To';
        data.paidReceivedTitle = 'Received';
        data.receivedAmount = _data.linked_amount;
        data.invoiceNoTitle = 'Return No';
        data.mainTitle = 'Debit Note - Purchase Return';
        data.notes = _data.notes;
        data.duedate = _data.dueDate ? _data.dueDate : '';

        // Vendor Data
        data.tname = _data.vendor_name ? _data.vendor_name : 'NA';
        data.tphone = _data.vendor_phone_number
          ? _data.vendor_phone_number
          : '';
        data.tadd = _data.vendorAddress ? _data.vendorAddress : '';
        data.tgstn = _data.vendor_gst_number
          ? 'GSTIN: ' + _data.vendor_gst_number
          : '';
        if (_data.vendorState) {
          let result = getStateList().find((e) => e.name === _data.vendorState);
          if (result) {
            data.tstate =
              'State: ' + _data.vendorState + ', Code: ' + result.code;
          } else {
            data.tstate = 'State: ' + _data.vendorState;
          }
        } else {
          data.tstate = '';
        }
      } else if (_data.bill_number) {
        data.invoiceNumber = _data.vendor_bill_number;
        data.billTitle = 'Bill From';
        data.paidReceivedTitle = 'Paid';
        data.receivedAmount = _data.linked_amount;
        data.invoiceNoTitle = 'Bill No';
        data.mainTitle = 'Purchase Bill';
        data.notes = _data.notes;
        data.duedate = _data.dueDate ? _data.dueDate : '';

        // Vendor Data
        data.tname = _data.vendor_name ? _data.vendor_name : 'NA';
        data.tphone = _data.vendor_phone_number
          ? _data.vendor_phone_number
          : '';
        data.tadd = _data.vendorAddress ? _data.vendorAddress : '';
        data.tgstn = _data.vendor_gst_number
          ? 'GSTIN: ' + _data.vendor_gst_number
          : '';
        if (_data.vendorState) {
          let result = getStateList().find((e) => e.name === _data.vendorState);
          if (result) {
            data.tstate =
              'State: ' + _data.vendorState + ', Code: ' + result.code;
          } else {
            data.tstate = 'State: ' + _data.vendorState;
          }
        } else {
          data.tstate = '';
        }
        data.placeOfSupplyName = _data.placeOfSupplyName;
        if (data.placeOfSupplyName) {
          let result = getStateList().find(
            (e) => e.name === data.placeOfSupplyName
          );

          if (result) {
            data.placeOfSupplyName = result.code + '-' + data.placeOfSupplyName;
          }
        }
      }

      settings.ddlPageSize === 'A4'
        ? getA4MinInvoiceItemsHeight()
        : settings.ddlPageSize === 'A4 landscape' || 'A5'
        ? (minRowHeight = '80px')
        : (minRowHeight = '70px');

      data.date =
        _data.invoice_date || _data.date || _data.bill_date || _data.po_date;
      data.totalAmount = _data.exportConversionRate
        ? (_data.total_amount / _data.exportConversionRate)?.toFixed(2)
        : _data.total_amount;
      data.updatedAt = _data.updatedAt;
      /****************Number to Rupees with Paise*********/

      const strTotInt = _data.exportConversionRate
        ? toWordsUSD.convert(data.totalAmount)
        : toWords.convert(data.totalAmount);
      data.strTotal = strTotInt;

      data.balanceAmount = _data.balance_amount;
      data.paymentMode = _data.payment_type;
      data.bankPaymentType = _data.bankPaymentType;

      if (_data.discount_amount && _data.discount_amount > 0) {
        data.totalDiscount += parseFloat(_data.discount_amount);
      }

      if (_data.payment_type === 'Split') {
        data.paymentType = '';
        let bankMap = new Map();
        for (let payment of _data.splitPaymentList) {
          if (payment.amount > 0 && payment.paymentType === 'Cash') {
            data.paymentType += '<b>CASH: </b>â‚¹' + payment.amount + '<br/>';
          }
          if (payment.amount > 0 && payment.paymentType === 'Gift Card') {
            data.paymentType +=
              '<b>' +
              payment.paymentMode +
              '</b>: â‚¹' +
              payment.amount +
              '<br/>';
          }
          if (payment.amount > 0 && payment.paymentType === 'Custom Finance') {
            data.paymentType +=
              '<b>' +
              payment.paymentMode +
              '</b>: â‚¹' +
              payment.amount +
              '<br/>';
          }
          if (payment.amount > 0 && payment.paymentType === 'Exchange') {
            data.paymentType +=
              '<b>' +
              payment.paymentMode +
              '</b>: â‚¹' +
              payment.amount +
              '<br/>';
          }

          if (
            payment.paymentMode === 'UPI' ||
            payment.paymentMode === 'Internet Banking' ||
            payment.paymentMode === 'Credit Card' ||
            payment.paymentMode === 'Debit Card' ||
            payment.paymentMode === 'Cheque'
          ) {
            let mode = '';
            switch (payment.paymentMode) {
              case 'UPI':
                mode = 'UPI';
                break;
              case 'Internet Banking':
                mode = 'NEFT/RTGS';
                break;
              case 'Credit Card':
                mode = 'CARD';
                break;
              case 'Debit Card':
                mode = 'CARD';
                break;
              case 'Cheque':
                mode = 'CHEQUE';
                break;
              default:
                return '';
            }

            if (bankMap.has(mode)) {
              bankMap.set(mode, bankMap.get(mode) + payment.amount);
            } else {
              bankMap.set(mode, payment.amount);
            }
          }
        }

        if (bankMap) {
          for (let [key, value] of bankMap) {
            if (value !== 0) {
              data.paymentType += '<b>' + key + '</b>: â‚¹' + value + '<br/>';
            }
          }
        }
      } else if (
        _data.payment_type === 'cash' ||
        _data.payment_type === 'Cash'
      ) {
        data.paymentType =
          '<b>CASH: <b>' +
          (data.exportConversionRate ? data.exportCurrency : 'â‚¹') +
          ' ' +
          data.totalAmount +
          '<br/>';
      } else if (_data.payment_type === 'upi') {
        data.paymentType =
          '<b>UPI: <b>' +
          (data.exportConversionRate ? data.exportCurrency : 'â‚¹') +
          ' ' +
          data.totalAmount +
          '<br/>';
      } else if (_data.payment_type === 'internetbanking') {
        data.paymentType =
          '<b>NEFT/RTGS: <b>' +
          (data.exportConversionRate ? data.exportCurrency : 'â‚¹') +
          ' ' +
          data.totalAmount +
          '<br/>';
      } else if (_data.payment_type === 'cheque') {
        data.paymentType =
          '<b>CHEQUE: <b>' +
          (data.exportConversionRate ? data.exportCurrency : 'â‚¹') +
          ' ' +
          data.totalAmount +
          '<br/>';
      } else if (
        _data.payment_type === 'creditcard' ||
        _data.payment_type === 'debitcard'
      ) {
        data.paymentType =
          '<b>CARD: <b>' +
          (data.exportConversionRate ? data.exportCurrency : 'â‚¹') +
          ' ' +
          data.totalAmount +
          '<br/>';
      } else if (_data.payment_type === 'Credit') {
        let paymentsMap = new Map();
        for (let pI of listOfPaymentInData) {
          let amountToConsider = pI.linkedAmount;
          if (pI.paymentType === 'Split') {
            data.paymentType = '';
            for (let payment of pI.splitPaymentList) {
              let amount = 0;
              if (amountToConsider >= payment.amount) {
                amount = payment.amount;
                amountToConsider = amountToConsider - payment.amount;
              } else {
                amount = amountToConsider;
                amountToConsider = 0;
              }
              if (payment.amount > 0 && payment.paymentType === 'Cash') {
                if (paymentsMap.has('CASH')) {
                  paymentsMap.set('CASH', paymentsMap.get('CASH') + amount);
                } else {
                  paymentsMap.set('CASH', amount);
                }
              }
              if (payment.amount > 0 && payment.paymentType === 'Gift Card') {
                if (paymentsMap.has(payment.paymentMode)) {
                  paymentsMap.set(
                    payment.paymentMode,
                    paymentsMap.get(payment.paymentMode) + amount
                  );
                } else {
                  paymentsMap.set(payment.paymentMode, amount);
                }
              }
              if (
                payment.amount > 0 &&
                payment.paymentType === 'Custom Finance'
              ) {
                if (paymentsMap.has(payment.paymentMode)) {
                  paymentsMap.set(
                    payment.paymentMode,
                    paymentsMap.get(payment.paymentMode) + amount
                  );
                } else {
                  paymentsMap.set(payment.paymentMode, amount);
                }
              }
              if (payment.amount > 0 && payment.paymentType === 'Exchange') {
                if (paymentsMap.has(payment.paymentMode)) {
                  paymentsMap.set(
                    payment.paymentMode,
                    paymentsMap.get(payment.paymentMode) + amount
                  );
                } else {
                  paymentsMap.set(payment.paymentMode, amount);
                }
              }

              if (
                payment.paymentMode === 'UPI' ||
                payment.paymentMode === 'Internet Banking' ||
                payment.paymentMode === 'Credit Card' ||
                payment.paymentMode === 'Debit Card' ||
                payment.paymentMode === 'Cheque'
              ) {
                let mode = '';
                switch (payment.paymentMode) {
                  case 'UPI':
                    mode = 'UPI';
                    break;
                  case 'Internet Banking':
                    mode = 'NEFT/RTGS';
                    break;
                  case 'Credit Card':
                    mode = 'CARD';
                    break;
                  case 'Debit Card':
                    mode = 'CARD';
                    break;
                  case 'Cheque':
                    mode = 'CHEQUE';
                    break;
                  default:
                    return '';
                }
                if (paymentsMap.has(mode)) {
                  paymentsMap.set(mode, paymentsMap.get(mode) + amount);
                } else {
                  paymentsMap.set(mode, amount);
                }
              }

              if (amountToConsider === 0) {
                continue;
              }
            }
          } else if (pI.paymentType === 'cash' || pI.paymentType === 'Cash') {
            let amount = 0;
            if (amountToConsider >= pI.total) {
              amount = pI.total;
              amountToConsider = amountToConsider - pI.total;
            } else {
              amount = amountToConsider;
              amountToConsider = 0;
            }
            if (paymentsMap.has('CASH')) {
              paymentsMap.set('CASH', paymentsMap.get('CASH') + amount);
            } else {
              paymentsMap.set('CASH', amount);
            }

            if (amountToConsider === 0) {
              continue;
            }
          } else if (pI.paymentType === 'upi') {
            let amount = 0;
            if (amountToConsider >= pI.total) {
              amount = pI.total;
              amountToConsider = amountToConsider - pI.total;
            } else {
              amount = amountToConsider;
              amountToConsider = 0;
            }
            if (paymentsMap.has('UPI')) {
              paymentsMap.set('UPI', paymentsMap.get('UPI') + amount);
            } else {
              paymentsMap.set('UPI', amount);
            }

            if (amountToConsider === 0) {
              continue;
            }
          } else if (pI.paymentType === 'internetbanking') {
            let amount = 0;
            if (amountToConsider >= pI.total) {
              amount = pI.total;
              amountToConsider = amountToConsider - pI.total;
            } else {
              amount = amountToConsider;
              amountToConsider = 0;
            }
            if (paymentsMap.has('NEFT/RTGS')) {
              paymentsMap.set(
                'NEFT/RTGS',
                paymentsMap.get('NEFT/RTGS') + amount
              );
            } else {
              paymentsMap.set('NEFT/RTGS', amount);
            }

            if (amountToConsider === 0) {
              continue;
            }
          } else if (pI.paymentType === 'cheque') {
            let amount = 0;
            if (amountToConsider >= pI.total) {
              amount = pI.total;
              amountToConsider = amountToConsider - pI.total;
            } else {
              amount = amountToConsider;
              amountToConsider = 0;
            }
            if (paymentsMap.has('CHEQUE')) {
              paymentsMap.set('CHEQUE', paymentsMap.get('CHEQUE') + amount);
            } else {
              paymentsMap.set('CHEQUE', amount);
            }

            if (amountToConsider === 0) {
              continue;
            }
          } else if (
            pI.paymentType === 'creditcard' ||
            pI.paymentType === 'debitcard'
          ) {
            let amount = 0;
            if (amountToConsider >= pI.total) {
              amount = pI.total;
              amountToConsider = amountToConsider - pI.total;
            } else {
              amount = amountToConsider;
              amountToConsider = 0;
            }
            if (paymentsMap.has('CARD')) {
              paymentsMap.set('CARD', paymentsMap.get('CARD') + amount);
            } else {
              paymentsMap.set('CARD', amount);
            }

            if (amountToConsider === 0) {
              continue;
            }
          } else if (
            pI.paymentType === 'Sales Return' ||
            pI.paymentType === 'Purchases' ||
            pI.paymentType === 'Sales' ||
            pI.paymentType === 'Opening Balance' ||
            pI.paymentType === 'Purchases Return'
          ) {
            let amount = 0;
            if (amountToConsider >= pI.total) {
              amount = pI.total;
              amountToConsider = amountToConsider - pI.total;
            } else {
              amount = amountToConsider;
              amountToConsider = 0;
            }
            let type = '';
            switch (pI.paymentType) {
              case 'Sales Return':
                type = 'RETURNED SALE';
                break;
              case 'Sales':
                type = 'CREDIT SALE';
                break;
              case 'Purchases':
                type = 'CREDIT PURCHASE';
                break;
              case 'Purchases Return':
                type = 'RETURNED PURCHASE';
                break;
              case 'Opening Balance':
                type = 'OPENING BALANCE';
                break;
              default:
                return null;
            }
            if (paymentsMap.has(type)) {
              paymentsMap.set(type, paymentsMap.get(type) + amount);
            } else {
              paymentsMap.set(type, amount);
            }

            if (amountToConsider === 0) {
              continue;
            }
          }
        }

        if (paymentsMap) {
          for (let [key, value] of paymentsMap) {
            if (value !== 0) {
              data.paymentType += '<b>' + key + '</b>: â‚¹' + value + '<br/>';
            }
          }
        }
      }

      if (_data.tcsAmount > 0) {
        data.tcsAmount = _data.tcsAmount;
        data.tcsName = _data.tcsName;
        data.tcsRate = _data.tcsRate;
        data.tcsCode = _data.tcsCode;
      }

      if (_data.tdsAmount > 0) {
        data.tdsAmount = _data.tdsAmount;
        data.tdsName = _data.tdsName;
        data.tdsRate = _data.tdsRate;
        data.tdsCode = _data.tdsCode;
      }

      if (
        isTemple &&
        _data.invoice_number &&
        _data.star !== '' &&
        _data.gothra !== '' &&
        _data.rashi !== '' &&
        _data.star !== undefined &&
        _data.gothra !== undefined &&
        +data.rashi !== undefined
      ) {
        data.astrologyDetails =
          '<strong>' +
          '<br />Astrology Details:' +
          '</strong><br/>' +
          ('Gothra: ' + _data.gothra + '<br/>') +
          ('Rashi: ' + _data.rashi + '<br/>') +
          ('Star: ' + _data.star + '<br/>');
      }

      if (
        (isTemple &&
          _data.invoice_number &&
          _data.templeSpecialDayName !== '' &&
          _data.templeSpecialDayName !== undefined &&
          _data.templeSpecialDayName !== null) ||
        (_data.templeSpecialDayStartDate !== '' &&
          _data.templeSpecialDayStartDate !== undefined &&
          _data.templeSpecialDayStartDate !== null &&
          _data.templeSpecialDayEndDate !== '' &&
          _data.templeSpecialDayEndDate !== undefined &&
          _data.templeSpecialDayEndDate !== null) ||
        (_data.templeSpecialDayTimings !== '' &&
          _data.templeSpecialDayTimings !== undefined &&
          _data.templeSpecialDayTimings !== null) ||
        (_data.templeCustomTypeComments !== '' &&
          _data.templeCustomTypeComments !== undefined &&
          _data.templeCustomTypeComments !== null)
      ) {
        data.additionalTempleDetails =
          '<strong>' +
          '<br />For:' +
          '</strong><br/>' +
          (_data.templeSpecialDayName !== '' &&
          _data.templeSpecialDayName !== undefined
            ? _data.templeSpecialDayName + '<br/>'
            : '') +
          (_data.templeSpecialDayStartDate !== '' &&
          _data.templeSpecialDayStartDate !== undefined &&
          _data.templeSpecialDayEndDate !== '' &&
          _data.templeSpecialDayEndDate !== undefined
            ? _data.templeSpecialDayStartDate +
              ' - ' +
              _data.templeSpecialDayEndDate +
              '<br/>'
            : '') +
          (_data.templeSpecialDayTimings !== '' &&
          _data.templeSpecialDayTimings !== undefined
            ? _data.templeSpecialDayTimings + '<br/>'
            : '') +
          (_data.templeCustomTypeComments !== '' &&
          _data.templeCustomTypeComments !== undefined
            ? _data.templeCustomTypeComments + '<br/>'
            : '');
      }

      data.terms =
        TxnSettings.terms !== '' &&
        TxnSettings.terms !== undefined &&
        TxnSettings.terms !== null
          ? TxnSettings.terms
          : settings.strTerms !== '' &&
            settings.strTerms !== undefined &&
            settings.strTerms !== null
          ? settings.strTerms
          : '';
    };

    const getMetalNRates = () => {
      if (_data.rateList) {
        return _data.rateList.map((metal, index) => {
          return (
            <p style={{ textAlign: 'left', flex: 1, wordBreak: 'keep-all' }}>
              <b>
                {metal.metal} {metal.purity} :{' '}
              </b>
              <b>â‚¹{metal.rateByGram} / gram </b>
            </p>
          );
        });
      }
    };

    const getA4MinInvoiceItemsHeight = () => {
      minRowHeight = '280px';

      if (settings.theme === 'Theme 1') {
        if (data.irnNo !== '') {
          minRowHeight = '260px';
        } else {
          minRowHeight = '500px';
        }
      } else if (settings.theme === 'Theme 6') {
        if (data.irnNo !== '') {
          minRowHeight = '260px';
        } else {
          minRowHeight = '400px';
        }
      } else if (settings.theme === 'Theme 7') {
        if (data.irnNo !== '') {
          minRowHeight = isPackagePreivew ? '260px' : '380px';
        } else {
          minRowHeight = '420px';
        }
      } else if (settings.theme === 'Theme 4') {
        minRowHeight = '260px';
      }
    };

    const getUnitShortName = (qtyUnit) => {
      let unitCodeResult = unitHelper
        .getUnits()
        .find((e) => e.fullName === qtyUnit);

      return unitCodeResult ? unitCodeResult.shortName : '';
    };

    const getSerialNumber = (data) => {
      let result = data.serialOrImeiNo;
      if (data.serialNo && data.serialNo.length > 0) {
        result = data.serialNo.join(', ');
      }
      return result;
    };

    const getInvoiceRows = () => {
      if (isPackagePreivew)
        return (
          <PackageDetailsRow theme={settings.theme} data={_data.item_list} />
        );
      totalGrossWt = 0.0;
      totalNetWt = 0.0;
      totalStoneWt = 0.0;
      data.totalCess = 0;
      data.totalTaxableAmount = 0;
      data.subTotal = 0;
      data.subTotalDisc = 0;
      data.totalDiscount = 0;
      totalqty = 0;
      data.itemTotal = 0;

      if (_data.discount_amount && _data.discount_amount > 0) {
        //data.subTotalDisc += parseFloat(_data.discount_amount);
        data.totalDiscount += parseFloat(_data.discount_amount);
      }

      return _data.item_list.map((item, index) => {
        let mrp = 0;
        if (
          _data.sales_return_number ||
          _data.invoice_number ||
          _data.job_work_in_invoice_number ||
          _data.sale_order_invoice_number
        ) {
          mrp = parseFloat(item.mrp).toFixed(2);
        } else if (
          _data.purchase_return_number ||
          _data.bill_number ||
          _data.purchase_order_invoice_number ||
          _data.backToBackPurchaseNumber
        ) {
          mrp = parseFloat(item.purchased_price).toFixed(2);
        } else if (_data.delivery_challan_invoice_number) {
          mrp = parseFloat(item.mrp).toFixed(2);
        }

        if (item.pricePerGram > 0) {
          mrp = parseFloat(item.pricePerGram).toFixed(2);
        }

        let offerPrice = parseFloat(item.offer_price).toFixed(2);

        const cgstPercent = parseFloat(item.cgst);
        const sgstPercent = parseFloat(item.sgst);
        const igstPercent = parseFloat(item.igst);
        const gstPercent =
          parseFloat(cgstPercent) +
          parseFloat(sgstPercent) +
          parseFloat(igstPercent);
        const cessPercent = parseFloat(item.cess);
        const qty = parseFloat(item.qty);
        let tempMrp = mrp;
        let totalGST = 0;
        if (_data.sales_return_number || _data.invoice_number) {
          if (offerPrice < mrp && offerPrice !== 0) {
            tempMrp = offerPrice;
          }
        }

        if (cgstPercent) {
          totalGST += parseFloat(item.cgst_amount);
          // totalCGST += parseFloat(item.cgst_amount);
        }
        if (sgstPercent) {
          totalGST += parseFloat(item.sgst_amount);
          // totalSGST += parseFloat(item.sgst_amount);
        }

        if (igstPercent) {
          totalGST += parseFloat(item.igst_amount);
          //  totalIGST += parseFloat(item.igst_amount);
        }

        if (item.grossWeight > 0) {
          totalGrossWt += parseFloat(item.grossWeight);
        }

        if (item.netWeight > 0) {
          totalNetWt += parseFloat(item.netWeight);
        }

        if (item.stoneWeight > 0) {
          totalStoneWt += parseFloat(item.stoneWeight);
        }

        totalqty += parseFloat(item.qty);
        totalfreeqty += item.freeQty ? parseFloat(item.freeQty) : 0;
        totaltax_gst += totalGST;

        if (typeof item.discount_amount === 'undefined') {
          item.discount_amount = 0;
        }

        item.totalCess = 0;
        item.totalDiscount = 0;

        if (item.discount_amount > 0 && item.discount_amount) {
          data.subTotalDisc += parseFloat(item.discount_amount);
          data.totalDiscount += parseFloat(item.discount_amount);
          item.totalDiscount = parseFloat(item.discount_amount);
        }

        if (item.cess > 0) {
          data.totalCess += qty * parseFloat(item.cess);
          item.totalCess = qty * parseFloat(item.cess);
        }

        if (item.addOnProperties && item.addOnProperties.length > 0) {
          item.addOnProperties.forEach((item) => {
            if (item.cess > 0) {
              data.totalCess += qty * parseFloat(item.cess);
            }
          });
        }

        let totalMrp = 0;

        if (item.pricePerGram > 0) {
          let itemPrice = 0;
          let netWeight = parseFloat(item.netWeight || 0);
          if (parseFloat(item.wastageGrams || 0) > 0 && netWeight > 0) {
            netWeight = netWeight + parseFloat(item.wastageGrams || 0);
          }

          if (item.pricePerGram > 0 && netWeight > 0) {
            itemPrice =
              parseFloat(item.pricePerGram || 0) * parseFloat(netWeight || 0);
          }

          //calculate wastage percentage
          let wastageAmount = 0;
          if (
            item.pricePerGram > 0 &&
            netWeight > 0 &&
            parseFloat(item.wastagePercentage || 0) > 0
          ) {
            wastageAmount = parseFloat(
              (itemPrice * parseFloat(item.wastagePercentage || 0)) / 100 || 0
            ).toFixed(2);
          }

          //add making charges amount if any to mrp_before_tax
          if (item.makingChargeType === 'percentage') {
            let percentage = item.makingChargePercent || 0;

            // making charge
            item.makingChargeAmount = parseFloat(
              (itemPrice * percentage) / 100 || 0
            ).toFixed(2);
          } else if (item.makingChargeType === 'amount') {
            item.makingChargePercent =
              Math.round(
                ((item.makingChargeAmount / itemPrice) * 100 || 0) * 100
              ) / 100;
          }

          if (netWeight > 0) {
            if (!item.makingChargeIncluded) {
              itemPrice =
                itemPrice +
                parseFloat(item.makingChargePerGramAmount || 0) *
                  parseFloat(item.netWeight);
            }
          }

          if (!item.makingChargeIncluded) {
            itemPrice = itemPrice + parseFloat(item.makingChargeAmount || 0);
          }

          if (item.stoneCharge > 0) {
            itemPrice = itemPrice + parseFloat(item.stoneCharge || 0);
          }

          if (wastageAmount > 0) {
            itemPrice = itemPrice + parseFloat(wastageAmount || 0);
          }

          totalMrp = parseFloat(itemPrice);
        } else {
          totalMrp = qty * parseFloat(mrp);
        }

        if (
          _data.sales_return_number ||
          _data.invoice_number ||
          _data.job_work_in_invoice_number ||
          _data.sale_order_invoice_number
        ) {
          data.subTotal += qty * parseFloat(item.mrp_before_tax);
        } else {
          data.subTotal += qty * parseFloat(item.purchased_price_before_tax);
        }

        item.taxableAmount = parseFloat(item.amount - totalGST);
        data.totalTaxableAmount += item.taxableAmount;
        if (_data.exportConversionRate > 0) {
          data.itemTotal += item.amountOtherCurrency;
        } else {
          data.itemTotal += item.amount;
        }

        return (
          <>
            <div
              style={{
                display: 'flex',
                flexDirection: 'row'
              }}
              key={`${index}value`}
            >
              {settings.theme === 'Theme 2' ||
              settings.theme === 'Theme 3' ||
              settings.theme === 'Theme 7' ? (
                <>
                  <div
                    style={{
                      borderRight: '1px solid',
                      textAlign: 'center',
                      width: '10%',
                      paddingTop: '0px',
                      paddingBottom: '0px'
                    }}
                  >
                    {index + 1}
                  </div>
                  <div
                    style={{
                      borderRight: '1px solid',
                      paddingLeft: '3px',
                      display: 'flex',
                      flexDirection: 'row',
                      width: '30%',
                      paddingTop: '0px',
                      paddingBottom: '0px'
                    }}
                  >
                    <div
                      style={{
                        paddingBottom: '0px',
                        paddingRight: '3px',
                        display: 'flex',
                        flexDirection: 'column'
                      }}
                    >
                      <div>
                        <p
                          style={{
                            marginTop: '0px',
                            paddingTop: '0px',
                            paddingBottom: '0px',
                            marginBottom: '0px'
                          }}
                        >
                          {item.item_name}
                        </p>
                      </div>
                      {TxnEnableFieldsMap.get('display_product_image') &&
                        item.imageUrl &&
                        item.imageUrl !== '' && (
                          <div style={{ paddingTop: '2px' }}>
                            <Box
                              component="img"
                              style={{
                                height: '50px',
                                width: '50px',
                                paddingBottom: '2px'
                              }}
                              src={item.imageUrl}
                            />
                          </div>
                        )}

                      {TxnEnableFieldsMap.get('display_product_description') &&
                        item.description !== '' && (
                          <div
                            style={{
                              paddingTop: '0px',
                              marginTop: '0px',
                              paddingBottom: '0px'
                            }}
                          >
                            <p
                              style={{
                                paddingTop: '0px',
                                marginTop: '0px',
                                paddingBottom: '0px',
                                marginBottom: '0px',
                                fontSize: '8px'
                              }}
                            >
                              {item.description}
                            </p>
                          </div>
                        )}
                    </div>
                  </div>

                  {_data.backToBackPurchaseNumber && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '20%',
                        textAlign: 'right'
                      }}
                    >
                      {item.vendorName}
                    </div>
                  )}

                  {TxnEnableFieldsMap.get('display_hsn') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '16%',
                        textAlign: 'right'
                      }}
                    >
                      {item.hsn}
                    </div>
                  )}

                  {/********* Serial/IMEI No. *********/}
                  {TxnEnableFieldsMap.get('display_product_serial_imei') && (
                    <div
                      style={{
                        borderRight: '1px solid ',
                        paddingLeft: '3px',
                        width: '15%',
                        textAlign: 'right'
                      }}
                    >
                      {getSerialNumber(item)}
                    </div>
                  )}

                  {/* Batch Number */}
                  {TxnEnableFieldsMap.get('display_product_batch_number') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '16%',
                        textAlign: 'right'
                      }}
                    >
                      {item.batchNumber}
                    </div>
                  )}

                  {/* Barcode */}
                  {TxnEnableFieldsMap.get('display_product_barcode') && (
                    <div
                      style={{
                        borderRight: '1px solid ',
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.barcode}
                    </div>
                  )}

                  {/* Brand */}
                  {TxnEnableFieldsMap.get('display_product_brand') && (
                    <div
                      style={{
                        borderRight: '1px solid ',
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.brandName}
                    </div>
                  )}

                  {/* Model Number */}
                  {TxnEnableFieldsMap.get('display_product_model_no') && (
                    <div
                      style={{
                        borderRight: '1px solid ',
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.modelNo}
                    </div>
                  )}

                  {/* Manufacturing Date */}
                  {TxnEnableFieldsMap.get(
                    'display_product_manufacturing_date'
                  ) && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '16%',
                        textAlign: 'right'
                      }}
                    >
                      {formatMfgExpDate(item.mfDate)}
                    </div>
                  )}

                  {/* Expiry Date */}
                  {TxnEnableFieldsMap.get('display_product_expiry_date') && (
                    <div
                      style={{
                        borderRight: '1px solid ',
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {formatMfgExpDate(item.expiryDate)}
                    </div>
                  )}

                  {TxnEnableFieldsMap.get('display_product_quantity') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '12%',
                        textAlign: 'right'
                      }}
                    >
                      {item.qty}
                    </div>
                  )}

                  {/* Free Quantity */}
                  {TxnEnableFieldsMap.get('display_product_free_quantity') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '12%',
                        textAlign: 'right'
                      }}
                    >
                      {item.freeQty}
                    </div>
                  )}

                  {/* Unit */}
                  {TxnEnableFieldsMap.get('display_product_unit') && (
                    <div
                      style={{
                        borderRight: '1px solid ',
                        paddingRight: '3px',
                        width: '12%',
                        textAlign: 'right'
                      }}
                    >
                      {getUnitShortName(item.qtyUnit)}
                    </div>
                  )}

                  {TxnEnableFieldsMap.get('display_product_mrp') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '15%',
                        textAlign: 'right'
                      }}
                    >
                      {item.finalMRPPrice}
                    </div>
                  )}

                  {_data.exportConversionRate === 0 &&
                    TxnEnableFieldsMap.get('display_product_price') && (
                      <div
                        style={{
                          borderRight: '1px solid',
                          width: '15%',
                          textAlign: 'right',
                          paddingRight: '3px'
                        }}
                      >
                        {mrp}
                      </div>
                    )}

                  {_data.exportConversionRate > 0 &&
                    TxnEnableFieldsMap.get(
                      'display_product_price_other_currency'
                    ) && (
                      <div
                        style={{
                          borderRight: '1px solid',
                          width: '15%',
                          textAlign: 'right',
                          paddingRight: '3px'
                        }}
                      >
                        {item.mrpOtherCurrency?.toFixed(2)}
                      </div>
                    )}

                  {TxnEnableFieldsMap.get('display_product_price_per_gram') && (
                    <div
                      style={{
                        borderRight: '1px solid ',
                        width: '30%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.pricePerGram}
                    </div>
                  )}

                  {TxnEnableFieldsMap.get('display_product_gross_weight') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '15%',
                        textAlign: 'right'
                      }}
                    >
                      {item.grossWeight}
                    </div>
                  )}

                  {TxnEnableFieldsMap.get('display_product_stone_weight') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '15%',
                        textAlign: 'right'
                      }}
                    >
                      {item.stoneWeight}
                    </div>
                  )}

                  {TxnEnableFieldsMap.get('display_product_net_weight') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '15%',
                        textAlign: 'right'
                      }}
                    >
                      {item.netWeight}
                    </div>
                  )}

                  {TxnEnableFieldsMap.get('display_product_wastage') && (
                    <>
                      <div
                        style={{
                          borderRight: '1px solid',
                          paddingRight: '3px',
                          width: '15%',
                          textAlign: 'right'
                        }}
                      >
                        {item.wastagePercentage
                          ? item.wastagePercentage + '%'
                          : item.wastageGrams
                          ? item.wastageGrams + 'g'
                          : '0g'}
                      </div>
                    </>
                  )}

                  {TxnEnableFieldsMap.get('display_product_making_charge') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '15%',
                        textAlign: 'right'
                      }}
                    >
                      {item.makingChargeAmount}
                    </div>
                  )}

                  {TxnEnableFieldsMap.get(
                    'display_product_making_charge_per_gram'
                  ) && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '15%',
                        textAlign: 'right'
                      }}
                    >
                      {item.makingChargePerGramAmount}
                    </div>
                  )}

                  {TxnEnableFieldsMap.get('display_product_stone_charge') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '12%',
                        textAlign: 'right'
                      }}
                    >
                      {item.stoneCharge}
                    </div>
                  )}

                  {TxnEnableFieldsMap.get('display_product_purity') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '12%',
                        textAlign: 'right'
                      }}
                    >
                      {item.purity}
                    </div>
                  )}

                  {/* Copper */}
                  {TxnEnableFieldsMap.get('display_product_copper') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '12%',
                        textAlign: 'right'
                      }}
                    >
                      {item.copperGrams}
                    </div>
                  )}

                  {TxnEnableFieldsMap.get('display_product_discount') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '15%',
                        textAlign: 'right'
                      }}
                    >
                      {typeof item.discount_amount !== 'undefined'
                        ? getFloatWithTwoDecimal(item.discount_amount)
                        : '0'}
                    </div>
                  )}

                  {_data.exportConversionRate === 0 &&
                    TxnEnableFieldsMap.get(
                      'display_product_gst_percentage'
                    ) && (
                      <div
                        style={{
                          borderRight: '1px solid',
                          paddingRight: '3px',
                          width: '15%',
                          textAlign: 'right'
                        }}
                      >
                        {getFloatWithTwoDecimal(gstPercent)}%
                      </div>
                    )}

                  {_data.exportConversionRate === 0 &&
                    TxnEnableFieldsMap.get('display_product_gst') && (
                      <div
                        style={{
                          borderRight: '1px solid',
                          paddingRight: '3px',
                          width: '15%',
                          textAlign: 'right'
                        }}
                      >
                        {getFloatWithTwoDecimal(totalGST)}
                      </div>
                    )}

                  {data.isSale ? (
                    <>
                      {_data.exportConversionRate === 0 &&
                        TxnEnableFieldsMap.get(
                          'display_product_total_amount'
                        ) && (
                          <div
                            style={{
                              width: '25%',
                              textAlign: 'right',
                              paddingRight: '3px'
                            }}
                          >
                            {(
                              getFloatWithTwoDecimal(item.taxableAmount) /
                              (_data.exportConversionRate || 1)
                            ).toFixed(2)}
                          </div>
                        )}
                    </>
                  ) : (
                    <div
                      style={{
                        width: '25%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {getFloatWithTwoDecimal(item.taxableAmount)}
                    </div>
                  )}

                  {_data.exportConversionRate > 0 &&
                    TxnEnableFieldsMap.get(
                      'display_product_total_amount_other'
                    ) &&
                    item.amountOtherCurrency && (
                      <div
                        style={{
                          borderLeft: '1px solid',
                          paddingRight: '3px',
                          width: '25%',
                          textAlign: 'right'
                        }}
                      >
                        {item.amountOtherCurrency?.toFixed(2)}
                      </div>
                    )}
                </>
              ) : settings.theme === 'Theme 5' ? (
                <>
                  <div
                    style={{
                      borderRight: '1px solid',
                      textAlign: 'center',
                      width: '10%',
                      paddingTop: '0px',
                      marginTop: '0px',
                      paddingBottom: '0px'
                    }}
                  >
                    {index + 1}
                  </div>
                  <div
                    style={{
                      borderRight: '1px solid',
                      paddingLeft: '3px',
                      display: 'flex',
                      flexDirection: 'row',
                      width: '30%',
                      paddingTop: '0px',
                      marginTop: '0px',
                      paddingBottom: '0px'
                    }}
                  >
                    <div
                      style={{
                        paddingBottom: '0px',
                        paddingRight: '3px',
                        display: 'flex',
                        flexDirection: 'column',
                        paddingTop: '0px',
                        marginTop: '0px',
                        marginBottom: '0px'
                      }}
                    >
                      <div>
                        <p
                          style={{
                            paddingTop: '0px',
                            marginTop: '0px',
                            marginBottom: '0px',
                            paddingBottom: '0px'
                          }}
                        >
                          {item.item_name}
                        </p>
                      </div>
                      {TxnEnableFieldsMap.get('display_product_image') &&
                        item.imageUrl &&
                        item.imageUrl !== '' && (
                          <div style={{ paddingTop: '0px' }}>
                            <Box
                              component="img"
                              style={{
                                height: '50px',
                                width: '50px',
                                paddingBottom: '2px'
                              }}
                              src={item.imageUrl}
                            />
                          </div>
                        )}
                      {TxnEnableFieldsMap.get(
                        'display_product_description'
                      ) && (
                        <div
                          style={{
                            paddingTop: '0px',
                            marginTop: '0px',
                            marginBottom: '0px',
                            paddingBottom: '0px'
                          }}
                        >
                          <p
                            style={{
                              paddingTop: '0px',
                              marginTop: '0px',
                              marginBottom: '0px',
                              paddingBottom: '0px',
                              fontSize: '8px'
                            }}
                          >
                            {item.description}
                          </p>
                        </div>
                      )}
                    </div>
                  </div>

                  {_data.backToBackPurchaseNumber && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '20%',
                        textAlign: 'right'
                      }}
                    >
                      {item.vendorName}
                    </div>
                  )}

                  {TxnEnableFieldsMap.get('display_hsn') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.hsn}
                    </div>
                  )}

                  {/********* Serial/IMEI No. *********/}
                  {TxnEnableFieldsMap.get('display_product_serial_imei') && (
                    <div
                      style={{
                        borderRight: '1px solid ',
                        paddingLeft: '3px',
                        width: '15%',
                        textAlign: 'right'
                      }}
                    >
                      {getSerialNumber(item)}
                    </div>
                  )}

                  {/* Batch Number */}
                  {TxnEnableFieldsMap.get('display_product_batch_number') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.batchNumber}
                    </div>
                  )}

                  {/* Barcode */}
                  {TxnEnableFieldsMap.get('display_product_barcode') && (
                    <div
                      style={{
                        borderRight: '1px solid ',
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.barcode}
                    </div>
                  )}

                  {/* Brand */}
                  {TxnEnableFieldsMap.get('display_product_brand') && (
                    <div
                      style={{
                        borderRight: '1px solid ',
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.brandName}
                    </div>
                  )}

                  {/* Model Number */}
                  {TxnEnableFieldsMap.get('display_product_model_no') && (
                    <div
                      style={{
                        borderRight: '1px solid ',
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.modelNo}
                    </div>
                  )}

                  {/* Manufacturing Date */}
                  {TxnEnableFieldsMap.get(
                    'display_product_manufacturing_date'
                  ) && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {formatMfgExpDate(item.mfDate)}
                    </div>
                  )}

                  {/* Expiry Date */}
                  {TxnEnableFieldsMap.get('display_product_expiry_date') && (
                    <div
                      style={{
                        borderRight: '1px solid ',
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {formatMfgExpDate(item.expiryDate)}
                    </div>
                  )}

                  {TxnEnableFieldsMap.get('display_product_quantity') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '12%',
                        textAlign: 'right'
                      }}
                    >
                      {item.qty}
                    </div>
                  )}

                  {/* Free Quantity */}
                  {TxnEnableFieldsMap.get('display_product_free_quantity') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '12%',
                        textAlign: 'right'
                      }}
                    >
                      {item.freeQty}
                    </div>
                  )}

                  {/* Unit */}
                  {TxnEnableFieldsMap.get('display_product_unit') && (
                    <div
                      style={{
                        borderRight: '1px solid ',
                        paddingRight: '3px',
                        width: '12%',
                        textAlign: 'right'
                      }}
                    >
                      {getUnitShortName(item.qtyUnit)}
                    </div>
                  )}

                  {_data.exportConversionRate === 0 &&
                    TxnEnableFieldsMap.get('display_product_mrp') && (
                      <div
                        style={{
                          borderRight: '1px solid',
                          paddingRight: '3px',
                          width: '15%',
                          textAlign: 'right'
                        }}
                      >
                        {item.finalMRPPrice}
                      </div>
                    )}

                  {TxnEnableFieldsMap.get('display_product_price') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        width: '15%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {mrp}
                    </div>
                  )}

                  {_data.exportConversionRate > 0 &&
                    TxnEnableFieldsMap.get(
                      'display_product_price_other_currency'
                    ) && (
                      <div
                        style={{
                          borderRight: '1px solid',
                          width: '15%',
                          textAlign: 'right',
                          paddingRight: '3px'
                        }}
                      >
                        {item.mrpOtherCurrency?.toFixed(2)}
                      </div>
                    )}

                  {TxnEnableFieldsMap.get('display_product_price_per_gram') && (
                    <div
                      style={{
                        borderRight: '1px solid ',
                        width: '30%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.pricePerGram}
                    </div>
                  )}

                  {TxnEnableFieldsMap.get('display_product_gross_weight') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '15%',
                        textAlign: 'right'
                      }}
                    >
                      {item.grossWeight}
                    </div>
                  )}

                  {TxnEnableFieldsMap.get('display_product_stone_weight') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '15%',
                        textAlign: 'right'
                      }}
                    >
                      {item.stoneWeight}
                    </div>
                  )}

                  {TxnEnableFieldsMap.get('display_product_net_weight') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '15%',
                        textAlign: 'right'
                      }}
                    >
                      {item.netWeight}
                    </div>
                  )}

                  {TxnEnableFieldsMap.get('display_product_wastage') && (
                    <>
                      <div
                        style={{
                          borderRight: '1px solid',
                          paddingRight: '3px',
                          width: '15%',
                          textAlign: 'right'
                        }}
                      >
                        {item.wastagePercentage
                          ? item.wastagePercentage + '%'
                          : item.wastageGrams
                          ? item.wastageGrams + 'g'
                          : '0g'}
                      </div>
                    </>
                  )}

                  {TxnEnableFieldsMap.get('display_product_making_charge') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '15%',
                        textAlign: 'right'
                      }}
                    >
                      {item.makingChargeAmount}
                    </div>
                  )}

                  {TxnEnableFieldsMap.get(
                    'display_product_making_charge_per_gram'
                  ) && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '15%',
                        textAlign: 'right'
                      }}
                    >
                      {item.makingChargePerGramAmount}
                    </div>
                  )}

                  {TxnEnableFieldsMap.get('display_product_stone_charge') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '12%',
                        textAlign: 'right'
                      }}
                    >
                      {item.stoneCharge}
                    </div>
                  )}

                  {TxnEnableFieldsMap.get('display_product_purity') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '12%',
                        textAlign: 'right'
                      }}
                    >
                      {item.purity}
                    </div>
                  )}

                  {/* Copper */}
                  {TxnEnableFieldsMap.get('display_product_copper') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '12%',
                        textAlign: 'right'
                      }}
                    >
                      {item.copperGrams}
                    </div>
                  )}

                  {TxnEnableFieldsMap.get('display_product_discount') && (
                    <div
                      style={{
                        borderRight: '1px solid',
                        paddingRight: '3px',
                        width: '15%',
                        textAlign: 'right'
                      }}
                    >
                      {typeof item.discount_amount !== 'undefined'
                        ? getFloatWithTwoDecimal(item.discount_amount)
                        : '0'}
                    </div>
                  )}

                  {_data.exportConversionRate === 0 &&
                    TxnEnableFieldsMap.get(
                      'display_product_gst_percentage'
                    ) && (
                      <div
                        style={{
                          borderRight: '1px solid',
                          paddingRight: '3px',
                          width: '15%',
                          textAlign: 'right'
                        }}
                      >
                        {getFloatWithTwoDecimal(gstPercent)}%
                      </div>
                    )}

                  {_data.exportConversionRate === 0 &&
                    TxnEnableFieldsMap.get('display_product_gst') && (
                      <div
                        style={{
                          borderRight: '1px solid',
                          paddingRight: '3px',
                          width: '15%',
                          textAlign: 'right'
                        }}
                      >
                        {getFloatWithTwoDecimal(totalGST)}
                      </div>
                    )}

                  {data.isSale ? (
                    <>
                      {_data.exportConversionRate === 0 &&
                        TxnEnableFieldsMap.get(
                          'display_product_total_amount'
                        ) && (
                          <div
                            style={{
                              width: '25%',
                              textAlign: 'right',
                              paddingRight: '3px'
                            }}
                          >
                            {(
                              getFloatWithTwoDecimal(item.taxableAmount) /
                              (_data.exportConversionRate || 1)
                            ).toFixed(2)}
                          </div>
                        )}
                    </>
                  ) : (
                    <div
                      style={{
                        width: '25%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {getFloatWithTwoDecimal(item.taxableAmount)}
                    </div>
                  )}

                  {_data.exportConversionRate > 0 &&
                    TxnEnableFieldsMap.get(
                      'display_product_total_amount_other'
                    ) &&
                    item.amountOtherCurrency && (
                      <div
                        style={{
                          paddingRight: '3px',
                          borderLeft: '1px solid',
                          width: '25%',
                          textAlign: 'right'
                        }}
                      >
                        {item.amountOtherCurrency?.toFixed(2)}
                      </div>
                    )}
                </>
              ) : settings.theme === 'Theme 8' ? (
                <div
                  style={{
                    width: '100%',
                    display: 'flex',
                    flexDirection: 'row'
                  }}
                >
                  <p
                    style={{
                      textAlign: 'center',
                      width: '10%',
                      paddingTop: '0px',
                      marginTop: '0px',
                      marginBottom: '0px'
                    }}
                  >
                    {index + 1}
                  </p>
                  <div
                    style={{
                      paddingLeft: '3px',
                      display: 'flex',
                      flexDirection: 'row',
                      width: '30%',
                      paddingTop: '0px',
                      marginTop: '0px',
                      marginBottom: '0px'
                    }}
                  >
                    <div
                      style={{
                        paddingBottom: '0px',
                        paddingRight: '3px',
                        display: 'flex',
                        flexDirection: 'column',
                        paddingTop: '0px',
                        marginTop: '0px',
                        marginBottom: '0px'
                      }}
                    >
                      <div>
                        <p
                          style={{
                            paddingTop: '0px',
                            marginTop: '0px',
                            marginBottom: '0px',
                            paddingBottom: '0px'
                          }}
                        >
                          {item.item_name}
                        </p>
                      </div>
                      {TxnEnableFieldsMap.get('display_product_image') &&
                        item.imageUrl &&
                        item.imageUrl !== '' && (
                          <div style={{ paddingTop: '2px' }}>
                            <Box
                              component="img"
                              style={{
                                height: '50px',
                                width: '50px',
                                paddingBottom: '2px'
                              }}
                              src={item.imageUrl}
                            />
                          </div>
                        )}
                      {TxnEnableFieldsMap.get(
                        'display_product_description'
                      ) && (
                        <div
                          style={{
                            paddingTop: '0px',
                            marginTop: '0px',
                            marginBottom: '0px',
                            paddingBottom: '0px'
                          }}
                        >
                          <p
                            style={{
                              paddingTop: '0px',
                              marginTop: '0px',
                              marginBottom: '0px',
                              paddingBottom: '0px',
                              fontSize: '8px'
                            }}
                          >
                            {item.description}
                          </p>
                        </div>
                      )}
                    </div>
                  </div>

                  {_data.backToBackPurchaseNumber && (
                    <div
                      style={{
                        width: '20%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.vendorName}
                    </div>
                  )}

                  {/* HSN */}
                  {TxnEnableFieldsMap.get('display_hsn') && (
                    <p
                      style={{
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.hsn}
                    </p>
                  )}
                  {/********* Serial/IMEI No. *********/}
                  {TxnEnableFieldsMap.get('display_product_serial_imei') && (
                    <p style={{ width: '15%', textAlign: 'right' }}>
                      {getSerialNumber(item)}
                    </p>
                  )}

                  {/* Batch Number */}
                  {TxnEnableFieldsMap.get('display_product_batch_number') && (
                    <p
                      style={{
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.batchNumber}
                    </p>
                  )}

                  {/* Barcode */}
                  {TxnEnableFieldsMap.get('display_product_barcode') && (
                    <p
                      style={{
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.barcode}
                    </p>
                  )}

                  {/* Brand */}
                  {TxnEnableFieldsMap.get('display_product_brand') && (
                    <p
                      style={{
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.brandName}
                    </p>
                  )}

                  {/* Model Number */}
                  {TxnEnableFieldsMap.get('display_product_model_no') && (
                    <p
                      style={{
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.modelNo}
                    </p>
                  )}

                  {/* Manufacturing Date */}
                  {TxnEnableFieldsMap.get(
                    'display_product_manufacturing_date'
                  ) && (
                    <p
                      style={{
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {formatMfgExpDate(item.mfDate)}
                    </p>
                  )}

                  {/* Expiry Date */}
                  {TxnEnableFieldsMap.get('display_product_expiry_date') && (
                    <p
                      style={{
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {formatMfgExpDate(item.expiryDate)}
                    </p>
                  )}

                  {TxnEnableFieldsMap.get('display_product_quantity') && (
                    <p style={{ width: '12%', textAlign: 'right' }}>
                      {item.qty}
                    </p>
                  )}

                  {/* Free Quantity */}
                  {TxnEnableFieldsMap.get('display_product_free_quantity') && (
                    <p style={{ width: '12%', textAlign: 'right' }}>
                      {item.freeQty}
                    </p>
                  )}

                  {/* Unit */}
                  {TxnEnableFieldsMap.get('display_product_unit') && (
                    <p style={{ width: '12%', textAlign: 'right' }}>
                      {getUnitShortName(item.qtyUnit)}
                    </p>
                  )}

                  {TxnEnableFieldsMap.get('display_product_mrp') && (
                    <p style={{ width: '15%', textAlign: 'right' }}>
                      {item.finalMRPPrice}
                    </p>
                  )}

                  {_data.exportConversionRate === 0 &&
                    TxnEnableFieldsMap.get('display_product_price') && (
                      <p
                        style={{
                          width: '15%',
                          textAlign: 'right',
                          paddingRight: '3px'
                        }}
                      >
                        {mrp}
                      </p>
                    )}

                  {_data.exportConversionRate > 0 &&
                    TxnEnableFieldsMap.get(
                      'display_product_price_other_currency'
                    ) && (
                      <p
                        style={{
                          width: '15%',
                          textAlign: 'right',
                          paddingRight: '3px'
                        }}
                      >
                        {item.mrpOtherCurrency?.toFixed(2)}
                      </p>
                    )}

                  {TxnEnableFieldsMap.get('display_product_price_per_gram') && (
                    <p
                      style={{
                        width: '30%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.pricePerGram}
                    </p>
                  )}

                  {TxnEnableFieldsMap.get('display_product_gross_weight') && (
                    <p style={{ width: '15%', textAlign: 'right' }}>
                      {item.grossWeight}
                    </p>
                  )}

                  {TxnEnableFieldsMap.get('display_product_stone_weight') && (
                    <p style={{ width: '15%', textAlign: 'right' }}>
                      {item.stoneWeight}
                    </p>
                  )}

                  {TxnEnableFieldsMap.get('display_product_net_weight') && (
                    <p style={{ width: '15%', textAlign: 'right' }}>
                      {item.netWeight}
                    </p>
                  )}

                  {TxnEnableFieldsMap.get('display_product_wastage') && (
                    <>
                      <p style={{ width: '15%', textAlign: 'right' }}>
                        {item.wastagePercentage
                          ? item.wastagePercentage + '%'
                          : item.wastageGrams
                          ? item.wastageGrams + 'g'
                          : '0g'}
                      </p>
                    </>
                  )}

                  {TxnEnableFieldsMap.get('display_product_making_charge') && (
                    <p style={{ width: '15%', textAlign: 'right' }}>
                      {item.makingChargeAmount}
                    </p>
                  )}

                  {TxnEnableFieldsMap.get(
                    'display_product_making_charge_per_gram'
                  ) && (
                    <p style={{ width: '15%', textAlign: 'right' }}>
                      {item.makingChargePerGramAmount}
                    </p>
                  )}

                  {TxnEnableFieldsMap.get('display_product_stone_charge') && (
                    <p style={{ width: '12%', textAlign: 'right' }}>
                      {item.stoneCharge}
                    </p>
                  )}

                  {TxnEnableFieldsMap.get('display_product_purity') && (
                    <p style={{ width: '12%', textAlign: 'right' }}>
                      {item.purity}
                    </p>
                  )}

                  {/* Copper */}
                  {TxnEnableFieldsMap.get('display_product_copper') && (
                    <p style={{ width: '12%', textAlign: 'right' }}>
                      {item.copperGrams}
                    </p>
                  )}

                  {TxnEnableFieldsMap.get('display_product_discount') && (
                    <p style={{ width: '15%', textAlign: 'right' }}>
                      {typeof item.discount_amount !== 'undefined'
                        ? getFloatWithTwoDecimal(item.discount_amount)
                        : '0'}
                    </p>
                  )}

                  {_data.exportConversionRate === 0 &&
                    TxnEnableFieldsMap.get(
                      'display_product_gst_percentage'
                    ) && (
                      <p style={{ width: '15%', textAlign: 'right' }}>
                        {getFloatWithTwoDecimal(gstPercent)}
                      </p>
                    )}

                  {_data.exportConversionRate === 0 &&
                    TxnEnableFieldsMap.get('display_product_gst') && (
                      <p style={{ width: '15%', textAlign: 'right' }}>
                        {getFloatWithTwoDecimal(totalGST)}
                      </p>
                    )}

                  {data.isSale ? (
                    <>
                      {_data.exportConversionRate === 0 &&
                        TxnEnableFieldsMap.get(
                          'display_product_total_amount'
                        ) && (
                          <p
                            style={{
                              width: '25%',
                              textAlign: 'right',
                              paddingRight: '3px'
                            }}
                          >
                            {getFloatWithTwoDecimal(item.amount)}
                          </p>
                        )}

                      {_data.exportConversionRate > 0 &&
                        TxnEnableFieldsMap.get(
                          'display_product_total_amount_other'
                        ) &&
                        item.amountOtherCurrency && (
                          <div
                            style={{
                              paddingRight: '3px',
                              width: '25%',
                              textAlign: 'right'
                            }}
                          >
                            {item.amountOtherCurrency?.toFixed(2)}
                          </div>
                        )}
                    </>
                  ) : (
                    <p
                      style={{
                        width: '25%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {getFloatWithTwoDecimal(item.amount)}
                    </p>
                  )}
                </div>
              ) : (
                <div
                  style={{
                    width: '100%',
                    display: 'flex',
                    flexDirection: 'row'
                  }}
                >
                  <p
                    style={{
                      textAlign: 'center',
                      width: '10%',
                      paddingTop: '0px',
                      marginTop: '0px',
                      marginBottom: '0px'
                    }}
                  >
                    {index + 1}
                  </p>
                  <div
                    style={{
                      paddingLeft: '3px',
                      display: 'flex',
                      flexDirection: 'row',
                      width: '30%',
                      paddingTop: '0px',
                      marginTop: '0px',
                      marginBottom: '0px'
                    }}
                  >
                    <div
                      style={{
                        paddingBottom: '0px',
                        paddingRight: '3px',
                        display: 'flex',
                        flexDirection: 'column',
                        paddingTop: '0px',
                        marginTop: '0px',
                        marginBottom: '0px'
                      }}
                    >
                      <div>
                        <p
                          style={{
                            paddingTop: '0px',
                            marginTop: '0px',
                            marginBottom: '0px',
                            paddingBottom: '0px'
                          }}
                        >
                          {item.item_name}
                        </p>
                      </div>
                      {TxnEnableFieldsMap.get('display_product_image') &&
                        item.imageUrl &&
                        item.imageUrl !== '' && (
                          <div style={{ paddingTop: '2px' }}>
                            <Box
                              component="img"
                              style={{
                                height: '50px',
                                width: '50px',
                                paddingBottom: '2px'
                              }}
                              src={item.imageUrl}
                            />
                          </div>
                        )}
                      {TxnEnableFieldsMap.get(
                        'display_product_description'
                      ) && (
                        <div
                          style={{
                            paddingTop: '0px',
                            marginTop: '0px',
                            marginBottom: '0px',
                            paddingBottom: '0px'
                          }}
                        >
                          <p
                            style={{
                              paddingTop: '0px',
                              marginTop: '0px',
                              marginBottom: '0px',
                              paddingBottom: '0px',
                              fontSize: '8px'
                            }}
                          >
                            {item.description}
                          </p>
                        </div>
                      )}
                    </div>
                  </div>

                  {_data.backToBackPurchaseNumber && (
                    <div
                      style={{
                        width: '20%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.vendorName}
                    </div>
                  )}

                  {/* HSN */}
                  {TxnEnableFieldsMap.get('display_hsn') && (
                    <p
                      style={{
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.hsn}
                    </p>
                  )}
                  {/********* Serial/IMEI No. *********/}
                  {TxnEnableFieldsMap.get('display_product_serial_imei') && (
                    <p style={{ width: '15%', textAlign: 'right' }}>
                      {getSerialNumber(item)}
                    </p>
                  )}

                  {/* Batch Number */}
                  {TxnEnableFieldsMap.get('display_product_batch_number') && (
                    <p
                      style={{
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.batchNumber}
                    </p>
                  )}

                  {/* Barcode */}
                  {TxnEnableFieldsMap.get('display_product_barcode') && (
                    <p
                      style={{
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.barcode}
                    </p>
                  )}

                  {/* Brand */}
                  {TxnEnableFieldsMap.get('display_product_brand') && (
                    <p
                      style={{
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.brandName}
                    </p>
                  )}

                  {/* Model Number */}
                  {TxnEnableFieldsMap.get('display_product_model_no') && (
                    <p
                      style={{
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.modelNo}
                    </p>
                  )}

                  {/* Manufacturing Date */}
                  {TxnEnableFieldsMap.get(
                    'display_product_manufacturing_date'
                  ) && (
                    <p
                      style={{
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {formatMfgExpDate(item.mfDate)}
                    </p>
                  )}

                  {/* Expiry Date */}
                  {TxnEnableFieldsMap.get('display_product_expiry_date') && (
                    <p
                      style={{
                        width: '16%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {formatMfgExpDate(item.expiryDate)}
                    </p>
                  )}

                  {TxnEnableFieldsMap.get('display_product_quantity') && (
                    <p style={{ width: '12%', textAlign: 'right' }}>
                      {item.qty}
                    </p>
                  )}

                  {/* Free Quantity */}
                  {TxnEnableFieldsMap.get('display_product_free_quantity') && (
                    <p style={{ width: '12%', textAlign: 'right' }}>
                      {item.freeQty}
                    </p>
                  )}

                  {/* Unit */}
                  {TxnEnableFieldsMap.get('display_product_unit') && (
                    <p style={{ width: '12%', textAlign: 'right' }}>
                      {getUnitShortName(item.qtyUnit)}
                    </p>
                  )}

                  {TxnEnableFieldsMap.get('display_product_mrp') && (
                    <p style={{ width: '15%', textAlign: 'right' }}>
                      {item.finalMRPPrice}
                    </p>
                  )}

                  {_data.exportConversionRate === 0 &&
                    TxnEnableFieldsMap.get('display_product_price') && (
                      <p
                        style={{
                          width: '15%',
                          textAlign: 'right',
                          paddingRight: '3px'
                        }}
                      >
                        {mrp}
                      </p>
                    )}

                  {_data.exportConversionRate > 0 &&
                    TxnEnableFieldsMap.get(
                      'display_product_price_other_currency'
                    ) && (
                      <p
                        style={{
                          width: '15%',
                          textAlign: 'right',
                          paddingRight: '3px'
                        }}
                      >
                        {item.mrpOtherCurrency?.toFixed(2)}
                      </p>
                    )}

                  {TxnEnableFieldsMap.get('display_product_price_per_gram') && (
                    <p
                      style={{
                        width: '30%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {item.pricePerGram}
                    </p>
                  )}

                  {TxnEnableFieldsMap.get('display_product_gross_weight') && (
                    <p style={{ width: '15%', textAlign: 'right' }}>
                      {item.grossWeight}
                    </p>
                  )}

                  {TxnEnableFieldsMap.get('display_product_stone_weight') && (
                    <p style={{ width: '15%', textAlign: 'right' }}>
                      {item.stoneWeight}
                    </p>
                  )}

                  {TxnEnableFieldsMap.get('display_product_net_weight') && (
                    <p style={{ width: '15%', textAlign: 'right' }}>
                      {item.netWeight}
                    </p>
                  )}

                  {TxnEnableFieldsMap.get('display_product_wastage') && (
                    <>
                      <p style={{ width: '15%', textAlign: 'right' }}>
                        {item.wastagePercentage
                          ? item.wastagePercentage + '%'
                          : item.wastageGrams
                          ? item.wastageGrams + 'g'
                          : '0g'}
                      </p>
                    </>
                  )}

                  {TxnEnableFieldsMap.get('display_product_making_charge') && (
                    <p style={{ width: '15%', textAlign: 'right' }}>
                      {item.makingChargeAmount}
                    </p>
                  )}

                  {TxnEnableFieldsMap.get(
                    'display_product_making_charge_per_gram'
                  ) && (
                    <p style={{ width: '15%', textAlign: 'right' }}>
                      {item.makingChargePerGramAmount}
                    </p>
                  )}

                  {TxnEnableFieldsMap.get('display_product_stone_charge') && (
                    <p style={{ width: '12%', textAlign: 'right' }}>
                      {item.stoneCharge}
                    </p>
                  )}

                  {TxnEnableFieldsMap.get('display_product_purity') && (
                    <p style={{ width: '12%', textAlign: 'right' }}>
                      {item.purity}
                    </p>
                  )}

                  {/* Copper */}
                  {TxnEnableFieldsMap.get('display_product_copper') && (
                    <p style={{ width: '12%', textAlign: 'right' }}>
                      {item.copperGrams}
                    </p>
                  )}

                  {TxnEnableFieldsMap.get('display_product_discount') && (
                    <p style={{ width: '15%', textAlign: 'right' }}>
                      {typeof item.discount_amount !== 'undefined'
                        ? getFloatWithTwoDecimal(item.discount_amount)
                        : '0'}
                    </p>
                  )}

                  {_data.exportConversionRate === 0 &&
                    TxnEnableFieldsMap.get(
                      'display_product_gst_percentage'
                    ) && (
                      <p style={{ width: '15%', textAlign: 'right' }}>
                        {getFloatWithTwoDecimal(gstPercent)}
                      </p>
                    )}

                  {_data.exportConversionRate === 0 &&
                    TxnEnableFieldsMap.get('display_product_gst') && (
                      <p style={{ width: '15%', textAlign: 'right' }}>
                        {getFloatWithTwoDecimal(totalGST)}
                      </p>
                    )}

                  {data.isSale ? (
                    <>
                      {_data.exportConversionRate === 0 &&
                        TxnEnableFieldsMap.get(
                          'display_product_total_amount'
                        ) && (
                          <p
                            style={{
                              width: '25%',
                              textAlign: 'right',
                              paddingRight: '3px'
                            }}
                          >
                            {getFloatWithTwoDecimal(item.taxableAmount)}
                          </p>
                        )}

                      {_data.exportConversionRate > 0 &&
                        TxnEnableFieldsMap.get(
                          'display_product_total_amount_other'
                        ) &&
                        item.amountOtherCurrency && (
                          <div
                            style={{
                              paddingRight: '3px',
                              width: '25%',
                              textAlign: 'right'
                            }}
                          >
                            {item.amountOtherCurrency?.toFixed(2)}
                          </div>
                        )}
                    </>
                  ) : (
                    <p
                      style={{
                        width: '25%',
                        textAlign: 'right',
                        paddingRight: '3px'
                      }}
                    >
                      {getFloatWithTwoDecimal(item.taxableAmount)}
                    </p>
                  )}
                </div>
              )}
            </div>
            {(settings.theme === 'Theme 2' ||
              settings.theme === 'Theme 3' ||
              settings.theme === 'Theme 5' ||
              settings.theme === 'Theme 7') &&
              _data.item_list.length === index + 1 && (
                <div style={{ width: '100%', borderBottom: '1px solid' }}></div>
              )}
          </>
        );
      });
    };

    const getHeaderRow = () => {
      if (isPackagePreivew) {
        return <PackageDetailsHeader theme={settings.theme} />;
      }
      return (
        <>
          {settings.theme === 'Theme 2' ||
          settings.theme === 'Theme 3' ||
          settings.theme === 'Theme 5' ||
          settings.theme === 'Theme 7' ? (
            <div
              style={{
                border: '1px solid',
                display: 'flex',
                flexDirection: 'row',
                fontWeight: 600,
                width: '100%'
              }}
            >
              <div
                style={{
                  borderRight: '1px solid',
                  textAlign: 'center',
                  width: '10%'
                }}
              >
                #
              </div>
              <div
                style={{
                  borderRight: '1px solid',
                  paddingLeft: '3px',
                  width: '30%'
                }}
              >
                Item Name
              </div>

              {_data.backToBackPurchaseNumber && (
                <div
                  style={{
                    borderRight: '1px solid',
                    width: '16%',
                    textAlign: 'right',
                    paddingRight: '3px'
                  }}
                >
                  Vendor
                </div>
              )}

              {/* HSN */}
              {TxnEnableFieldsMap.get('display_hsn') && (
                <div
                  style={{
                    borderRight: '1px solid',
                    width: '16%',
                    textAlign: 'right',
                    paddingRight: '3px'
                  }}
                >
                  Hsn
                </div>
              )}

              {/********* Serial/IMEI No. *********/}
              {TxnEnableFieldsMap.get('display_product_serial_imei') && (
                <div
                  style={{
                    borderRight: '1px solid ',
                    paddingLeft: '3px',
                    width: '15%',
                    textAlign: 'right'
                  }}
                >
                  Serial <br /> No.
                </div>
              )}

              {/* Batch Number */}
              {TxnEnableFieldsMap.get('display_product_batch_number') && (
                <div
                  style={{
                    borderRight: '1px solid',
                    width: '16%',
                    textAlign: 'right',
                    paddingRight: '3px'
                  }}
                >
                  Batch <br /> No.
                </div>
              )}

              {/* Barcode */}
              {TxnEnableFieldsMap.get('display_product_barcode') && (
                <div
                  style={{
                    borderRight: '1px solid',
                    width: '16%',
                    textAlign: 'right',
                    paddingRight: '3px'
                  }}
                >
                  Barcode
                </div>
              )}

              {/* Brand */}
              {TxnEnableFieldsMap.get('display_product_brand') && (
                <div
                  style={{
                    borderRight: '1px solid',
                    width: '16%',
                    textAlign: 'right',
                    paddingRight: '3px'
                  }}
                >
                  Brand
                </div>
              )}

              {/* Model no */}
              {TxnEnableFieldsMap.get('display_product_model_no') && (
                <div
                  style={{
                    borderRight: '1px solid',
                    width: '16%',
                    textAlign: 'right',
                    paddingRight: '3px'
                  }}
                >
                  Model <br /> No.
                </div>
              )}

              {/* Manufacturing Date */}
              {TxnEnableFieldsMap.get('display_product_manufacturing_date') && (
                <div
                  style={{
                    borderRight: '1px solid',
                    width: '16%',
                    textAlign: 'right',
                    paddingRight: '3px'
                  }}
                >
                  MFG <br /> Dt.
                </div>
              )}

              {/* Expiry Date */}
              {TxnEnableFieldsMap.get('display_product_expiry_date') && (
                <div
                  style={{
                    borderRight: '1px solid',
                    width: '16%',
                    textAlign: 'right',
                    paddingRight: '3px'
                  }}
                >
                  EXP <br /> Dt.
                </div>
              )}

              {TxnEnableFieldsMap.get('display_product_quantity') && (
                <div
                  style={{
                    borderRight: '1px solid',
                    paddingRight: '3px',
                    width: '12%',
                    textAlign: 'right'
                  }}
                >
                  Qty
                </div>
              )}

              {/* Free Quantity */}
              {TxnEnableFieldsMap.get('display_product_free_quantity') && (
                <div
                  style={{
                    borderRight: '1px solid',
                    paddingRight: '3px',
                    width: '12%',
                    textAlign: 'right'
                  }}
                >
                  Free <br /> Qty
                </div>
              )}

              {/* Unit */}
              {TxnEnableFieldsMap.get('display_product_unit') && (
                <div
                  style={{
                    borderRight: '1px solid ',
                    paddingRight: '3px',
                    width: '12%',
                    textAlign: 'right'
                  }}
                >
                  Unit
                </div>
              )}

              {TxnEnableFieldsMap.get('display_product_mrp') && (
                <div
                  style={{
                    borderRight: '1px solid',
                    paddingRight: '3px',
                    width: '15%',
                    textAlign: 'right'
                  }}
                >
                  MRP
                </div>
              )}

              {_data.exportConversionRate === 0 &&
                TxnEnableFieldsMap.get('display_product_price') && (
                  <div
                    style={{
                      borderRight: '1px solid',
                      width: '15%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    Rate
                  </div>
                )}

              {_data.exportConversionRate > 0 &&
                TxnEnableFieldsMap.get(
                  'display_product_price_other_currency'
                ) && (
                  <p
                    style={{
                      borderRight: '1px solid',

                      width: '15%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    Rate
                  </p>
                )}

              {TxnEnableFieldsMap.get('display_product_price_per_gram') && (
                <div
                  style={{
                    borderRight: '1px solid',
                    width: '30%',
                    textAlign: 'right',
                    paddingRight: '3px'
                  }}
                >
                  Rate/g
                </div>
              )}

              {TxnEnableFieldsMap.get('display_product_gross_weight') && (
                <div
                  style={{
                    borderRight: '1px solid',
                    paddingRight: '3px',
                    width: '15%',
                    textAlign: 'right'
                  }}
                >
                  Gross <br /> Wt.(g)
                </div>
              )}

              {TxnEnableFieldsMap.get('display_product_stone_weight') && (
                <div
                  style={{
                    borderRight: '1px solid',
                    paddingRight: '3px',
                    width: '15%',
                    textAlign: 'right'
                  }}
                >
                  Stone <br /> Wt.(g)
                </div>
              )}

              {TxnEnableFieldsMap.get('display_product_net_weight') && (
                <div
                  style={{
                    borderRight: '1px solid',
                    paddingRight: '3px',
                    width: '15%',
                    textAlign: 'right'
                  }}
                >
                  Net <br /> Wt.(g)
                </div>
              )}

              {TxnEnableFieldsMap.get('display_product_wastage') && (
                <>
                  <div
                    style={{
                      borderRight: '1px solid',
                      paddingRight: '3px',
                      width: '15%',
                      textAlign: 'right'
                    }}
                  >
                    Wstg.
                  </div>
                </>
              )}

              {TxnEnableFieldsMap.get('display_product_making_charge') && (
                <div
                  style={{
                    borderRight: '1px solid',
                    paddingRight: '3px',
                    width: '15%',
                    textAlign: 'right'
                  }}
                >
                  MC <br /> Rt.
                </div>
              )}

              {TxnEnableFieldsMap.get(
                'display_product_making_charge_per_gram'
              ) && (
                <div
                  style={{
                    borderRight: '1px solid',
                    paddingRight: '3px',
                    width: '15%',
                    textAlign: 'right'
                  }}
                >
                  MC/g
                </div>
              )}

              {TxnEnableFieldsMap.get('display_product_stone_charge') && (
                <div
                  style={{
                    borderRight: '1px solid',
                    paddingRight: '3px',
                    width: '12%',
                    textAlign: 'right'
                  }}
                >
                  Stone <br /> Val
                </div>
              )}

              {TxnEnableFieldsMap.get('display_product_purity') && (
                <div
                  style={{
                    borderRight: '1px solid',
                    paddingRight: '3px',
                    width: '12%',
                    textAlign: 'right'
                  }}
                >
                  Purity
                </div>
              )}

              {/* Copper */}
              {TxnEnableFieldsMap.get('display_product_copper') && (
                <div
                  style={{
                    borderRight: '1px solid',
                    paddingRight: '3px',
                    width: '12%',
                    textAlign: 'right'
                  }}
                >
                  Copper
                </div>
              )}

              {TxnEnableFieldsMap.get('display_product_discount') && (
                <div
                  style={{
                    borderRight: '1px solid',
                    paddingRight: '3px',
                    width: '15%',
                    textAlign: 'right'
                  }}
                >
                  Disc.
                </div>
              )}

              {_data.exportConversionRate === 0 &&
                TxnEnableFieldsMap.get('display_product_gst_percentage') && (
                  <div
                    style={{
                      borderRight: '1px solid',
                      paddingRight: '3px',
                      width: '15%',
                      textAlign: 'right'
                    }}
                  >
                    GST %
                  </div>
                )}

              {_data.exportConversionRate === 0 &&
                TxnEnableFieldsMap.get('display_product_gst') && (
                  <div
                    style={{
                      borderRight: '1px solid',
                      paddingRight: '3px',
                      width: '15%',
                      textAlign: 'right'
                    }}
                  >
                    GST â‚¹
                  </div>
                )}

              {data.isSale ? (
                <>
                  {_data.exportConversionRate === 0 &&
                    TxnEnableFieldsMap.get('display_product_total_amount') && (
                      <div
                        style={{
                          width: '25%',
                          textAlign: 'right',
                          paddingRight: '3px'
                        }}
                      >
                        Taxable Amt
                      </div>
                    )}
                </>
              ) : (
                <div
                  style={{
                    width: '25%',
                    textAlign: 'right',
                    paddingRight: '3px'
                  }}
                >
                  Taxable Amt
                </div>
              )}

              {_data.exportConversionRate > 0 &&
                TxnEnableFieldsMap.get(
                  'display_product_total_amount_other'
                ) && (
                  <div
                    style={{
                      borderLeft: '1px solid',

                      paddingRight: '3px',
                      width: '25%',
                      textAlign: 'right'
                    }}
                  >
                    Total
                  </div>
                )}
            </div>
          ) : settings.theme === 'Theme 1' || settings.theme === 'Theme 6' ? (
            <div
              style={{
                borderTop: '1px solid',
                borderBottom: '1px solid',
                width: 'auto',
                display: 'flex',
                flexDirection: 'row',
                fontWeight: 600
              }}
            >
              <p style={{ textAlign: 'center', width: '10%' }}>#</p>
              <p style={{ width: '30%' }}>Item name</p>

              {_data.backToBackPurchaseNumber && (
                <p
                  style={{
                    width: '16%',
                    textAlign: 'right',
                    paddingRight: '3px'
                  }}
                >
                  Vendor
                </p>
              )}

              {/* HSN */}
              {TxnSettings && TxnEnableFieldsMap.get('display_hsn') && (
                <p
                  style={{
                    width: '16%',
                    textAlign: 'right',
                    paddingRight: '3px'
                  }}
                >
                  Hsn
                </p>
              )}

              {/********* Serial/IMEI No. *********/}
              {TxnSettings &&
                TxnEnableFieldsMap.get('display_product_serial_imei') && (
                  <p style={{ width: '15%', textAlign: 'right' }}>
                    Serial
                    <br />
                    No.
                  </p>
                )}

              {/* Batch Number */}
              {TxnSettings &&
                TxnEnableFieldsMap.get('display_product_batch_number') && (
                  <p
                    style={{
                      width: '16%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    Batch <br /> No.
                  </p>
                )}

              {/* Barcode */}
              {TxnSettings &&
                TxnEnableFieldsMap.get('display_product_barcode') && (
                  <p
                    style={{
                      width: '16%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    Barcode
                  </p>
                )}

              {/* Brand */}
              {TxnSettings &&
                TxnEnableFieldsMap.get('display_product_brand') && (
                  <p
                    style={{
                      width: '16%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    Brand
                  </p>
                )}

              {/* Model Number */}
              {TxnSettings &&
                TxnEnableFieldsMap.get('display_product_model_no') && (
                  <p
                    style={{
                      width: '16%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    Model <br /> No.
                  </p>
                )}

              {/* Manufacturing Date */}
              {TxnSettings &&
                TxnEnableFieldsMap.get(
                  'display_product_manufacturing_date'
                ) && (
                  <p
                    style={{
                      width: '16%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    MFG <br /> Dt.
                  </p>
                )}

              {/* Expiry Date */}
              {TxnSettings &&
                TxnEnableFieldsMap.get('display_product_expiry_date') && (
                  <p
                    style={{
                      width: '16%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    EXP <br /> Dt.
                  </p>
                )}

              {TxnEnableFieldsMap.get('display_product_quantity') && (
                <p style={{ width: '12%', textAlign: 'right' }}>Qty</p>
              )}

              {/* Free Quantity */}
              {TxnEnableFieldsMap.get('display_product_free_quantity') && (
                <p style={{ width: '12%', textAlign: 'right' }}>
                  Free <br /> Qty
                </p>
              )}

              {/* Unit */}
              {TxnEnableFieldsMap.get('display_product_unit') && (
                <p style={{ width: '12%', textAlign: 'right' }}>Unit</p>
              )}

              {TxnEnableFieldsMap.get('display_product_mrp') && (
                <p style={{ width: '15%', textAlign: 'right' }}>MRP</p>
              )}

              {_data.exportConversionRate === 0 &&
                TxnEnableFieldsMap.get('display_product_price') && (
                  <p
                    style={{
                      width: '15%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    Rate
                  </p>
                )}

              {_data.exportConversionRate > 0 &&
                TxnEnableFieldsMap.get(
                  'display_product_price_other_currency'
                ) && (
                  <p
                    style={{
                      width: '15%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    Rate
                  </p>
                )}

              {TxnEnableFieldsMap.get('display_product_price_per_gram') && (
                <p
                  style={{
                    width: '30%',
                    textAlign: 'right',
                    paddingRight: '3px'
                  }}
                >
                  Rate/g
                </p>
              )}

              {TxnEnableFieldsMap.get('display_product_gross_weight') && (
                <p style={{ width: '15%', textAlign: 'right' }}>
                  Gross <br /> Wt.(g)
                </p>
              )}

              {TxnEnableFieldsMap.get('display_product_stone_weight') && (
                <p style={{ width: '15%', textAlign: 'right' }}>
                  Stone <br /> Wt.(g)
                </p>
              )}

              {TxnEnableFieldsMap.get('display_product_net_weight') && (
                <p style={{ width: '15%', textAlign: 'right' }}>
                  Net <br /> Wt.(g)
                </p>
              )}

              {TxnEnableFieldsMap.get('display_product_wastage') && (
                <p style={{ width: '15%', textAlign: 'right' }}>Wstg.</p>
              )}

              {TxnEnableFieldsMap.get('display_product_making_charge') && (
                <p style={{ width: '15%', textAlign: 'right' }}>
                  MC <br /> Rt.
                </p>
              )}

              {TxnEnableFieldsMap.get(
                'display_product_making_charge_per_gram'
              ) && <p style={{ width: '15%', textAlign: 'right' }}>MC/g</p>}

              {TxnEnableFieldsMap.get('display_product_stone_charge') && (
                <p style={{ width: '12%', textAlign: 'right' }}>
                  Stone <br /> Val.
                </p>
              )}

              {TxnEnableFieldsMap.get('display_product_purity') && (
                <p style={{ width: '12%', textAlign: 'right' }}>Purity</p>
              )}

              {/* Copper */}
              {TxnEnableFieldsMap.get('display_product_copper') && (
                <p style={{ width: '12%', textAlign: 'right' }}>Copper</p>
              )}

              {TxnEnableFieldsMap.get('display_product_discount') && (
                <p style={{ width: '15%', textAlign: 'right' }}>Disc.</p>
              )}

              {_data.exportConversionRate === 0 &&
                TxnEnableFieldsMap.get('display_product_gst_percentage') && (
                  <p style={{ width: '15%', textAlign: 'right' }}>GST %</p>
                )}

              {_data.exportConversionRate === 0 &&
                TxnEnableFieldsMap.get('display_product_gst') && (
                  <p style={{ width: '15%', textAlign: 'right' }}>GST â‚¹</p>
                )}

              {data.isSale ? (
                <>
                  {_data.exportConversionRate === 0 &&
                    TxnEnableFieldsMap.get('display_product_total_amount') && (
                      <p
                        style={{
                          width: '25%',
                          textAlign: 'right',
                          paddingRight: '3px'
                        }}
                      >
                        Taxable Amt
                      </p>
                    )}
                </>
              ) : (
                <p
                  style={{
                    width: '25%',
                    textAlign: 'right',
                    paddingRight: '3px'
                  }}
                >
                  Taxable Amt
                </p>
              )}

              {_data.exportConversionRate > 0 &&
                TxnEnableFieldsMap.get(
                  'display_product_total_amount_other'
                ) && (
                  <div
                    style={{
                      paddingRight: '3px',
                      width: '25%',
                      textAlign: 'right'
                    }}
                  >
                    Total
                  </div>
                )}
            </div>
          ) : settings.theme === 'Theme 8' ? (
            <div
              style={{
                border: '1px solid',
                width: 'auto',
                display: 'flex',
                flexDirection: 'row',
                fontWeight: 600
              }}
            >
              <p style={{ textAlign: 'center', width: '10%' }}>#</p>
              <p style={{ width: '30%' }}>Item name</p>

              {_data.backToBackPurchaseNumber && (
                <p
                  style={{
                    width: '16%',
                    textAlign: 'right',
                    paddingRight: '3px'
                  }}
                >
                  Vendor
                </p>
              )}

              {/* HSN */}
              {TxnSettings && TxnEnableFieldsMap.get('display_hsn') && (
                <p
                  style={{
                    width: '16%',
                    textAlign: 'right',
                    paddingRight: '3px'
                  }}
                >
                  Hsn
                </p>
              )}

              {/********* Serial/IMEI No. *********/}
              {TxnSettings &&
                TxnEnableFieldsMap.get('display_product_serial_imei') && (
                  <p style={{ width: '15%', textAlign: 'right' }}>
                    Serial
                    <br />
                    No.
                  </p>
                )}

              {/* Batch Number */}
              {TxnSettings &&
                TxnEnableFieldsMap.get('display_product_batch_number') && (
                  <p
                    style={{
                      width: '16%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    Batch
                    <br />
                    No.
                  </p>
                )}

              {/* Barcode */}
              {TxnSettings &&
                TxnEnableFieldsMap.get('display_product_barcode') && (
                  <p
                    style={{
                      width: '16%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    Barcode
                  </p>
                )}

              {/* Brand */}
              {TxnSettings &&
                TxnEnableFieldsMap.get('display_product_brand') && (
                  <p
                    style={{
                      width: '16%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    Brand
                  </p>
                )}

              {/* Model Number */}
              {TxnSettings &&
                TxnEnableFieldsMap.get('display_product_model_no') && (
                  <p
                    style={{
                      width: '16%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    Model <br /> No.
                  </p>
                )}

              {/* Manufacturing Date */}
              {TxnSettings &&
                TxnEnableFieldsMap.get(
                  'display_product_manufacturing_date'
                ) && (
                  <p
                    style={{
                      width: '16%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    MFG
                    <br />
                    Dt.
                  </p>
                )}

              {/* Expiry Date */}
              {TxnSettings &&
                TxnEnableFieldsMap.get('display_product_expiry_date') && (
                  <p
                    style={{
                      width: '16%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    EXP
                    <br />
                    Dt.
                  </p>
                )}

              {TxnEnableFieldsMap.get('display_product_quantity') && (
                <p style={{ width: '12%', textAlign: 'right' }}>Qty</p>
              )}

              {/* Free Quantity */}
              {TxnEnableFieldsMap.get('display_product_free_quantity') && (
                <p style={{ width: '12%', textAlign: 'right' }}>
                  Free <br /> Qty
                </p>
              )}

              {/* Unit */}
              {TxnEnableFieldsMap.get('display_product_unit') && (
                <p style={{ width: '12%', textAlign: 'right' }}>Unit</p>
              )}

              {TxnEnableFieldsMap.get('display_product_mrp') && (
                <p style={{ width: '15%', textAlign: 'right' }}>MRP</p>
              )}

              {_data.exportConversionRate === 0 &&
                TxnEnableFieldsMap.get('display_product_price') && (
                  <p
                    style={{
                      width: '15%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    Rate
                  </p>
                )}

              {_data.exportConversionRate > 0 &&
                TxnEnableFieldsMap.get(
                  'display_product_price_other_currency'
                ) && (
                  <p
                    style={{
                      width: '15%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    Rate
                  </p>
                )}

              {TxnEnableFieldsMap.get('display_product_price_per_gram') && (
                <p
                  style={{
                    width: '30%',
                    textAlign: 'right',
                    paddingRight: '3px'
                  }}
                >
                  Rate/g
                </p>
              )}

              {TxnEnableFieldsMap.get('display_product_gross_weight') && (
                <p style={{ width: '15%', textAlign: 'right' }}>
                  Gross
                  <br />
                  Wt.(g)
                </p>
              )}

              {TxnEnableFieldsMap.get('display_product_stone_weight') && (
                <p style={{ width: '15%', textAlign: 'right' }}>
                  Stone
                  <br />
                  Wt.(g)
                </p>
              )}

              {TxnEnableFieldsMap.get('display_product_net_weight') && (
                <p style={{ width: '15%', textAlign: 'right' }}>
                  Net
                  <br />
                  Wt.(g)
                </p>
              )}

              {TxnEnableFieldsMap.get('display_product_wastage') && (
                <p style={{ width: '15%', textAlign: 'right' }}>Wstg.</p>
              )}

              {TxnEnableFieldsMap.get('display_product_making_charge') && (
                <p style={{ width: '15%', textAlign: 'right' }}>
                  MC
                  <br />
                  Rate
                </p>
              )}

              {TxnEnableFieldsMap.get(
                'display_product_making_charge_per_gram'
              ) && <p style={{ width: '15%', textAlign: 'right' }}>MC/g</p>}

              {TxnEnableFieldsMap.get('display_product_stone_charge') && (
                <p style={{ width: '12%', textAlign: 'right' }}>
                  Stone
                  <br />
                  Val
                </p>
              )}

              {TxnEnableFieldsMap.get('display_product_purity') && (
                <p style={{ width: '12%', textAlign: 'right' }}>Purity</p>
              )}

              {/* Copper */}
              {TxnEnableFieldsMap.get('display_product_copper') && (
                <p style={{ width: '12%', textAlign: 'right' }}>Copper</p>
              )}

              {TxnEnableFieldsMap.get('display_product_discount') && (
                <p style={{ width: '15%', textAlign: 'right' }}>Disc.</p>
              )}

              {_data.exportConversionRate === 0 &&
                TxnEnableFieldsMap.get('display_product_gst_percentage') && (
                  <p style={{ width: '15%', textAlign: 'right' }}>GST %</p>
                )}

              {_data.exportConversionRate === 0 &&
                TxnEnableFieldsMap.get('display_product_gst') && (
                  <p style={{ width: '15%', textAlign: 'right' }}>GST â‚¹</p>
                )}

              {data.isSale ? (
                <>
                  {_data.exportConversionRate === 0 &&
                    TxnEnableFieldsMap.get('display_product_total_amount') && (
                      <p
                        style={{
                          width: '25%',
                          textAlign: 'right',
                          paddingRight: '3px'
                        }}
                      >
                        Total
                      </p>
                    )}
                </>
              ) : (
                <p
                  style={{
                    width: '25%',
                    textAlign: 'right',
                    paddingRight: '3px'
                  }}
                >
                  Total
                </p>
              )}

              {_data.exportConversionRate > 0 &&
                TxnEnableFieldsMap.get(
                  'display_product_total_amount_other'
                ) && (
                  <div
                    style={{
                      paddingRight: '3px',
                      width: '25%',
                      textAlign: 'right'
                    }}
                  >
                    Total
                  </div>
                )}
            </div>
          ) : (
            <div
              style={{
                border: '1px solid',
                width: 'auto',
                display: 'flex',
                flexDirection: 'row',
                fontWeight: 600
              }}
            >
              <p style={{ textAlign: 'center', width: '10%' }}>#</p>
              <p style={{ width: '30%' }}>Item name</p>

              {_data.backToBackPurchaseNumber && (
                <p
                  style={{
                    width: '16%',
                    textAlign: 'right',
                    paddingRight: '3px'
                  }}
                >
                  Vendor
                </p>
              )}

              {/* HSN */}
              {TxnSettings && TxnEnableFieldsMap.get('display_hsn') && (
                <p
                  style={{
                    width: '16%',
                    textAlign: 'right',
                    paddingRight: '3px'
                  }}
                >
                  Hsn
                </p>
              )}

              {/********* Serial/IMEI No. *********/}
              {TxnSettings &&
                TxnEnableFieldsMap.get('display_product_serial_imei') && (
                  <p style={{ width: '15%', textAlign: 'right' }}>
                    Serial
                    <br />
                    No.
                  </p>
                )}

              {/* Batch Number */}
              {TxnSettings &&
                TxnEnableFieldsMap.get('display_product_batch_number') && (
                  <p
                    style={{
                      width: '16%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    Batch
                    <br />
                    No.
                  </p>
                )}

              {/* Barcode */}
              {TxnSettings &&
                TxnEnableFieldsMap.get('display_product_barcode') && (
                  <p
                    style={{
                      width: '16%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    Barcode
                  </p>
                )}

              {/* Brand */}
              {TxnSettings &&
                TxnEnableFieldsMap.get('display_product_brand') && (
                  <p
                    style={{
                      width: '16%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    Brand
                  </p>
                )}

              {/* Model Number */}
              {TxnSettings &&
                TxnEnableFieldsMap.get('display_product_model_no') && (
                  <p
                    style={{
                      width: '16%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    Model <br /> No.
                  </p>
                )}

              {/* Manufacturing Date */}
              {TxnSettings &&
                TxnEnableFieldsMap.get(
                  'display_product_manufacturing_date'
                ) && (
                  <p
                    style={{
                      width: '16%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    MFG
                    <br />
                    Dt.
                  </p>
                )}

              {/* Expiry Date */}
              {TxnSettings &&
                TxnEnableFieldsMap.get('display_product_expiry_date') && (
                  <p
                    style={{
                      width: '16%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    EXP
                    <br />
                    Dt.
                  </p>
                )}

              {TxnEnableFieldsMap.get('display_product_quantity') && (
                <p style={{ width: '12%', textAlign: 'right' }}>Qty</p>
              )}

              {/* Free Quantity */}
              {TxnEnableFieldsMap.get('display_product_free_quantity') && (
                <p style={{ width: '12%', textAlign: 'right' }}>
                  Free <br /> Qty
                </p>
              )}

              {/* Unit */}
              {TxnEnableFieldsMap.get('display_product_unit') && (
                <p style={{ width: '12%', textAlign: 'right' }}>Unit</p>
              )}

              {TxnEnableFieldsMap.get('display_product_mrp') && (
                <p style={{ width: '15%', textAlign: 'right' }}>MRP</p>
              )}

              {_data.exportConversionRate === 0 &&
                TxnEnableFieldsMap.get('display_product_price') && (
                  <p
                    style={{
                      width: '15%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    Rate
                  </p>
                )}

              {_data.exportConversionRate > 0 &&
                TxnEnableFieldsMap.get(
                  'display_product_price_other_currency'
                ) && (
                  <p
                    style={{
                      width: '15%',
                      textAlign: 'right',
                      paddingRight: '3px'
                    }}
                  >
                    Rate
                  </p>
                )}

              {TxnEnableFieldsMap.get('display_product_price_per_gram') && (
                <p
                  style={{
                    width: '30%',
                    textAlign: 'right',
                    paddingRight: '3px'
                  }}
                >
                  Rate/g
                </p>
              )}

              {TxnEnableFieldsMap.get('display_product_gross_weight') && (
                <p style={{ width: '15%', textAlign: 'right' }}>
                  Gross
                  <br />
                  Wt.(g)
                </p>
              )}

              {TxnEnableFieldsMap.get('display_product_stone_weight') && (
                <p style={{ width: '15%', textAlign: 'right' }}>
                  Stone
                  <br />
                  Wt.(g)
                </p>
              )}

              {TxnEnableFieldsMap.get('display_product_net_weight') && (
                <p style={{ width: '15%', textAlign: 'right' }}>
                  Net
                  <br />
                  Wt.(g)
                </p>
              )}

              {TxnEnableFieldsMap.get('display_product_wastage') && (
                <p style={{ width: '15%', textAlign: 'right' }}>Wstg.</p>
              )}

              {TxnEnableFieldsMap.get('display_product_making_charge') && (
                <p style={{ width: '15%', textAlign: 'right' }}>
                  MC
                  <br />
                  Rate
                </p>
              )}

              {TxnEnableFieldsMap.get(
                'display_product_making_charge_per_gram'
              ) && <p style={{ width: '15%', textAlign: 'right' }}>MC/g</p>}

              {TxnEnableFieldsMap.get('display_product_stone_charge') && (
                <p style={{ width: '12%', textAlign: 'right' }}>
                  Stone
                  <br />
                  Val
                </p>
              )}

              {TxnEnableFieldsMap.get('display_product_purity') && (
                <p style={{ width: '12%', textAlign: 'right' }}>Purity</p>
              )}

              {/* Copper */}
              {TxnEnableFieldsMap.get('display_product_copper') && (
                <p style={{ width: '12%', textAlign: 'right' }}>Copper</p>
              )}

              {TxnEnableFieldsMap.get('display_product_discount') && (
                <p style={{ width: '15%', textAlign: 'right' }}>Disc.</p>
              )}

              {_data.exportConversionRate === 0 &&
                TxnEnableFieldsMap.get('display_product_gst_percentage') && (
                  <p style={{ width: '15%', textAlign: 'right' }}>GST %</p>
                )}

              {_data.exportConversionRate === 0 &&
                TxnEnableFieldsMap.get('display_product_gst') && (
                  <p style={{ width: '15%', textAlign: 'right' }}>GST â‚¹</p>
                )}

              {data.isSale ? (
                <>
                  {_data.exportConversionRate === 0 &&
                    TxnEnableFieldsMap.get('display_product_total_amount') && (
                      <p
                        style={{
                          width: '25%',
                          textAlign: 'right',
                          paddingRight: '3px'
                        }}
                      >
                        Taxable Amt
                      </p>
                    )}
                </>
              ) : (
                <p
                  style={{
                    width: '25%',
                    textAlign: 'right',
                    paddingRight: '3px'
                  }}
                >
                  Taxable Amt
                </p>
              )}

              {_data.exportConversionRate > 0 &&
                TxnEnableFieldsMap.get(
                  'display_product_total_amount_other'
                ) && (
                  <div
                    style={{
                      paddingRight: '3px',
                      width: '25%',
                      textAlign: 'right'
                    }}
                  >
                    Total
                  </div>
                )}
            </div>
          )}
        </>
      );
    };

    function dateFormatter(date) {
      const monthNames = [
        'JAN',
        'FEB',
        'MAR',
        'APR',
        'MAY',
        'JUN',
        'JUL',
        'AUG',
        'SEP',
        'OCT',
        'NOV',
        'DEC'
      ];
      var dateParts = date.split('-');
      var ddMMMYYYY = '';
      if (dateParts.length >= 3) {
        ddMMMYYYY =
          dateParts[2] +
          ' ' +
          monthNames[parseInt(dateParts[1]) - 1] +
          ' ' +
          dateParts[0];
        return `${ddMMMYYYY}`;
      }
    }

    function getTimefromTimeStamp(date) {
      var timefromTimeStamp = new Date(date).toLocaleTimeString([], {
        hour: '2-digit',
        minute: '2-digit',
        hour12: 'true'
      });
      return `${timefromTimeStamp}`;
    }

    const getGSTRows = () => {
      if (_data.item_list) {
        _data.item_list.forEach((item) => {
          if (!item) {
            return;
          }
          let mrp = 0;
          if (_data.sales_return_number || _data.invoice_number) {
            mrp = parseFloat(item.mrp).toFixed(2);
          } else if (_data.purchase_return_number || _data.bill_number) {
            mrp = parseFloat(item.purchased_price).toFixed(2);
          } else if (_data.purchase_order_invoice_number) {
            mrp = parseFloat(item.mrp).toFixed(2);
          } else if (_data.delivery_challan_invoice_number) {
            mrp = parseFloat(item.mrp).toFixed(2);
          }

          const offerPrice = parseFloat(item.offer_price).toFixed(2);
          const qty = parseFloat(item.qty);
          let tempMRP = mrp;
          if (_data.sales_return_number || _data.invoice_number) {
            if (offerPrice < mrp && offerPrice !== 0) {
              tempMRP = offerPrice;
            }
          }
          if (item.cgst && item.cgst > 0) {
            const cgstKey = `CGST@${item.cgst}%`;
            if (gstMap.has(cgstKey)) {
              gstMap.set(cgstKey, gstMap.get(cgstKey) + item.cgst_amount);
            } else {
              gstMap.set(cgstKey, item.cgst_amount);
            }
          }
          if (item.sgst && item.sgst > 0) {
            const sgstKey = `SGST@${item.sgst}%`;
            if (gstMap.has(sgstKey)) {
              gstMap.set(sgstKey, gstMap.get(sgstKey) + item.sgst_amount);
            } else {
              gstMap.set(sgstKey, item.sgst_amount);
            }
          }
          if (item.igst && item.igst > 0) {
            const igstKey = `IGST@${item.igst}%`;
            if (gstMap.has(igstKey)) {
              gstMap.set(igstKey, gstMap.get(igstKey) + item.igst_amount);
            } else {
              gstMap.set(igstKey, item.igst_amount);
            }
          }
          if (item.cgst && item.cgst >= 0) {
            if (cgstMap.has(item.cgst)) {
              cgstMap.set(item.cgst, cgstMap.get(item.cgst) + item.cgst_amount);
            } else {
              cgstMap.set(item.cgst, item.cgst_amount);
            }
          }
          if (item.sgst && item.sgst >= 0) {
            if (sgstMap.has(item.sgst)) {
              sgstMap.set(item.sgst, sgstMap.get(item.sgst) + item.sgst_amount);
            } else {
              sgstMap.set(item.sgst, item.sgst_amount);
            }
          }
          if (item.igst && item.igst >= 0) {
            if (igstMap.has(item.igst)) {
              igstMap.set(item.igst, igstMap.get(item.igst) + item.igst_amount);
            } else {
              igstMap.set(item.igst, item.igst_amount);
            }
          }
        });
      }

      if (_data.packingTax) {
        let dataItem = _data.packingTax;
        if (dataItem.cgst && dataItem.cgst > 0) {
          const cgstKey = `CGST@${dataItem.cgst}%`;
          if (gstMap.has(cgstKey)) {
            gstMap.set(cgstKey, gstMap.get(cgstKey) + dataItem.cgstAmount);
          } else {
            gstMap.set(cgstKey, dataItem.cgstAmount);
          }
        }
        if (dataItem.sgst && dataItem.sgst > 0) {
          const sgstKey = `SGST@${dataItem.sgst}%`;
          if (gstMap.has(sgstKey)) {
            gstMap.set(sgstKey, gstMap.get(sgstKey) + dataItem.sgstAmount);
          } else {
            gstMap.set(sgstKey, dataItem.sgstAmount);
          }
        }
        if (dataItem.igst && dataItem.igst > 0) {
          const igstKey = `IGST@${dataItem.igst}%`;
          if (gstMap.has(igstKey)) {
            gstMap.set(igstKey, gstMap.get(igstKey) + dataItem.igstAmount);
          } else {
            gstMap.set(igstKey, dataItem.igstAmount);
          }
        }
        if (dataItem.cgst && dataItem.cgst >= 0) {
          if (cgstMap.has(dataItem.cgst)) {
            cgstMap.set(
              dataItem.cgst,
              cgstMap.get(dataItem.cgst) + dataItem.cgstAmount
            );
          } else {
            cgstMap.set(dataItem.cgst, dataItem.cgstAmount);
          }
        }
        if (dataItem.sgst && dataItem.sgst >= 0) {
          if (sgstMap.has(dataItem.sgst)) {
            sgstMap.set(
              dataItem.sgst,
              sgstMap.get(dataItem.sgst) + dataItem.sgstAmount
            );
          } else {
            sgstMap.set(dataItem.sgst, dataItem.sgst_amount);
          }
        }
        if (dataItem.igst && dataItem.igst >= 0) {
          if (igstMap.has(dataItem.igst)) {
            igstMap.set(
              dataItem.igst,
              igstMap.get(dataItem.igst) + dataItem.igstAmount
            );
          } else {
            igstMap.set(dataItem.igst, dataItem.igstAmount);
          }
        }
      }

      if (_data.shippingTax) {
        let dataItem = _data.shippingTax;
        if (dataItem.cgst && dataItem.cgst > 0) {
          const cgstKey = `CGST@${dataItem.cgst}%`;
          if (gstMap.has(cgstKey)) {
            gstMap.set(cgstKey, gstMap.get(cgstKey) + dataItem.cgstAmount);
          } else {
            gstMap.set(cgstKey, dataItem.cgstAmount);
          }
        }
        if (dataItem.sgst && dataItem.sgst > 0) {
          const sgstKey = `SGST@${dataItem.sgst}%`;
          if (gstMap.has(sgstKey)) {
            gstMap.set(sgstKey, gstMap.get(sgstKey) + dataItem.sgstAmount);
          } else {
            gstMap.set(sgstKey, dataItem.sgstAmount);
          }
        }
        if (dataItem.igst && dataItem.igst > 0) {
          const igstKey = `IGST@${dataItem.igst}%`;
          if (gstMap.has(igstKey)) {
            gstMap.set(igstKey, gstMap.get(igstKey) + dataItem.igstAmount);
          } else {
            gstMap.set(igstKey, dataItem.igstAmount);
          }
        }
        if (dataItem.cgst && dataItem.cgst >= 0) {
          if (cgstMap.has(dataItem.cgst)) {
            cgstMap.set(
              dataItem.cgst,
              cgstMap.get(dataItem.cgst) + dataItem.cgstAmount
            );
          } else {
            cgstMap.set(dataItem.cgst, dataItem.cgstAmount);
          }
        }
        if (dataItem.sgst && dataItem.sgst >= 0) {
          if (sgstMap.has(dataItem.sgst)) {
            sgstMap.set(
              dataItem.sgst,
              sgstMap.get(dataItem.sgst) + dataItem.sgstAmount
            );
          } else {
            sgstMap.set(dataItem.sgst, dataItem.sgst_amount);
          }
        }
        if (dataItem.igst && dataItem.igst >= 0) {
          if (igstMap.has(dataItem.igst)) {
            igstMap.set(
              dataItem.igst,
              igstMap.get(dataItem.igst) + dataItem.igstAmount
            );
          } else {
            igstMap.set(dataItem.igst, dataItem.igstAmount);
          }
        }
      }

      if (_data.insurance) {
        let dataItem = _data.insurance;
        if (dataItem.cgst && dataItem.cgst > 0) {
          const cgstKey = `CGST@${dataItem.cgst}%`;
          if (gstMap.has(cgstKey)) {
            gstMap.set(cgstKey, gstMap.get(cgstKey) + dataItem.cgstAmount);
          } else {
            gstMap.set(cgstKey, dataItem.cgstAmount);
          }
        }
        if (dataItem.sgst && dataItem.sgst > 0) {
          const sgstKey = `SGST@${dataItem.sgst}%`;
          if (gstMap.has(sgstKey)) {
            gstMap.set(sgstKey, gstMap.get(sgstKey) + dataItem.sgstAmount);
          } else {
            gstMap.set(sgstKey, dataItem.sgstAmount);
          }
        }
        if (dataItem.igst && dataItem.igst > 0) {
          const igstKey = `IGST@${dataItem.igst}%`;
          if (gstMap.has(igstKey)) {
            gstMap.set(igstKey, gstMap.get(igstKey) + dataItem.igstAmount);
          } else {
            gstMap.set(igstKey, dataItem.igstAmount);
          }
        }
        if (dataItem.cgst && dataItem.cgst >= 0) {
          if (cgstMap.has(dataItem.cgst)) {
            cgstMap.set(
              dataItem.cgst,
              cgstMap.get(dataItem.cgst) + dataItem.cgstAmount
            );
          } else {
            cgstMap.set(dataItem.cgst, dataItem.cgstAmount);
          }
        }
        if (dataItem.sgst && dataItem.sgst >= 0) {
          if (sgstMap.has(dataItem.sgst)) {
            sgstMap.set(
              dataItem.sgst,
              sgstMap.get(dataItem.sgst) + dataItem.sgstAmount
            );
          } else {
            sgstMap.set(dataItem.sgst, dataItem.sgst_amount);
          }
        }
        if (dataItem.igst && dataItem.igst >= 0) {
          if (igstMap.has(dataItem.igst)) {
            igstMap.set(
              dataItem.igst,
              igstMap.get(dataItem.igst) + dataItem.igstAmount
            );
          } else {
            igstMap.set(dataItem.igst, dataItem.igstAmount);
          }
        }
      }
    };

    const formatMfgExpDate = (date) => {
      var dateAsString = date;
      if (
        dateAsString !== undefined &&
        dateAsString !== null &&
        dateAsString !== ''
      ) {
        var dateParts = dateAsString.split('-');
        return `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;
      } else {
        return '';
      }
    };

    const getTaxSplitGSTRows = () => {
      if (_data.item_list) {
        _data.item_list.forEach((item) => {
          if (!item) {
            return;
          }

          let totalGST = 0;
          const cgstPercent = parseFloat(item.cgst);
          const sgstPercent = parseFloat(item.sgst);
          const igstPercent = parseFloat(item.igst);

          if (cgstPercent) {
            totalGST += parseFloat(item.cgst_amount);
            totalCGST += parseFloat(item.cgst_amount);
          }
          if (sgstPercent) {
            totalGST += parseFloat(item.sgst_amount);
            totalSGST += parseFloat(item.sgst_amount);
          }

          if (igstPercent) {
            totalGST += parseFloat(item.igst_amount);
            totalIGST += parseFloat(item.igst_amount);
          }

          const taxSplitData = {
            hsn: '',
            taxableAmount: 0,
            cgst_percent: '',
            cgst_amount: 0,
            sgst_percent: '',
            sgst_amount: 0,
            igst_percent: '',
            igst_amount: 0
          };

          let keyToFind = '';
          if (item.hsn !== '') {
            keyToFind = item.hsn;
          }

          if (item.cgst && item.cgst > 0) {
            keyToFind = keyToFind + '_' + item.cgst;
          } else if (item.igst && item.igst > 0) {
            keyToFind = keyToFind + '_' + item.igst;
          }

          if (taxSplitDataList.has(keyToFind)) {
            const existingTaxSplitData = taxSplitDataList.get(keyToFind);
            const newTaxSplitData = {
              hsn: '',
              taxableAmount: 0,
              cgst_percent: '',
              cgst_amount: 0,
              sgst_percent: '',
              sgst_amount: 0,
              igst_percent: '',
              igst_amount: 0
            };

            let ta = parseFloat(item.amount - totalGST);
            newTaxSplitData.hsn = existingTaxSplitData.hsn;
            newTaxSplitData.taxableAmount = parseFloat(
              existingTaxSplitData.taxableAmount + ta
            );
            newTaxSplitData.cgst_percent =
              item.cgst || existingTaxSplitData.cgst_percent;
            newTaxSplitData.sgst_percent =
              item.sgst || existingTaxSplitData.sgst_percent;
            newTaxSplitData.igst_percent =
              item.igst || existingTaxSplitData.igst_percent;
            newTaxSplitData.cgst_amount =
              existingTaxSplitData.cgst_amount + item.cgst_amount;
            newTaxSplitData.sgst_amount =
              existingTaxSplitData.sgst_amount + item.sgst_amount;
            newTaxSplitData.igst_amount =
              existingTaxSplitData.igst_amount + item.igst_amount;

            taxSplitDataList.set(keyToFind, newTaxSplitData);
          } else {
            taxSplitDataList.set(
              keyToFind,
              getTaxData(taxSplitData, item, totalGST)
            );
          }
        });
      }

      if (_data.packingTax) {
        let dataItem = _data.packingTax;
        let totalGST = 0;
        const cgstPercent = parseFloat(dataItem.cgst);
        const sgstPercent = parseFloat(dataItem.sgst);
        const igstPercent = parseFloat(dataItem.igst);

        if (cgstPercent) {
          totalGST += parseFloat(dataItem.cgstAmount);
          totalCGST += parseFloat(dataItem.cgstAmount);
        }
        if (sgstPercent) {
          totalGST += parseFloat(dataItem.sgstAmount);
          totalSGST += parseFloat(dataItem.sgstAmount);
        }

        if (igstPercent) {
          totalGST += parseFloat(dataItem.igstAmount);
          totalIGST += parseFloat(dataItem.igstAmount);
        }

        const taxSplitData = {
          hsn: '',
          taxableAmount: 0,
          cgst_percent: '',
          cgst_amount: 0,
          sgst_percent: '',
          sgst_amount: 0,
          igst_percent: '',
          igst_amount: 0
        };

        let keyToFind = '';
        if (auditSettings.packingChargeHsn !== '') {
          keyToFind = auditSettings.packingChargeHsn;
        }

        if (dataItem.cgst && dataItem.cgst > 0) {
          keyToFind = keyToFind + '_' + dataItem.cgst;
        } else if (dataItem.igst && dataItem.igst > 0) {
          keyToFind = keyToFind + '_' + dataItem.igst;
        }

        if (taxSplitDataList.has(keyToFind)) {
          const existingTaxSplitData = taxSplitDataList.get(keyToFind);
          const newTaxSplitData = {
            hsn: '',
            taxableAmount: 0,
            cgst_percent: '',
            cgst_amount: 0,
            sgst_percent: '',
            sgst_amount: 0,
            igst_percent: '',
            igst_amount: 0
          };

          let ta = parseFloat(_data.packing_charge);
          newTaxSplitData.hsn = existingTaxSplitData.hsn;
          newTaxSplitData.taxableAmount = parseFloat(
            existingTaxSplitData.taxableAmount + ta
          );
          newTaxSplitData.cgst_percent =
            dataItem.cgst || existingTaxSplitData.cgst_percent;
          newTaxSplitData.sgst_percent =
            dataItem.sgst || existingTaxSplitData.sgst_percent;
          newTaxSplitData.igst_percent =
            dataItem.igst || existingTaxSplitData.igst_percent;
          newTaxSplitData.cgst_amount =
            existingTaxSplitData.cgst_amount + dataItem.cgstAmount;
          newTaxSplitData.sgst_amount =
            existingTaxSplitData.sgst_amount + dataItem.sgstAmount;
          newTaxSplitData.igst_amount =
            existingTaxSplitData.igst_amount + dataItem.igstAmount;

          taxSplitDataList.set(keyToFind, newTaxSplitData);
        } else {
          let txBillItem = getTaxDataForBillItem(
            taxSplitData,
            dataItem,
            totalGST,
            _data.packing_charge,
            auditSettings.packingChargeHsn
          );
          taxSplitDataList.set(keyToFind, txBillItem);
        }
      }

      if (_data.shippingTax) {
        let dataItem = _data.shippingTax;
        let totalGST = 0;
        const cgstPercent = parseFloat(dataItem.cgst);
        const sgstPercent = parseFloat(dataItem.sgst);
        const igstPercent = parseFloat(dataItem.igst);

        if (cgstPercent) {
          totalGST += parseFloat(dataItem.cgstAmount);
          totalCGST += parseFloat(dataItem.cgstAmount);
        }
        if (sgstPercent) {
          totalGST += parseFloat(dataItem.sgstAmount);
          totalSGST += parseFloat(dataItem.sgstAmount);
        }

        if (igstPercent) {
          totalGST += parseFloat(dataItem.igstAmount);
          totalIGST += parseFloat(dataItem.igstAmount);
        }

        const taxSplitData = {
          hsn: '',
          taxableAmount: 0,
          cgst_percent: '',
          cgst_amount: 0,
          sgst_percent: '',
          sgst_amount: 0,
          igst_percent: '',
          igst_amount: 0
        };

        let keyToFind = '';
        if (auditSettings.shippingChargeHsn !== '') {
          keyToFind = auditSettings.shippingChargeHsn;
        }

        if (dataItem.cgst && dataItem.cgst > 0) {
          keyToFind = keyToFind + '_' + dataItem.cgst;
        } else if (dataItem.igst && dataItem.igst > 0) {
          keyToFind = keyToFind + '_' + dataItem.igst;
        }

        if (taxSplitDataList.has(keyToFind)) {
          const existingTaxSplitData = taxSplitDataList.get(keyToFind);
          const newTaxSplitData = {
            hsn: '',
            taxableAmount: 0,
            cgst_percent: '',
            cgst_amount: 0,
            sgst_percent: '',
            sgst_amount: 0,
            igst_percent: '',
            igst_amount: 0
          };

          let ta = parseFloat(_data.packing_charge);
          newTaxSplitData.hsn = existingTaxSplitData.hsn;
          newTaxSplitData.taxableAmount = parseFloat(
            existingTaxSplitData.taxableAmount + ta
          );
          newTaxSplitData.cgst_percent =
            dataItem.cgst || existingTaxSplitData.cgst_percent;
          newTaxSplitData.sgst_percent =
            dataItem.sgst || existingTaxSplitData.sgst_percent;
          newTaxSplitData.igst_percent =
            dataItem.igst || existingTaxSplitData.igst_percent;
          newTaxSplitData.cgst_amount =
            existingTaxSplitData.cgst_amount + dataItem.cgstAmount;
          newTaxSplitData.sgst_amount =
            existingTaxSplitData.sgst_amount + dataItem.sgstAmount;
          newTaxSplitData.igst_amount =
            existingTaxSplitData.igst_amount + dataItem.igstAmount;

          taxSplitDataList.set(keyToFind, newTaxSplitData);
        } else {
          let txBillItem = getTaxDataForBillItem(
            taxSplitData,
            dataItem,
            totalGST,
            _data.shipping_charge,
            auditSettings.shippingChargeHsn
          );
          taxSplitDataList.set(keyToFind, txBillItem);
        }
      }

      if (_data.insurance && _data.insurance.amount > 0) {
        let dataItem = _data.insurance;
        let totalGST = 0;
        const cgstPercent = parseFloat(dataItem.cgst);
        const sgstPercent = parseFloat(dataItem.sgst);
        const igstPercent = parseFloat(dataItem.igst);

        if (cgstPercent) {
          totalGST += parseFloat(dataItem.cgstAmount);
          totalCGST += parseFloat(dataItem.cgstAmount);
        }

        if (sgstPercent) {
          totalGST += parseFloat(dataItem.sgstAmount);
          totalSGST += parseFloat(dataItem.sgstAmount);
        }

        if (igstPercent) {
          totalGST += parseFloat(dataItem.igstAmount);
          totalIGST += parseFloat(dataItem.igstAmount);
        }

        const taxSplitData = {
          hsn: '',
          taxableAmount: 0,
          cgst_percent: '',
          cgst_amount: 0,
          sgst_percent: '',
          sgst_amount: 0,
          igst_percent: '',
          igst_amount: 0
        };

        let keyToFind = '';
        if (auditSettings.insuranceHsn !== '') {
          keyToFind = auditSettings.insuranceHsn;
        }

        if (dataItem.cgst && dataItem.cgst > 0) {
          keyToFind = keyToFind + '_' + dataItem.cgst;
        } else if (dataItem.igst && dataItem.igst > 0) {
          keyToFind = keyToFind + '_' + dataItem.igst;
        }

        if (taxSplitDataList.has(keyToFind)) {
          const existingTaxSplitData = taxSplitDataList.get(keyToFind);
          const newTaxSplitData = {
            hsn: '',
            taxableAmount: 0,
            cgst_percent: '',
            cgst_amount: 0,
            sgst_percent: '',
            sgst_amount: 0,
            igst_percent: '',
            igst_amount: 0
          };

          let ta = parseFloat(_data.insurance.amount);
          newTaxSplitData.hsn = existingTaxSplitData.hsn;
          newTaxSplitData.taxableAmount = parseFloat(
            existingTaxSplitData.taxableAmount + ta
          );
          newTaxSplitData.cgst_percent =
            dataItem.cgst || existingTaxSplitData.cgst_percent;
          newTaxSplitData.sgst_percent =
            dataItem.sgst || existingTaxSplitData.sgst_percent;
          newTaxSplitData.igst_percent =
            dataItem.igst || existingTaxSplitData.igst_percent;
          newTaxSplitData.cgst_amount =
            existingTaxSplitData.cgst_amount + dataItem.cgstAmount;
          newTaxSplitData.sgst_amount =
            existingTaxSplitData.sgst_amount + dataItem.sgstAmount;
          newTaxSplitData.igst_amount =
            existingTaxSplitData.igst_amount + dataItem.igstAmount;

          taxSplitDataList.set(keyToFind, newTaxSplitData);
        } else {
          let txBillItem = getTaxDataForBillItem(
            taxSplitData,
            dataItem,
            totalGST,
            _data.insurance.amount,
            auditSettings.insuranceHsn
          );
          taxSplitDataList.set(keyToFind, txBillItem);
        }
      }
    };

    const getTaxData = (taxSplitData, item, totalGST) => {
      taxSplitData.hsn = item.hsn;
      taxSplitData.cgst_percent = item.cgst;
      taxSplitData.sgst_percent = item.sgst;
      taxSplitData.igst_percent = item.igst;
      taxSplitData.cgst_amount = item.cgst_amount;
      taxSplitData.sgst_amount = item.sgst_amount;
      taxSplitData.igst_amount = item.igst_amount;
      let ta = parseFloat(item.amount - totalGST);
      taxSplitData.taxableAmount = ta;

      return taxSplitData;
    };

    const getTaxDataForBillItem = (
      taxSplitData,
      item,
      totalGST,
      taxableAmt,
      hsn
    ) => {
      taxSplitData.hsn = hsn;
      taxSplitData.cgst_percent = item.cgst;
      taxSplitData.sgst_percent = item.sgst;
      taxSplitData.igst_percent = item.igst;
      taxSplitData.cgst_amount = item.cgstAmount;
      taxSplitData.sgst_amount = item.sgstAmount;
      taxSplitData.igst_amount = item.igstAmount;
      taxSplitData.taxableAmount = parseFloat(taxableAmt);

      return taxSplitData;
    };

    const getUITaxSplitGSTRows = () => {
      let rows = [];

      Array.from(taxSplitDataList.keys()).map((key) => {
        rows.push(taxSplitDataList.get(key));
      });

      return rows.map((item, index) => {
        return (
          <div
            style={{
              width: '100%',
              borderLeft: '1px solid',
              borderRight: '1px solid',
              display: 'flex',
              flexDirection: 'row',
              textAlign: 'center',
              borderBottom: '1px solid',
              fontSize: '6px'
            }}
          >
            <div style={{ borderRight: '1px solid', width: '20%' }}>
              <p>â‚¹ {getFloatWithTwoDecimal(item.taxableAmount)}</p>
            </div>
            <div style={{ borderRight: '1px solid', width: '14%' }}>
              <p>{item.cgst_percent}</p>
            </div>
            <div style={{ borderRight: '1px solid', width: '14%' }}>
              <p>â‚¹ {getFloatWithTwoDecimal(item.cgst_amount)}</p>
            </div>
            <div style={{ borderRight: '1px solid', width: '14%' }}>
              <p>{item.sgst_percent}</p>
            </div>
            <div style={{ borderRight: '1px solid', width: '14%' }}>
              <p>â‚¹ {getFloatWithTwoDecimal(item.sgst_amount)}</p>
            </div>
            <div style={{ borderRight: '1px solid', width: '14%' }}>
              <p>{item.igst_percent}</p>
            </div>
            <div style={{ width: '14%' }}>
              <p>â‚¹ {getFloatWithTwoDecimal(item.igst_amount)}</p>
            </div>
          </div>
        );
      });
    };

    if (this.props && this.props.TxnSettings) {
      TxnSettings = this.props.TxnSettings;

      if (TxnSettings && TxnSettings.displayOnBill) {
        const productLevel = TxnSettings.displayOnBill.productLevel;
        console.log({ productLevel });
        productLevel.map((item) => {
          const flag = [
            'display_product_gst_percentage',
            'display_product_gst'
          ].includes(item.name)
            ? item.enabled && !data.exportConversionRate
            : item.enabled;

          if (TxnEnableFieldsMap.has(item.name)) {
            TxnEnableFieldsMap.set(item.name, flag);
          } else {
            TxnEnableFieldsMap.set(item.name, flag);
          }
        });

        const billLevel = TxnSettings.displayOnBill.billLevel;
        console.log({ billLevel });

        billLevel.map((item) => {
          if (TxnEnableFieldsMap.has(item.name)) {
            TxnEnableFieldsMap.set(item.name, item.enabled);
          } else {
            TxnEnableFieldsMap.set(item.name, item.enabled);
          }
        });
      }
    }

    if (this.props && this.props.balanceData) {
      outStandingType = this.props.balanceData.balanceType;
      outStandingBalance = this.props.balanceData.totalBalance;
    }

    //linkedPaymentsData
    if (this.props && this.props.linkedPaymentsData) {
      listOfPaymentInData = this.props.linkedPaymentsData;
    }

    if (this.props && this.props.data) {
      _data = this.props.data;
      settings = this.props.settings;
      console.log({
        settings,
        exportConversionRate: _data.exportConversionRate
      });
      settings.boolPaymentMode = _data.exportConversionRate
        ? false
        : settings.boolPaymentMode;
      settings.boolPreviousBalance = _data.exportConversionRate
        ? false
        : settings.boolPreviousBalance;
      settings.boolTaxDetails = _data.exportConversionRate
        ? false
        : settings.boolTaxDetails;
      const gstPercentFlag = TxnEnableFieldsMap.get(
        'display_product_gst_percentage'
      );
      TxnEnableFieldsMap.set(
        'display_product_gst_percentage',
        !_data.exportConversionRate && gstPercentFlag
      );
      const gstFlag = TxnEnableFieldsMap.get('display_product_gst');
      TxnEnableFieldsMap.set(
        'display_product_gst',
        !_data.exportConversionRate && gstFlag
      );
      const productprice = TxnEnableFieldsMap.get('display_product_price');
      TxnEnableFieldsMap.set(
        'display_product_price',
        !_data.exportConversionRate && productprice
      );
      // const productTotal = TxnEnableFieldsMap.get(
      //   'display_product_total_amount'
      // );
      // TxnEnableFieldsMap.set(
      //   'display_product_total_amount',
      //   !_data.exportConversionRate && productTotal
      // );
      const productMrp = TxnEnableFieldsMap.get('display_product_mrp');
      TxnEnableFieldsMap.set(
        'display_product_mrp',
        !_data.exportConversionRate && productMrp
      );
      auditSettings = this.props.auditSettings;

      mapPrintableData();
      getGSTRows();
      getTaxSplitGSTRows();

      if (settings.strqrcode) {
        let QRCode = '';
        if (
          settings.qrCodeValueOptn === 'upi' &&
          settings.paymentUpi !== null &&
          settings.paymentUpi !== ''
        ) {
          let beforeAt = settings.paymentUpi.split('@');
          QRCode =
            'upi://pay?pa=' +
            settings.paymentUpi +
            '&pn=' +
            beforeAt[0] +
            '&am=' +
            data.totalAmount +
            '&tn=' +
            settings.strCompanyName;
          data.qrCodestr = QRCode;
        } else {
          QRCode =
            'upi://pay?pa=' +
            settings.paymentbankNumber +
            '@' +
            settings.paymentifsc +
            '.ifsc.npci' +
            '&pn=' +
            settings.paymentPayeeName +
            '&am=' +
            data.totalAmount +
            '&tn=' +
            settings.strCompanyName;
          data.qrCodestr = QRCode;
        }
      }
    }

    let format = [];
    const addNewObject = (type) => {
      const newObject = {
        name: type
      };
      format.push(newObject);
    };

    let bisImage =
      'https://firebasestorage.googleapis.com/v0/b/oneshell-d3a18.appspot.com/o/pos%2Fbis_hallmark.png?alt=media&token=8e7c3fd8-3aa2-405a-91d0-7da588e9032f';
    let json = this.props.customPrintOptions;
    if (json) {
      if (json.printOriginal) {
        for (let i = 0; i < json.printOriginalCopies; i++) {
          addNewObject('Original Copy');
        }
      }
      if (json.printDuplicate) {
        for (let i = 0; i < json.printDuplicateCopies; i++) {
          addNewObject('Duplicate Copy');
        }
      }
      if (json.printTriplicate) {
        for (let i = 0; i < json.printTriplicateCopies; i++) {
          addNewObject('Triplicate Copy');
        }
      }
      if (json.printCustom) {
        for (let i = 0; i < json.printCustomCopies; i++) {
          addNewObject(json.printCustomName);
        }
      }
      if (
        !json.printOriginal &&
        !json.printDuplicate &&
        !json.printTriplicate &&
        !json.printCustom
      ) {
        addNewObject('Original Copy');
      }
    } else {
      addNewObject('Original Copy');
    }
    console.log('customPrintOptions_1', format);
    console.log(
      TxnSettings,
      TxnEnableFieldsMap,
      settings,
      this.props.data,
      TxnSettings?.enableBuyerOtherThanConsignee
    );

    return (
      <>
        {settings.theme === 'Theme 1' ? (
          <div>
            {this.props && this.props.data
              ? format.map((item, index) => (
                  <div
                    style={{
                      fontSize:
                        settings.textSize === 'Small'
                          ? txtSmall
                          : settings.textSize === 'Medium'
                          ? txtMedium
                          : txtLarge,
                      width: '100%',
                      padding: '5px',
                      pageBreakAfter: 'always',
                      fontFamily: 'Roboto',
                      wordBreak: 'break-word'
                    }}
                  >
                    {!settings.headerSpace && (
                      <div style={{ textAlign: 'center' }}>
                        <div alignItems="center" justifyContent="center">
                          <div>
                            {settings.boolCompanyLogo && (
                              <Box
                                component="img"
                                style={
                                  settings.logoSize === 'Small'
                                    ? { width: logoSmall, height: logoHeightS }
                                    : settings.logoSize === 'Medium'
                                    ? { width: logoMedium, height: logoHeightM }
                                    : { width: logoLarge, height: logoHeightL }
                                }
                                src={settings.fileCompanyLogo}
                              />
                            )}
                          </div>
                          {settings.boolBisHallmark && (
                            <div style={{ float: 'right', marginTop: '-77px' }}>
                              <Box
                                component="img"
                                style={{
                                  ...(settings.logoSize === 'Small'
                                    ? {
                                        width: bisLogoSmall,
                                        height: bisLogoHeightS
                                      }
                                    : settings.logoSize === 'Medium'
                                    ? {
                                        width: bisLogoMedium,
                                        height: bisLogoHeightM
                                      }
                                    : {
                                        width: bisLogoLarge,
                                        height: bisLogoHeightL
                                      }),
                                  padding: '5px'
                                }}
                                src={bisImage}
                              />
                            </div>
                          )}
                          <div
                            style={
                              settings.boolBisHallmark ? { clear: 'both' } : {}
                            }
                          >
                            <p>
                              {settings.boolCompanyName ? (
                                <Fragment>
                                  <h1>
                                    <strong
                                      style={{
                                        color: settings.companyNameColor
                                      }}
                                    >
                                      {settings.strCompanyName}
                                    </strong>
                                  </h1>
                                  {item.name !== '' && (
                                    <p
                                      style={{
                                        float: 'right',
                                        marginRight: '2px',
                                        padding: '5px',
                                        border: '1px solid #8080807a',
                                        color: '#808080bf',
                                        fontWeight: 'bold',
                                        fontSize: '11px',
                                        height: 'auto',
                                        marginTop: '-32px'
                                      }}
                                    >
                                      {item.name}
                                    </p>
                                  )}
                                </Fragment>
                              ) : (
                                ''
                              )}
                              {settings.boolCompanyAdditionalDesc ? (
                                <Fragment>
                                  {settings.companyAdditionalDesc}
                                  <br />
                                </Fragment>
                              ) : (
                                ''
                              )}
                              {settings.boolGSTIN ? (
                                <Fragment>GSTIN: {settings.strGSTIN}</Fragment>
                              ) : (
                                ''
                              )}
                              {settings.boolAddress ? (
                                <Fragment>
                                  <br />
                                  {settings.strAddress}
                                </Fragment>
                              ) : (
                                ''
                              )}
                              {settings.boolPhone ? (
                                <Fragment>
                                  <br />
                                  Ph. no: {settings.strPhone}
                                </Fragment>
                              ) : (
                                ''
                              )}
                              {settings.boolEmail || settings.boolWebsite ? (
                                <>
                                  <Fragment>
                                    <br />
                                    Email: {settings.strEmail}
                                  </Fragment>

                                  {settings.boolWebsite && (
                                    <Fragment>
                                      {' '}
                                      Website: {settings.strEmail}
                                    </Fragment>
                                  )}
                                </>
                              ) : (
                                ''
                              )}
                              {settings.boolPAN ? (
                                <Fragment>
                                  <br />
                                  PAN: {settings.strPAN}
                                </Fragment>
                              ) : (
                                ''
                              )}
                            </p>
                          </div>
                        </div>
                      </div>
                    )}
                    {this.getSeparator(1, classes.separator)}
                    <div>
                      <h2>
                        <center>{data.mainTitle}</center>
                      </h2>
                      {!settings.boolCompanyName && item.name !== '' && (
                        <p
                          style={{
                            float: 'right',
                            marginRight: '2px',
                            padding: '5px',
                            border: '1px solid #8080807a',
                            color: '#808080bf',
                            fontWeight: 'bold',
                            fontSize: '11px',
                            height: 'auto',
                            marginTop: '-29px'
                          }}
                        >
                          {item.name}
                        </p>
                      )}
                    </div>

                    {/* {this.getSeparator(2, classes.separator)} */}

                    <div>
                      <div
                        style={{
                          width: '100%',
                          display: 'flex',
                          flexDirection: 'row'
                        }}
                      >
                        <div style={{ width: '50%' }}>
                          <p
                            style={{
                              textAlign: 'left',
                              flex: 1,
                              wordBreak: 'keep-all',
                              fontWeight: 600
                            }}
                          >
                            <b>
                              {' '}
                              {data.invoiceNoTitle}
                              {' : '}
                              {data.invoiceNumber}{' '}
                            </b>
                          </p>
                          {data.salesInvoiceNumber && (
                            <>
                              <p
                                style={{
                                  textAlign: 'left',
                                  flex: 1,
                                  wordBreak: 'keep-all',
                                  fontWeight: 600
                                }}
                              >
                                <b>
                                  Return Date :{' '}
                                  {dateFormatter(data.salesReturnDate)}{' '}
                                </b>
                              </p>
                              <p
                                style={{
                                  textAlign: 'left',
                                  flex: 1,
                                  wordBreak: 'keep-all',
                                  fontWeight: 600
                                }}
                              >
                                <b>
                                  Sales Invoice No. :{data.salesInvoiceNumber}{' '}
                                </b>
                              </p>
                            </>
                          )}
                          <p
                            style={{
                              textAlign: 'left',
                              flex: 1,
                              wordBreak: 'keep-all'
                            }}
                          >
                            <b>
                              {_data.purchase_order_invoice_number
                                ? 'PO Date : '
                                : data.salesReturnDate
                                ? 'Sales Invoice Date : '
                                : 'Date : '}
                              {dateFormatter(data.date) + ' '}{' '}
                              {TxnEnableFieldsMap.get(
                                'display_bill_transaction_time'
                              ) && getTimefromTimeStamp(data.updatedAt)}
                            </b>
                          </p>
                          {data.placeOfSupplyName !== '' && (
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              <b>Place Of Supply{' : '}</b>
                              {data.placeOfSupplyName}
                            </p>
                          )}
                          {taxSettingsData?.exporterCodeNo ? (
                            <p>
                              <b> EXP Ref: </b>{' '}
                              {taxSettingsData?.exporterCodeNo}
                            </p>
                          ) : (
                            ''
                          )}
                          {taxSettingsData?.exporterRegistrationDate ? (
                            <p>
                              <b> EXP Reg Date: </b>{' '}
                              {taxSettingsData?.exporterRegistrationDate}
                            </p>
                          ) : (
                            ''
                          )}
                          {true && data.exportCountryOrigin !== '' && (
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              <b>Country of origin{' : '}</b>
                              {data.exportCountryOrigin}
                            </p>
                          )}
                          {true && data.exportCountry !== '' && (
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              <b>Country of Final{' : '}</b>
                              {data.exportCountry}
                            </p>
                          )}
                          {data.duedate && (
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              <b>Due Date : </b>
                              {dateFormatter(data.duedate)}
                            </p>
                          )}

                          {TxnSettings &&
                            TxnEnableFieldsMap.get('display_po') &&
                            data.poNo !== '' && (
                              <>
                                <p
                                  style={{
                                    textAlign: 'left',
                                    flex: 1,
                                    wordBreak: 'keep-all'
                                  }}
                                >
                                  {/* <b>{data.poNo && 'PO Number : '}</b> */}
                                  <b>PO Number : </b>
                                  {data.poNo && data.poNo}
                                </p>
                                {<br />}
                                <p
                                  style={{
                                    textAlign: 'left',
                                    flex: 1,
                                    wordBreak: 'keep-all'
                                  }}
                                >
                                  <b>PO Date : </b>
                                  {data.poDate &&
                                    dateFormatter(data.poDate) + ' '}{' '}
                                  {data.poDate &&
                                    TxnEnableFieldsMap.get(
                                      'display_bill_transaction_time'
                                    ) &&
                                    getTimefromTimeStamp(data.updatedAt)}
                                </p>
                              </>
                            )}
                        </div>
                        <div style={{ width: '50%' }}>
                          {data.order_type === 'kot' ? (
                            <>
                              <p
                                style={{
                                  textAlign: 'right',
                                  flex: 1,
                                  wordBreak: 'keep-all'
                                }}
                              >
                                <b>Table No.: </b>
                                {data.tableNumber && data.tableNumber}
                              </p>
                              <p
                                style={{
                                  textAlign: 'right',
                                  flex: 1,
                                  wordBreak: 'keep-all'
                                }}
                              >
                                <b>Waiter Name : </b>
                                {data.waiter_name && data.waiter_name}
                              </p>
                              <p
                                style={{
                                  textAlign: 'right',
                                  flex: 1,
                                  wordBreak: 'keep-all'
                                }}
                              >
                                <b>Chairs : </b>
                                {data.chairsUsedInString &&
                                  data.chairsUsedInString}
                              </p>
                            </>
                          ) : (
                            <>
                              {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_job_work_employee'
                                ) && (
                                  <p
                                    style={{
                                      textAlign: 'right',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>Job By{' : '}</b>
                                    {_data.jobAssignedEmployeeName}
                                  </p>
                                )}
                              {TxnSettings &&
                                TxnEnableFieldsMap.get('display_salesman') && (
                                  <p
                                    style={{
                                      textAlign: 'right',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>Sales By{' : '}</b>
                                    {_data.salesEmployeeName}
                                  </p>
                                )}
                              {_data.backToBackPurchaseNumber &&
                                _data.supervisorName !== '' && (
                                  <p
                                    style={{
                                      textAlign: 'right',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>Supervisor{' : '}</b>
                                    {_data.supervisorName}
                                  </p>
                                )}
                              {_data.backToBackPurchaseNumber &&
                                _data.materialsInChargeName !== '' && (
                                  <p
                                    style={{
                                      textAlign: 'right',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>Materials In Charge{' : '}</b>
                                    {_data.materialsInChargeName}
                                  </p>
                                )}
                              {data.eWayBillNo && data.eWayBillNo !== '' && (
                                <p
                                  style={{
                                    textAlign: 'right',
                                    flex: 1,
                                    wordBreak: 'keep-all'
                                  }}
                                >
                                  <b>E-Way Bill No{' : '}</b>
                                  {data.eWayBillNo}
                                </p>
                              )}
                              {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) && (
                                  <p
                                    style={{
                                      textAlign: 'right',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>{data.vehicleNo && 'Vehicle No. : '}</b>
                                    {data.vehicleNo && data.vehicleNo}
                                  </p>
                                )}
                              {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) && (
                                  <p
                                    style={{
                                      textAlign: 'right',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>
                                      {data.transportMode && 'Transport Mode: '}
                                    </b>
                                    {data.transportMode && data.transportMode}
                                  </p>
                                )}
                              {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) && (
                                  <p
                                    style={{
                                      textAlign: 'right',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>
                                      {data.portOfLoading &&
                                        'Port of Loading: '}
                                    </b>
                                    {data.portOfLoading && data.portOfLoading}
                                  </p>
                                )}
                              {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) && (
                                  <p
                                    style={{
                                      textAlign: 'right',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>
                                      {data.portOfDischarge &&
                                        'Port of Discharge: '}
                                    </b>
                                    {data.portOfDischarge &&
                                      data.portOfDischarge}
                                  </p>
                                )}
                              {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) && (
                                  <p
                                    style={{
                                      textAlign: 'right',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>
                                      {data.vesselFlightNo &&
                                        'Vessel Flight No: '}
                                    </b>
                                    {data.vesselFlightNo && data.vesselFlightNo}
                                  </p>
                                )}
                              {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) && (
                                  <p
                                    style={{
                                      textAlign: 'right',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>
                                      {data.transporterId &&
                                        'Transporter Id : '}
                                    </b>
                                    {data.transporterId && data.transporterId}
                                  </p>
                                )}
                            </>
                          )}
                        </div>
                      </div>

                      <div>
                        {_data.rateList &&
                          _data.rateList.length > 0 &&
                          localStorage.getItem('isJewellery') === 'true' &&
                          getMetalNRates()}

                        <div
                          style={{
                            display: 'inline-flex',
                            justifycontent: 'space-between',
                            width: '100%'
                          }}
                        >
                          {_data.delivery_challan_invoice_number &&
                          data.shipToCustomerName ? (
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              {/* {<br />} */}
                              <b>{data.billTitle}</b>
                              {<br />}
                              <b>{data.shipToCustomerName}</b>
                              {<br />}
                              {data.shipToCustomerPhoneNo ? (
                                <p
                                  style={{
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginTop: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Ph. no: {data.shipToCustomerPhoneNo}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.shipToCustomerAddress ? (
                                <p
                                  style={{
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginTop: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.shipToCustomerAddress}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.shipToCustomerGSTNo ? (
                                <p
                                  style={{
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginTop: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  GSTIN: {data.shipToCustomerGSTNo}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}

                              {data.shipToCustomerState ? (
                                <p
                                  style={{
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginTop: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.shipToCustomerState}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                            </p>
                          ) : (
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              {/* {<br />} */}
                              <b>{data.billTitle}</b>
                              {<br />}
                              <b>{data.tname}</b>
                              {<br />}
                              {data.tphone ? (
                                <p
                                  style={{
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginTop: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Ph No: {data.tphone}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.tadd ? (
                                <p
                                  style={{
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginTop: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.tadd}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.tgstn ? (
                                <p
                                  style={{
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginTop: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.tgstn}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {_data.aadharNumber ? (
                                <p
                                  style={{
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginTop: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Aaadhar No: {_data.aadharNumber}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.tstate ? (
                                <p
                                  style={{
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginTop: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.tstate}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                            </p>
                          )}

                          {data.isSale && _data.shipToCustomerName && (
                            <p
                              style={{
                                textAlign: 'right',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              {/* {<br />} */}
                              <b>
                                {TxnSettings?.enableBuyerOtherThanConsignee
                                  ? 'Buyer (Other Consignee)'
                                  : 'Ship To'}
                              </b>
                              {<br />}
                              {data.shipToCustomerName
                                ? data.shipToCustomerName
                                : 'N/A'}
                              {<br />}
                              {data.shipToCustomerPhoneNo ? (
                                <p
                                  style={{
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginTop: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Ph No: {data.shipToCustomerPhoneNo}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.shipToCustomerAddress ? (
                                <p
                                  style={{
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginTop: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.shipToCustomerAddress}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.shipToCustomerGSTNo ? (
                                <p
                                  style={{
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginTop: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  GSTIN: {data.shipToCustomerGSTNo}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.shipToCustomerState ? (
                                <p
                                  style={{
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginTop: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.shipToCustomerState}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                            </p>
                          )}
                        </div>
                      </div>

                      <div>
                        {isTemple && (
                          <div
                            dangerouslySetInnerHTML={{
                              __html: data.astrologyDetails + '<br />'
                            }}
                          ></div>
                        )}
                      </div>

                      <div>
                        {isTemple && (
                          <div
                            dangerouslySetInnerHTML={{
                              __html: data.additionalTempleDetails + '<br />'
                            }}
                          ></div>
                        )}
                      </div>
                    </div>

                    <div>
                      {getHeaderRow()}
                      <div style={{ minHeight: minRowHeight }}>
                        {_data.item_list && _data.item_list.length > 0
                          ? getInvoiceRows()
                          : ''}
                      </div>
                      {!isPackagePreivew ? (
                        <div>
                          <div
                            style={{
                              breakInside: 'avoid',
                              borderTop: '1px solid',
                              borderBottom: '1px solid',
                              display: 'flex',
                              flexDirection: 'row',
                              fontWeight: 600
                            }}
                          >
                            <p
                              style={{ textAlign: 'center', width: '10%' }}
                            ></p>
                            <p style={{ width: '30%' }}>Total</p>

                            {/*******  HSN ********/}
                            {TxnEnableFieldsMap.get('display_hsn') && (
                              <p
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></p>
                            )}

                            {/********* Serial/IMEI No. *********/}
                            {TxnSettings &&
                              TxnEnableFieldsMap.get(
                                'display_product_serial_imei'
                              ) && (
                                <p
                                  style={{ width: '15%', textAlign: 'right' }}
                                ></p>
                              )}

                            {/* Batch Number */}
                            {TxnEnableFieldsMap.get(
                              'display_product_batch_number'
                            ) && (
                              <p
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></p>
                            )}

                            {/* Barcode */}
                            {TxnEnableFieldsMap.get(
                              'display_product_barcode'
                            ) && (
                              <p
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></p>
                            )}

                            {/* Brand */}
                            {TxnEnableFieldsMap.get(
                              'display_product_brand'
                            ) && (
                              <p
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></p>
                            )}

                            {/* Model No */}
                            {TxnEnableFieldsMap.get(
                              'display_product_model_no'
                            ) && (
                              <p
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></p>
                            )}

                            {/* Manufacturing Date */}
                            {TxnEnableFieldsMap.get(
                              'display_product_manufacturing_date'
                            ) && (
                              <p
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></p>
                            )}

                            {/* Expiry Date */}
                            {TxnEnableFieldsMap.get(
                              'display_product_expiry_date'
                            ) && (
                              <p
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_quantity'
                            ) && (
                              <p style={{ width: '12%', textAlign: 'right' }}>
                                {totalqty}
                              </p>
                            )}

                            {/* Total Free Quantity */}
                            {TxnEnableFieldsMap.get(
                              'display_product_free_quantity'
                            ) && (
                              <p style={{ width: '12%', textAlign: 'right' }}>
                                {totalfreeqty}
                              </p>
                            )}

                            {/* Unit */}
                            {TxnEnableFieldsMap.get('display_product_unit') && (
                              <p
                                style={{ width: '12%', textAlign: 'right' }}
                              ></p>
                            )}

                            {TxnEnableFieldsMap.get('display_product_mrp') && (
                              <p
                                style={{ width: '15%', textAlign: 'right' }}
                              ></p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_price'
                            ) && (
                              <p
                                style={{
                                  width: '15%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></p>
                            )}

                            {_data.exportConversionRate > 0 &&
                              TxnEnableFieldsMap.get(
                                'display_product_price_other_currency'
                              ) && (
                                <p
                                  style={{
                                    width: '15%',
                                    textAlign: 'right',
                                    paddingRight: '3px'
                                  }}
                                ></p>
                              )}

                            {TxnEnableFieldsMap.get(
                              'display_product_price_per_gram'
                            ) && (
                              <p
                                style={{
                                  width: '30%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_gross_weight'
                            ) && (
                              <p style={{ width: '15%', textAlign: 'right' }}>
                                {parseFloat(totalGrossWt).toFixed(3)}
                              </p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_stone_weight'
                            ) && (
                              <p style={{ width: '15%', textAlign: 'right' }}>
                                {parseFloat(totalStoneWt).toFixed(3)}
                              </p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_net_weight'
                            ) && (
                              <p style={{ width: '15%', textAlign: 'right' }}>
                                {parseFloat(totalNetWt).toFixed(3)}
                              </p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_wastage'
                            ) && (
                              <p
                                style={{ width: '15%', textAlign: 'right' }}
                              ></p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_making_charge'
                            ) && (
                              <p
                                style={{ width: '15%', textAlign: 'right' }}
                              ></p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_making_charge_per_gram'
                            ) && (
                              <p
                                style={{ width: '15%', textAlign: 'right' }}
                              ></p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_stone_charge'
                            ) && (
                              <p
                                style={{ width: '15%', textAlign: 'right' }}
                              ></p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_purity'
                            ) && (
                              <p
                                style={{ width: '15%', textAlign: 'right' }}
                              ></p>
                            )}

                            {/* Copper */}
                            {TxnEnableFieldsMap.get(
                              'display_product_copper'
                            ) && (
                              <p
                                style={{ width: '15%', textAlign: 'right' }}
                              ></p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_discount'
                            ) && (
                              <p style={{ width: '15%', textAlign: 'right' }}>
                                {data.exportConversionRate > 0 ? (
                                  <span>
                                    {getFloatWithTwoDecimal(
                                      data.subTotalDisc /
                                        data.exportConversionRate
                                    )}
                                  </span>
                                ) : (
                                  <span>
                                    â‚¹{' '}
                                    {getFloatWithTwoDecimal(data.subTotalDisc)}
                                  </span>
                                )}
                              </p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_gst_percentage'
                            ) && (
                              <p
                                style={{ width: '15%', textAlign: 'right' }}
                              ></p>
                            )}

                            {TxnEnableFieldsMap.get('display_product_gst') && (
                              <p style={{ width: '15%', textAlign: 'right' }}>
                                {getFloatWithTwoDecimal(totaltax_gst)}
                              </p>
                            )}

                            {data.isSale ? (
                              <>
                                {TxnEnableFieldsMap.get(
                                  'display_product_total_amount'
                                ) && (
                                  <p
                                    style={{
                                      width: '25%',
                                      textAlign: 'right',
                                      paddingRight: '3px'
                                    }}
                                  >
                                    {(
                                      getFloatWithTwoDecimal(
                                        data.totalTaxableAmount
                                      ) / (_data.exportConversionRate || 1)
                                    ).toFixed(2)}
                                  </p>
                                )}
                              </>
                            ) : (
                              <p
                                style={{
                                  width: '25%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              >
                                {getFloatWithTwoDecimal(
                                  data.totalTaxableAmount
                                )}{' '}
                              </p>
                            )}

                            {_data.exportConversionRate > 0 &&
                              TxnEnableFieldsMap.get(
                                'display_product_total_amount_other'
                              ) &&
                              data.amountOtherCurrency && (
                                <div
                                  style={{
                                    paddingRight: '3px',
                                    width: '25%',
                                    textAlign: 'right'
                                  }}
                                >
                                  {data.amountOtherCurrency?.toFixed(2)}
                                </div>
                              )}
                          </div>

                          <div
                            style={{
                              breakInside: 'avoid',
                              display: 'flex',
                              flexDirection: 'row',
                              width: '100%'
                            }}
                          >
                            <div style={{ width: '60%', textAlign: 'left' }}>
                              <div>
                                <p
                                  style={{
                                    fontWeight: 600,
                                    paddingBottom: '0px',

                                    marginBottom: '0px'
                                  }}
                                >
                                  INVOICE AMOUNT IN WORDS
                                </p>
                                <p
                                  style={{
                                    textTransform: 'capitalize',
                                    backgroundColor: '#f5f2f2',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginTop: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.strTotal}
                                </p>
                              </div>
                            </div>
                            <div style={{ width: '40%' }}>
                              <div
                                style={{
                                  textAlign: 'right',
                                  display: 'flex',
                                  flexDirection: 'row'
                                }}
                              >
                                <p>Sub Total</p>
                                {data.exportConversionRate ? (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    {data.exportCurrency}{' '}
                                    {(
                                      getFloatWithTwoDecimal(
                                        data.totalTaxableAmount +
                                          data.subTotalDisc
                                      ) / data.exportConversionRate
                                    )?.toFixed(2)}
                                    {/* {getFloatWithTwoDecimal(data.subTotal)} */}
                                  </p>
                                ) : (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    â‚¹{' '}
                                    {/* {getFloatWithTwoDecimal(
                                      data.totalTaxableAmount +
                                        data.subTotalDisc
                                    )} */}
                                    {getFloatWithTwoDecimal(data.subTotal)}
                                  </p>
                                )}
                              </div>
                            </div>
                          </div>

                          <div
                            style={{
                              breakInside: 'avoid',
                              display: 'flex',
                              flexDirection: 'row',
                              width: '100%'
                            }}
                          >
                            <div style={{ width: '60%', textAlign: 'left' }}>
                              {!_data.date && settings.boolDesc ? (
                                <div
                                  style={{
                                    breakInside: 'avoid',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  <p
                                    style={{
                                      fontWeight: 600,
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    Description
                                  </p>
                                  <p
                                    style={{
                                      backgroundColor: '#f5f2f2',
                                      paddingTop: '0px',
                                      paddingBottom: '0px',
                                      marginTop: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    {settings.strDesc}
                                  </p>
                                </div>
                              ) : (
                                ''
                              )}
                              {TxnEnableFieldsMap.get('display_bill_notes') ||
                              TxnEnableFieldsMap.get('display_total_weight') ? (
                                <div>
                                  <p
                                    style={{
                                      fontWeight: 600,
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    Notes
                                  </p>
                                  {data.notes && (
                                    <p
                                      style={{
                                        backgroundColor: '#f5f2f2',
                                        paddingTop: '0px',
                                        paddingBottom: '0px',
                                        marginTop: '0px',
                                        marginBottom: '0px'
                                      }}
                                    >
                                      {data.notes}
                                    </p>
                                  )}
                                  {TxnEnableFieldsMap.get(
                                    'display_total_weight'
                                  ) && (
                                    <>
                                      {_data.weightIn && _data.weightIn > 0 ? (
                                        <div
                                          style={{
                                            backgroundColor: '#f5f2f2',
                                            textAlign: 'right',
                                            display: 'flex',
                                            flexDirection: 'row',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginTop: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          <p
                                            style={{
                                              fontWeight: 600,
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginTop: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            Weight In
                                          </p>
                                          <p
                                            style={{
                                              flex: 1,
                                              wordBreak: 'keep-all',
                                              fontWeight: 600,
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginTop: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            {getFloatWithTwoDecimal(
                                              _data.weightIn
                                            )}
                                            g
                                          </p>
                                        </div>
                                      ) : null}
                                      {_data.weightOut &&
                                      _data.weightOut > 0 ? (
                                        <div
                                          style={{
                                            backgroundColor: '#f5f2f2',
                                            textAlign: 'right',
                                            display: 'flex',
                                            flexDirection: 'row',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginTop: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          <p
                                            style={{
                                              fontWeight: 600,
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginTop: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            Weight Out
                                          </p>
                                          <p
                                            style={{
                                              flex: 1,
                                              wordBreak: 'keep-all',
                                              fontWeight: 600,
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginTop: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            {getFloatWithTwoDecimal(
                                              _data.weightOut
                                            )}
                                            g
                                          </p>
                                        </div>
                                      ) : null}
                                      {_data.wastage && _data.wastage > 0 ? (
                                        <div
                                          style={{
                                            backgroundColor: '#f5f2f2',
                                            textAlign: 'right',
                                            display: 'flex',
                                            flexDirection: 'row',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginTop: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          <p
                                            style={{
                                              fontWeight: 600,
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginTop: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            Wastage
                                          </p>
                                          <p
                                            style={{
                                              flex: 1,
                                              wordBreak: 'keep-all',
                                              fontWeight: 600,
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginTop: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            {getFloatWithTwoDecimal(
                                              _data.wastage
                                            )}
                                            g
                                          </p>
                                        </div>
                                      ) : null}
                                    </>
                                  )}
                                  {this.getSeparator(1, classes.separator)}
                                </div>
                              ) : (
                                ''
                              )}
                              {data.terms !== '' ? (
                                <Fragment>
                                  {this.getSeparator(1, classes.separator)}
                                  <div style={{ whiteSpace: 'break-spaces' }}>
                                    <p
                                      style={{
                                        fontWeight: 600,
                                        paddingTop: '0px',
                                        paddingBottom: '0px',
                                        marginTop: '0px',
                                        marginBottom: '0px'
                                      }}
                                    >
                                      TERMS AND CONDITIONS
                                    </p>
                                    {data.terms}
                                  </div>
                                </Fragment>
                              ) : (
                                ''
                              )}
                            </div>
                            <div style={{ textAlign: 'center', width: '40%' }}>
                              <div
                                style={{
                                  textAlign: 'right',
                                  display: 'flex',
                                  flexDirection: 'row',
                                  flexWrap: 'wrap'
                                }}
                              >
                                {_data.exportConversionRate === 0 &&
                                TxnEnableFieldsMap.get(
                                  'display_bill_packing_charge'
                                ) &&
                                _data.packing_charge ? (
                                  <div
                                    style={{
                                      minWidth: '100%',
                                      display: 'flex',
                                      textAlign: 'right'
                                    }}
                                  >
                                    <p>Package Charge</p>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all'
                                      }}
                                    >
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.packing_charge
                                          ? _data.packing_charge
                                          : 0
                                      )}
                                    </p>
                                  </div>
                                ) : (
                                  ''
                                )}

                                {_data.exportConversionRate > 0 &&
                                TxnEnableFieldsMap.get(
                                  'display_packing_other_currency'
                                ) &&
                                _data.packingChargeOtherCurrency ? (
                                  <div
                                    style={{
                                      minWidth: '100%',
                                      display: 'flex',
                                      textAlign: 'right'
                                    }}
                                  >
                                    <p>Package Charge</p>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all'
                                      }}
                                    >
                                      {data.exportCurrency}{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.packingChargeOtherCurrency
                                          ? _data.packingChargeOtherCurrency
                                          : 0
                                      )}
                                    </p>
                                  </div>
                                ) : (
                                  ''
                                )}
                              </div>
                              {!_data.backToBackPurchaseNumber && (
                                <>
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row',
                                      flexWrap: 'wrap'
                                    }}
                                  >
                                    {_data.exportConversionRate === 0 &&
                                      TxnEnableFieldsMap.get(
                                        'display_bill_shipping_charge'
                                      ) &&
                                      _data.shipping_charge !== 0 && (
                                        <div
                                          style={{
                                            minWidth: '100%',
                                            display: 'flex',
                                            textAlign: 'right'
                                          }}
                                        >
                                          <p>Shipping Charge</p>
                                          <p
                                            style={{
                                              flex: 1,
                                              wordBreak: 'keep-all'
                                            }}
                                          >
                                            â‚¹{' '}
                                            {getFloatWithTwoDecimal(
                                              _data.shipping_charge
                                                ? _data.shipping_charge
                                                : 0
                                            )}
                                          </p>
                                        </div>
                                      )}
                                    {_data.exportConversionRate > 0 &&
                                      TxnEnableFieldsMap.get(
                                        'display_shipping_other_currency'
                                      ) &&
                                      _data.shippingChargeOtherCurrency !==
                                        0 && (
                                        <div
                                          style={{
                                            minWidth: '100%',
                                            display: 'flex',
                                            textAlign: 'right'
                                          }}
                                        >
                                          <p>Shipping Charge </p>
                                          <p
                                            style={{
                                              flex: 1,
                                              wordBreak: 'keep-all'
                                            }}
                                          >
                                            {data.exportCurrency}{' '}
                                            {getFloatWithTwoDecimal(
                                              _data.shippingChargeOtherCurrency
                                                ? _data.shippingChargeOtherCurrency
                                                : 0
                                            )}
                                          </p>
                                        </div>
                                      )}
                                  </div>
                                </>
                              )}
                              {_data.freightCharge !== 0 &&
                                _data.backToBackPurchaseNumber && (
                                  <>
                                    {TxnEnableFieldsMap.get(
                                      'display_bill_shipping_charge'
                                    ) && (
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p>Freight Charge</p>
                                        <p
                                          style={{
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                        >
                                          â‚¹{' '}
                                          {getFloatWithTwoDecimal(
                                            _data.freightCharge
                                              ? _data.freightCharge
                                              : 0
                                          )}
                                        </p>
                                      </div>
                                    )}
                                  </>
                                )}
                              {_data.exportConversionRate === 0 &&
                              TxnEnableFieldsMap.get('display_bill_insurance')
                                ? _data.insurance &&
                                  _data.insurance.amount !== 0 && (
                                    <div
                                      style={{
                                        textAlign: 'right',
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <p>Insurance</p>
                                      <p
                                        style={{
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(
                                          _data.insurance.amount
                                            ? _data.insurance.amount
                                            : 0
                                        )}
                                      </p>
                                    </div>
                                  )
                                : ''}
                              {_data.exportConversionRate > 0 &&
                              TxnEnableFieldsMap.get(
                                'display_insurance_other_currency'
                              )
                                ? _data.insurance &&
                                  _data.insurance.amountOtherCurrency !== 0 && (
                                    <div
                                      style={{
                                        textAlign: 'right',
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <p>Insurance</p>
                                      <p
                                        style={{
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                      >
                                        {data.exportCurrency}{' '}
                                        {getFloatWithTwoDecimal(
                                          _data.insurance.amountOtherCurrency
                                            ? _data.insurance
                                                .amountOtherCurrency
                                            : 0
                                        )}
                                      </p>
                                    </div>
                                  )
                                : ''}

                              {data.totalDiscount !== 0 && (
                                <>
                                  {((_data.invoice_number &&
                                    TxnEnableFieldsMap.get(
                                      'display_bill_discount'
                                    )) ||
                                    !_data.invoice_number) && (
                                    <div
                                      style={{
                                        textAlign: 'right',
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <p>Total Discount</p>
                                      <p
                                        style={{
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(
                                          data.totalDiscount
                                        )}
                                      </p>
                                    </div>
                                  )}
                                </>
                              )}

                              {settings.boolTaxDetails ? (
                                <div style={{ breakInside: 'avoid' }}>
                                  <p>
                                    {Array.from(gstMap.keys()).map((key) => {
                                      return (
                                        <div
                                          style={{
                                            textAlign: 'right',
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <div
                                            style={{
                                              width: '100%',
                                              textAlign: 'start'
                                            }}
                                          >
                                            {' '}
                                            <p>{key}</p>
                                          </div>
                                          <div style={{ width: '100%' }}>
                                            {' '}
                                            <p
                                              style={{
                                                flex: 1,
                                                wordBreak: 'keep-all',
                                                fontWeight: 600
                                              }}
                                            >
                                              â‚¹{' '}
                                              {getFloatWithTwoDecimal(
                                                gstMap.get(key)
                                              )}
                                            </p>
                                          </div>
                                        </div>
                                      );
                                    })}
                                  </p>
                                </div>
                              ) : (
                                ''
                              )}

                              {/* TCS Amount */}
                              {data.tcsAmount > 0 && (
                                <>
                                  {data.tcsAmount > 0 && (
                                    <div
                                      style={{
                                        textAlign: 'right',
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <p>
                                        TCS@{data.tcsRate}% {data.tcsCode}
                                      </p>
                                      <p
                                        style={{
                                          flex: 1,
                                          wordBreak: 'keep-all',
                                          fontWeight: 600
                                        }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(data.tcsAmount)}
                                      </p>
                                    </div>
                                  )}
                                </>
                              )}

                              {TxnEnableFieldsMap.get('display_product_cess') &&
                                data.totalCess > 0 && (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row'
                                    }}
                                  >
                                    <p>Total Cess</p>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all',
                                        fontWeight: 600
                                      }}
                                    >
                                      â‚¹ {getFloatWithTwoDecimal(data.totalCess)}
                                    </p>
                                  </div>
                                )}
                            </div>
                          </div>

                          <div
                            style={{
                              breakInside: 'avoid',
                              display: 'flex',
                              flexDirection: 'row',
                              width: '100%'
                            }}
                          >
                            <div
                              style={{
                                width: '60%',
                                textAlign: 'left',
                                display: 'flex'
                              }}
                            >
                              {settings.boolBankDetail ? (
                                <div
                                  style={{
                                    width: '100%',
                                    textAlign: 'left',
                                    display: 'flex'
                                  }}
                                >
                                  <div
                                    style={{ width: '65%', textAlign: 'left' }}
                                  >
                                    {settings.boolBankDetailsOnCreditSaleOnly &&
                                    data.balanceAmount > 0 ? (
                                      <div>
                                        <p style={{ fontWeight: 600 }}>
                                          BANK DETAILS
                                        </p>
                                        <div
                                          style={{
                                            breakInside: 'avoid',
                                            backgroundColor: '#f5f2f2'
                                          }}
                                        >
                                          <div
                                            style={{
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <div style={{ width: '40%' }}>
                                              <p
                                                style={{
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginTop: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                A/C Holder's Name
                                              </p>
                                            </div>
                                            <div style={{ width: '60%' }}>
                                              <p
                                                style={{
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginTop: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                :{' '}
                                                {settings.bankAccountHolderName}
                                              </p>
                                            </div>
                                          </div>
                                          <div
                                            style={{
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <div style={{ width: '40%' }}>
                                              <p
                                                style={{
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginTop: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                BANK NAME
                                              </p>
                                            </div>
                                            <div style={{ width: '60%' }}>
                                              <p
                                                style={{
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginTop: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                : {settings.bankName}
                                              </p>
                                            </div>
                                          </div>
                                          <div
                                            style={{
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <div style={{ width: '40%' }}>
                                              <p
                                                style={{
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginTop: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                A/C NO.
                                              </p>
                                            </div>
                                            <div style={{ width: '60%' }}>
                                              <p
                                                style={{
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginTop: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                : {settings.bankAccountNumber}
                                              </p>
                                            </div>
                                          </div>
                                          <div
                                            style={{
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <div style={{ width: '40%' }}>
                                              <p
                                                style={{
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginTop: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                IFSC Code
                                              </p>
                                            </div>
                                            <div style={{ width: '60%' }}>
                                              <p
                                                style={{
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginTop: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                : {settings.bankIfscCode}
                                              </p>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    ) : (
                                      <div>
                                        {!settings.boolBankDetailsOnCreditSaleOnly ? (
                                          <div
                                            style={{
                                              breakInside: 'avoid',
                                              backgroundColor: '#f5f2f2'
                                            }}
                                          >
                                            <p
                                              style={{
                                                fontWeight: 600,
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              BANK DETAILS
                                            </p>
                                            <div
                                              style={{
                                                display: 'flex',
                                                flexDirection: 'row',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginTop: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              <div style={{ width: '40%' }}>
                                                <p
                                                  style={{
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginTop: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  A/C Holder's Name
                                                </p>
                                              </div>
                                              <div style={{ width: '60%' }}>
                                                <p
                                                  style={{
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginTop: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  :{' '}
                                                  {
                                                    settings.bankAccountHolderName
                                                  }
                                                </p>
                                              </div>
                                            </div>
                                            <div
                                              style={{
                                                display: 'flex',
                                                flexDirection: 'row'
                                              }}
                                            >
                                              <div style={{ width: '40%' }}>
                                                <p
                                                  style={{
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginTop: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  BANK NAME
                                                </p>
                                              </div>
                                              <div style={{ width: '60%' }}>
                                                <p
                                                  style={{
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginTop: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  : {settings.bankName}
                                                </p>
                                              </div>
                                            </div>
                                            <div
                                              style={{
                                                display: 'flex',
                                                flexDirection: 'row'
                                              }}
                                            >
                                              <div style={{ width: '40%' }}>
                                                <p
                                                  style={{
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginTop: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  A/C NO.
                                                </p>
                                              </div>
                                              <div style={{ width: '60%' }}>
                                                <p
                                                  style={{
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginTop: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  : {settings.bankAccountNumber}
                                                </p>
                                              </div>
                                            </div>
                                            <div
                                              style={{
                                                display: 'flex',
                                                flexDirection: 'row'
                                              }}
                                            >
                                              <div style={{ width: '40%' }}>
                                                <p
                                                  style={{
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginTop: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  IFSC Code
                                                </p>
                                              </div>
                                              <div style={{ width: '60%' }}>
                                                <p
                                                  style={{
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginTop: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  : {settings.bankIfscCode}
                                                </p>
                                              </div>
                                            </div>
                                          </div>
                                        ) : (
                                          ''
                                        )}
                                      </div>
                                    )}
                                  </div>
                                  <div
                                    style={{
                                      width: '35%',
                                      textAlign: 'center'
                                    }}
                                  >
                                    {settings.boolQrCode ? (
                                      <>
                                        {this.getSeparator(
                                          1,
                                          classes.separator
                                        )}
                                        <QRCode
                                          value={
                                            data.qrCodestr ? data.qrCodestr : ''
                                          }
                                          size={75}
                                        />
                                      </>
                                    ) : (
                                      ''
                                    )}
                                  </div>
                                </div>
                              ) : (
                                ''
                              )}
                            </div>
                            <div style={{ textAlign: 'center', width: '40%' }}>
                              {String(_data.is_roundoff).toLowerCase() ===
                                'true' && (
                                <div
                                  style={{
                                    textAlign: 'right',
                                    display: 'flex',
                                    flexDirection: 'row'
                                  }}
                                >
                                  <p style={{ fontWeight: 600 }}>Round off</p>
                                  <p
                                    style={{
                                      flex: 1,
                                      wordBreak: 'keep-all',
                                      fontWeight: 600
                                    }}
                                  >
                                    {data.exportConversionRate ? (
                                      <span>
                                        {data.exportCurrency}{' '}
                                        {getFloatWithTwoDecimal(
                                          _data.round_amount /
                                            data.exportConversionRate
                                        )}
                                      </span>
                                    ) : (
                                      <span>
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(
                                          _data.round_amount
                                        )}
                                      </span>
                                    )}
                                  </p>
                                </div>
                              )}
                              <div
                                style={{
                                  textAlign: 'right',
                                  display: 'flex',
                                  flexDirection: 'row'
                                }}
                              >
                                <p
                                  style={{ fontSize: '12px', fontWeight: 600 }}
                                >
                                  Total
                                </p>
                                <p
                                  style={{
                                    fontSize: '12px',
                                    fontWeight: 600,
                                    flex: 1,
                                    wordBreak: 'keep-all'
                                  }}
                                >
                                  {data.exportConversionRate ? (
                                    <span>
                                      {data.exportCurrency}{' '}
                                      {getFloatWithTwoDecimal(data.totalAmount)}
                                    </span>
                                  ) : (
                                    <span>
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(data.totalAmount)}
                                    </span>
                                  )}
                                </p>
                              </div>

                              {_data.estimateType === 'open' ||
                              _data.estimateType === 'close' ? null : (
                                <>
                                  {data.receivedAmount > 0 && (
                                    <div
                                      style={{
                                        textAlign: 'right',
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <p>{data.paidReceivedTitle}</p>
                                      <p
                                        style={{
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(
                                          data.receivedAmount
                                        )}
                                      </p>
                                    </div>
                                  )}
                                  {_data.exportConversionRate === 0 &&
                                    data.balanceAmount > 0 && (
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p>Balance</p>
                                        <p
                                          style={{
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                        >
                                          â‚¹{' '}
                                          {getFloatWithTwoDecimal(
                                            data.balanceAmount
                                          )}
                                        </p>
                                      </div>
                                    )}

                                  {settings.boolPaymentMode &&
                                    data.paymentType !== '' && (
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p>Payment Type</p>
                                        <p
                                          style={{
                                            textTransform: 'capitalize',
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                          dangerouslySetInnerHTML={{
                                            __html: data.paymentType
                                          }}
                                        ></p>
                                      </div>
                                    )}

                                  {data.tdsAmount > 0 && (
                                    <div
                                      style={{
                                        textAlign: 'right',
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <p>
                                        TDS@{data.tdsRate}% {data.tdsCode}
                                      </p>
                                      <p
                                        style={{
                                          textTransform: 'capitalize',
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(data.tdsAmount)}
                                      </p>
                                    </div>
                                  )}
                                </>
                              )}

                              {/****** Outstanding Payble / Receivable *****/}
                              {settings.boolPreviousBalance &&
                                outStandingType &&
                                outStandingBalance !== 0 && (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row'
                                    }}
                                  >
                                    <p>Outstanding-{outStandingType} </p>
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        outStandingBalance
                                      )}
                                    </p>
                                  </div>
                                )}
                            </div>
                          </div>

                          <div
                            style={{
                              breakInside: 'avoid',
                              display: 'flex',
                              flexDirection: 'row',
                              width: '100%',
                              borderBottom: '1px solid'
                            }}
                          >
                            <div
                              style={{
                                width: '50%',
                                textAlign: 'center',
                                alignSelf: 'flex-end'
                              }}
                            >
                              {TxnEnableFieldsMap.get(
                                'display_customer_signature'
                              ) && <p>Customer's Signature</p>}
                            </div>
                            <div style={{ textAlign: 'center', width: '50%' }}>
                              {this.getSeparator(1, classes.separator)}
                              {settings.boolSignature &&
                              settings.strSignature ? (
                                <>
                                  <Box
                                    component="img"
                                    style={
                                      settings.signatureSize === 'Small'
                                        ? {
                                            width: signatureSmall,
                                            height: signatureSmall
                                          }
                                        : settings.signatureSize === 'Medium'
                                        ? {
                                            width: signatureMedium,
                                            height: signatureMedium
                                          }
                                        : {
                                            width: signatureLarge,
                                            height: signatureLarge
                                          }
                                    }
                                    src={settings.strSignature}
                                  />
                                  <p>Authorised Signature</p>
                                </>
                              ) : (
                                <>
                                  {this.getSeparator(10, classes.separator)}
                                  <p>Authorised signature</p>
                                </>
                              )}
                            </div>
                          </div>

                          {/******* e-Invoicing Details ********/}
                          {data.irnNo && (
                            <div
                              style={{
                                display: 'flex',
                                flexDirection: 'row',
                                /*  border: '1px solid', */
                                breakInside: 'avoid',
                                marginTop: '5px'
                              }}
                            >
                              <div
                                style={{ width: '25%', textAlign: 'center' }}
                              >
                                {data.eInvoiceQrCodeStr ? (
                                  <>
                                    <QRCode
                                      value={
                                        data.eInvoiceQrCodeStr
                                          ? data.eInvoiceQrCodeStr
                                          : ''
                                      }
                                      size={50}
                                    />
                                  </>
                                ) : (
                                  ''
                                )}
                              </div>
                              <div style={{ width: '75%' }}>
                                <div
                                  style={{
                                    display: 'flex',
                                    flexDirection: 'column',
                                    width: '100%'
                                  }}
                                >
                                  <div
                                    style={{
                                      display: 'flex',
                                      flexDirection: 'row',
                                      paddingLeft: '5px',
                                      width: '100%'
                                    }}
                                  >
                                    <div style={{ width: '20%' }}>
                                      <p
                                        style={{
                                          marginTop: '0px',
                                          paddingTop: '0px',
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        IRN :
                                      </p>
                                    </div>
                                    <div style={{ width: '80%' }}>
                                      <p
                                        style={{
                                          marginTop: '0px',
                                          paddingTop: '0px',
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        {data.irnNo}
                                      </p>
                                    </div>
                                  </div>
                                  <div
                                    style={{
                                      display: 'flex',
                                      flexDirection: 'row',
                                      paddingLeft: '5px',
                                      width: '100%'
                                    }}
                                  >
                                    <div style={{ width: '20%' }}>
                                      <p
                                        style={{
                                          marginTop: '0px',
                                          paddingTop: '0px',
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        Ack No. :
                                      </p>
                                    </div>
                                    <div style={{ width: '80%' }}>
                                      <p
                                        style={{
                                          marginTop: '0px',
                                          paddingTop: '0px',
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        {data.ackNo && data.ackNo}
                                      </p>
                                    </div>
                                  </div>
                                  <div
                                    style={{
                                      display: 'flex',
                                      flexDirection: 'row',
                                      paddingLeft: '5px',
                                      width: '100%'
                                    }}
                                  >
                                    <div style={{ width: '20%' }}>
                                      <p
                                        style={{
                                          marginTop: '0px',
                                          paddingTop: '0px',
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        Ack Date :
                                      </p>
                                    </div>
                                    <div style={{ width: '80%' }}>
                                      <p
                                        style={{
                                          marginTop: '0px',
                                          paddingTop: '0px',
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        {data.ackDt && data.ackDt}
                                      </p>
                                    </div>
                                  </div>
                                  {/* <div style={{ paddingLeft: '5px' }}>
                            <p
                              style={{
                                marginTop: '0px',
                                paddingTop: '0px',
                                paddingBottom: '0px',
                                marginBottom: '0px'
                              }}
                            >
                              e-Invoicing detail{'('}s{')'} generated from the
                              Government's e-Invoicing system
                            </p>
                          </div> */}
                                </div>
                              </div>
                            </div>
                          )}
                          <div style={{ textAlign: 'center' }}>
                            {settings.boolJurisdiction &&
                              settings.jurisdiction !== '' && (
                                <p>{settings.jurisdiction}</p>
                              )}
                          </div>
                        </div>
                      ) : (
                        <div
                          style={{
                            breakInside: 'avoid',
                            display: 'flex',
                            flexDirection: 'row',
                            width: '100%',
                            borderBottom: '1px solid'
                          }}
                        >
                          <div
                            style={{
                              width: '50%',
                              textAlign: 'center',
                              alignSelf: 'flex-end'
                            }}
                          >
                            {TxnEnableFieldsMap.get(
                              'display_customer_signature'
                            ) && <p>Customer's Signature</p>}
                          </div>
                          <div style={{ textAlign: 'center', width: '50%' }}>
                            {this.getSeparator(1, classes.separator)}
                            {settings.boolSignature && settings.strSignature ? (
                              <>
                                <Box
                                  component="img"
                                  style={
                                    settings.signatureSize === 'Small'
                                      ? {
                                          width: signatureSmall,
                                          height: signatureSmall
                                        }
                                      : settings.signatureSize === 'Medium'
                                      ? {
                                          width: signatureMedium,
                                          height: signatureMedium
                                        }
                                      : {
                                          width: signatureLarge,
                                          height: signatureLarge
                                        }
                                  }
                                  src={settings.strSignature}
                                />
                                <p>Authorised Signature</p>
                              </>
                            ) : (
                              <>
                                {this.getSeparator(10, classes.separator)}
                                <p>Authorised signature</p>
                              </>
                            )}
                          </div>
                        </div>
                      )}
                    </div>
                  </div>
                ))
              : ''}
          </div>
        ) : settings.theme === 'Theme 6' ? (
          <div>
            {this.props && this.props.data
              ? format.map((item, index) => (
                  <div
                    style={{
                      fontSize:
                        settings.textSize === 'Small'
                          ? txtSmall
                          : settings.textSize === 'Medium'
                          ? txtMedium
                          : txtLarge,
                      width: '100%',
                      padding: '5px',
                      pageBreakAfter: 'always',
                      fontFamily: 'Roboto',
                      wordBreak: 'break-word'
                    }}
                  >
                    {!settings.headerSpace && (
                      <div
                        style={{
                          display: 'flex',
                          flexDirection: 'row'
                        }}
                      >
                        <div style={{ width: '50%' }}>
                          <div
                            style={{
                              display: 'flex',
                              flexDirection: 'row'
                              //paddingLeft: '12px'
                            }}
                          >
                            {settings.boolCompanyLogo && (
                              <div
                                style={{
                                  width: '30%',
                                  paddingRight: '5px',
                                  alignSelf: 'center'
                                }}
                              >
                                <Box
                                  component="img"
                                  style={
                                    settings.logoSize === 'Small'
                                      ? {
                                          width: logoSmall,
                                          height: logoHeightS
                                        }
                                      : settings.logoSize === 'Medium'
                                      ? {
                                          width: logoMedium,
                                          height: logoHeightM
                                        }
                                      : {
                                          width: logoLarge,
                                          height: logoHeightL
                                        }
                                  }
                                  src={settings.fileCompanyLogo}
                                />
                              </div>
                            )}

                            <div>
                              <p>
                                {settings.boolCompanyName && (
                                  <Fragment>
                                    <h1>
                                      <strong
                                        style={{
                                          color: settings.companyNameColor
                                        }}
                                      >
                                        {settings.strCompanyName}
                                      </strong>
                                    </h1>
                                  </Fragment>
                                )}
                                {settings.boolCompanyAdditionalDesc && (
                                  <Fragment>
                                    {settings.companyAdditionalDesc}
                                    <br />
                                  </Fragment>
                                )}
                                {settings.boolGSTIN && (
                                  <Fragment>
                                    GSTIN: {settings.strGSTIN}
                                  </Fragment>
                                )}
                                {settings.boolPAN && (
                                  <Fragment>
                                    <br />
                                    PAN: {settings.strPAN}
                                  </Fragment>
                                )}
                                {settings.boolAddress && (
                                  <Fragment>
                                    <br />
                                    {settings.strAddress}
                                  </Fragment>
                                )}
                                {settings.boolEmail && (
                                  <Fragment>
                                    <br />
                                    Email: {settings.strEmail}
                                  </Fragment>
                                )}
                                {settings.boolPhone && (
                                  <Fragment>
                                    <br />
                                    Ph. no: {settings.strPhone}
                                  </Fragment>
                                )}
                                {settings.boolWebsite && (
                                  <Fragment>
                                    <br />
                                    Website: {settings.strWebsite}
                                  </Fragment>
                                )}
                              </p>
                            </div>
                          </div>
                        </div>
                        <div style={{ width: '50%' }}>
                          <h2
                            style={{
                              textAlign: 'right',
                              marginTop: '6px',
                              float: 'right',
                              paddingRight: '12px'
                            }}
                          >
                            {data.mainTitle}

                            {item.name != '' && (
                              <p
                                style={{
                                  float: 'right',
                                  marginRight: '2px',
                                  padding: '5px',
                                  border: '1px solid #8080807a',
                                  color: '#808080bf',
                                  fontWeight: 'bold',
                                  fontSize: '11px',
                                  height: 'auto',
                                  marginTop: '0px',
                                  marginLeft: '7px'
                                }}
                              >
                                {item.name}
                              </p>
                            )}
                            <br />
                            <p>
                              {settings.boolBisHallmark && (
                                <div
                                  style={{ float: 'right', marginTop: '6px' }}
                                >
                                  <Box
                                    component="img"
                                    style={{
                                      ...(settings.logoSize === 'Small'
                                        ? {
                                            width: bisLogoSmall,
                                            height: bisLogoHeightS
                                          }
                                        : settings.logoSize === 'Medium'
                                        ? {
                                            width: bisLogoMedium,
                                            height: bisLogoHeightM
                                          }
                                        : {
                                            width: bisLogoLarge,
                                            height: bisLogoHeightL
                                          }),
                                      padding: '5px'
                                    }}
                                    src={bisImage}
                                  />
                                </div>
                              )}
                            </p>
                          </h2>
                        </div>
                      </div>
                    )}
                    {this.getSeparator(1, classes.separator)}

                    <div>
                      <div
                        style={{
                          width: '100%',
                          display: 'flex',
                          flexDirection: 'row'
                        }}
                      >
                        <div style={{ width: '50%' }}>
                          <p
                            style={{
                              textAlign: 'left',
                              flex: 1,
                              wordBreak: 'keep-all',
                              fontWeight: 600
                            }}
                          >
                            <b>
                              {' '}
                              {data.invoiceNoTitle}
                              {' : '}
                              {data.invoiceNumber}{' '}
                            </b>
                          </p>
                          {data.salesInvoiceNumber && (
                            <>
                              <p
                                style={{
                                  textAlign: 'left',
                                  flex: 1,
                                  wordBreak: 'keep-all',
                                  fontWeight: 600
                                }}
                              >
                                <b>
                                  Return Date :{' '}
                                  {dateFormatter(data.salesReturnDate)}{' '}
                                </b>
                              </p>
                              <p
                                style={{
                                  textAlign: 'left',
                                  flex: 1,
                                  wordBreak: 'keep-all',
                                  fontWeight: 600
                                }}
                              >
                                <b>
                                  Sales Invoice No. :{data.salesInvoiceNumber}{' '}
                                </b>
                              </p>
                            </>
                          )}
                          <p
                            style={{
                              textAlign: 'left',
                              flex: 1,
                              wordBreak: 'keep-all'
                            }}
                          >
                            <b>
                              {_data.purchase_order_invoice_number
                                ? 'PO Date : '
                                : data.salesReturnDate
                                ? 'Sales Invoice Date : '
                                : 'Date : '}
                              {dateFormatter(data.date) + ' '}{' '}
                              {TxnEnableFieldsMap.get(
                                'display_bill_transaction_time'
                              ) && getTimefromTimeStamp(data.updatedAt)}
                            </b>
                          </p>
                          {taxSettingsData?.exporterCodeNo ? (
                            <p>
                              <b> EXP Ref: </b>{' '}
                              {taxSettingsData?.exporterCodeNo}
                            </p>
                          ) : (
                            ''
                          )}
                          {taxSettingsData?.exporterRegistrationDate ? (
                            <p>
                              <b> EXP Reg Date: </b>{' '}
                              {taxSettingsData?.exporterRegistrationDate}
                            </p>
                          ) : (
                            ''
                          )}
                          {data.placeOfSupplyName !== '' && (
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              <b>Place Of Supply{' : '}</b>
                              {data.placeOfSupplyName}
                            </p>
                          )}
                          {true && data.exportCountryOrigin !== '' && (
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              <b>Country of origin{' : '}</b>
                              {data.exportCountryOrigin}
                            </p>
                          )}
                          {true && data.exportCountry !== '' && (
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              <b>Country of Final{' : '}</b>
                              {data.exportCountry}
                            </p>
                          )}
                          {data.duedate && (
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              <b>Due Date : </b>
                              {dateFormatter(data.duedate)}
                            </p>
                          )}

                          {TxnSettings &&
                            TxnEnableFieldsMap.get('display_po') &&
                            data.poNo !== '' && (
                              <>
                                <p
                                  style={{
                                    textAlign: 'left',
                                    flex: 1,
                                    wordBreak: 'keep-all'
                                  }}
                                >
                                  <b>PO Number : </b>
                                  {data.poNo && data.poNo}
                                </p>
                                {<br />}
                                <p
                                  style={{
                                    textAlign: 'left',
                                    flex: 1,
                                    wordBreak: 'keep-all'
                                  }}
                                >
                                  <b>PO Date : </b>
                                  {data.poDate &&
                                    dateFormatter(data.poDate) + ' '}{' '}
                                  {data.poDate &&
                                    TxnEnableFieldsMap.get(
                                      'display_bill_transaction_time'
                                    ) &&
                                    getTimefromTimeStamp(data.updatedAt)}
                                </p>
                              </>
                            )}
                        </div>
                        <div style={{ width: '50%' }}>
                          {data.order_type === 'kot' ? (
                            <>
                              <p
                                style={{
                                  textAlign: 'right',
                                  flex: 1,
                                  wordBreak: 'keep-all'
                                }}
                              >
                                <b>Table No.: </b>
                                {data.tableNumber && data.tableNumber}
                              </p>
                              <p
                                style={{
                                  textAlign: 'right',
                                  flex: 1,
                                  wordBreak: 'keep-all'
                                }}
                              >
                                <b>Waiter Name : </b>
                                {data.waiter_name && data.waiter_name}
                              </p>
                              <p
                                style={{
                                  textAlign: 'right',
                                  flex: 1,
                                  wordBreak: 'keep-all'
                                }}
                              >
                                <b>Chairs : </b>
                                {data.chairsUsedInString &&
                                  data.chairsUsedInString}
                              </p>
                            </>
                          ) : (
                            <>
                              {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_job_work_employee'
                                ) && (
                                  <p
                                    style={{
                                      textAlign: 'right',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>Job By{' : '}</b>
                                    {_data.jobAssignedEmployeeName}
                                  </p>
                                )}
                              {TxnSettings &&
                                TxnEnableFieldsMap.get('display_salesman') && (
                                  <p
                                    style={{
                                      textAlign: 'right',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>Sales By{' : '}</b>
                                    {_data.salesEmployeeName}
                                  </p>
                                )}
                              {_data.backToBackPurchaseNumber &&
                                _data.supervisorName !== '' && (
                                  <p
                                    style={{
                                      textAlign: 'right',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>Supervisor{' : '}</b>
                                    {_data.supervisorName}
                                  </p>
                                )}
                              {_data.backToBackPurchaseNumber &&
                                _data.materialsInChargeName !== '' && (
                                  <p
                                    style={{
                                      textAlign: 'right',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>Materials In Charge{' : '}</b>
                                    {_data.materialsInChargeName}
                                  </p>
                                )}
                              {data.eWayBillNo && data.eWayBillNo !== '' && (
                                <p
                                  style={{
                                    textAlign: 'right',
                                    flex: 1,
                                    wordBreak: 'keep-all'
                                  }}
                                >
                                  <b>E-Way Bill No{' : '}</b>
                                  {data.eWayBillNo}
                                </p>
                              )}
                              {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) && (
                                  <p
                                    style={{
                                      textAlign: 'right',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>{data.vehicleNo && 'Vehicle No. : '}</b>
                                    {data.vehicleNo && data.vehicleNo}
                                  </p>
                                )}
                              {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) && (
                                  <p
                                    style={{
                                      textAlign: 'right',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>
                                      {data.transportMode && 'Transport Mode: '}
                                    </b>
                                    {data.transportMode && data.transportMode}
                                  </p>
                                )}
                              {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) && (
                                  <p
                                    style={{
                                      textAlign: 'right',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>
                                      {data.portOfLoading &&
                                        'Port of Loading: '}
                                    </b>
                                    {data.portOfLoading && data.portOfLoading}
                                  </p>
                                )}
                              {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) && (
                                  <p
                                    style={{
                                      textAlign: 'right',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>
                                      {data.portOfDischarge &&
                                        'Port of Discharge: '}
                                    </b>
                                    {data.portOfDischarge &&
                                      data.portOfDischarge}
                                  </p>
                                )}
                              {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) && (
                                  <p
                                    style={{
                                      textAlign: 'right',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>
                                      {data.vesselFlightNo &&
                                        'Vessel Flight No: '}
                                    </b>
                                    {data.vesselFlightNo && data.vesselFlightNo}
                                  </p>
                                )}
                              {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) && (
                                  <p
                                    style={{
                                      textAlign: 'right',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>
                                      {data.transporterId &&
                                        'Transporter Id : '}
                                    </b>
                                    {data.transporterId && data.transporterId}
                                  </p>
                                )}
                            </>
                          )}
                        </div>
                      </div>

                      <div>
                        {_data.rateList &&
                          _data.rateList.length > 0 &&
                          localStorage.getItem('isJewellery') === 'true' &&
                          getMetalNRates()}

                        <div
                          style={{
                            display: 'inline-flex',
                            justifycontent: 'space-between',
                            width: '100%'
                          }}
                        >
                          {_data.delivery_challan_invoice_number &&
                          data.shipToCustomerName ? (
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              <b>{data.billTitle}</b>
                              {<br />}
                              <b>{data.shipToCustomerName}</b>
                              {<br />}
                              {data.shipToCustomerPhoneNo ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Ph. no: {data.shipToCustomerPhoneNo}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.shipToCustomerAddress ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.shipToCustomerAddress}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.shipToCustomerGSTNo ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  GSTIN: {data.shipToCustomerGSTNo}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}

                              {data.shipToCustomerState ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.shipToCustomerState}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                            </p>
                          ) : (
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              <b>{data.billTitle}</b>
                              {<br />}
                              <b>{data.tname}</b>
                              {<br />}
                              {data.tphone ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Ph No: {data.tphone}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.tadd ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.tadd}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.tgstn ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.tgstn}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {_data.aadharNumber ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Aaadhar No: {_data.aadharNumber}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.tstate ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.tstate}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                            </p>
                          )}

                          {data.isSale && _data.shipToCustomerName && (
                            <p
                              style={{
                                textAlign: 'right',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              {/* {<br />} */}
                              <b>
                                {TxnSettings?.enableBuyerOtherThanConsignee
                                  ? 'Buyer (Other Consignee)'
                                  : 'Ship To'}
                              </b>
                              {<br />}
                              {data.shipToCustomerName
                                ? data.shipToCustomerName
                                : 'N/A'}
                              {<br />}
                              {data.shipToCustomerPhoneNo ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Ph No: {data.shipToCustomerPhoneNo}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.shipToCustomerAddress ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.shipToCustomerAddress}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.shipToCustomerGSTNo ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  GSTIN: {data.shipToCustomerGSTNo}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.shipToCustomerState ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.shipToCustomerState}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                            </p>
                          )}
                        </div>
                      </div>

                      <div>
                        {isTemple && (
                          <div
                            dangerouslySetInnerHTML={{
                              __html: data.astrologyDetails + '<br />'
                            }}
                          ></div>
                        )}
                      </div>

                      <div>
                        {isTemple && (
                          <div
                            dangerouslySetInnerHTML={{
                              __html: data.additionalTempleDetails + '<br />'
                            }}
                          ></div>
                        )}
                      </div>
                    </div>

                    <div>
                      {getHeaderRow()}
                      <div style={{ minHeight: minRowHeight }}>
                        {_data.item_list && _data.item_list.length > 0
                          ? getInvoiceRows()
                          : ''}
                      </div>
                      {!isPackagePreivew ? (
                        <div>
                          <div
                            style={{
                              breakInside: 'avoid',
                              borderTop: '1px solid',
                              borderBottom: '1px solid',
                              display: 'flex',
                              flexDirection: 'row',
                              fontWeight: 600
                            }}
                          >
                            <p
                              style={{ textAlign: 'center', width: '10%' }}
                            ></p>
                            <p style={{ width: '30%' }}>Total</p>

                            {/*******  HSN ********/}
                            {TxnEnableFieldsMap.get('display_hsn') && (
                              <p
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></p>
                            )}

                            {/********* Serial/IMEI No. *********/}
                            {TxnSettings &&
                              TxnEnableFieldsMap.get(
                                'display_product_serial_imei'
                              ) && (
                                <p
                                  style={{ width: '15%', textAlign: 'right' }}
                                ></p>
                              )}

                            {/* Batch Number */}
                            {TxnEnableFieldsMap.get(
                              'display_product_batch_number'
                            ) && (
                              <p
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></p>
                            )}

                            {/* Barcode */}
                            {TxnEnableFieldsMap.get(
                              'display_product_barcode'
                            ) && (
                              <p
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></p>
                            )}

                            {/* Brand */}
                            {TxnEnableFieldsMap.get(
                              'display_product_brand'
                            ) && (
                              <p
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></p>
                            )}

                            {/* Model No */}
                            {TxnEnableFieldsMap.get(
                              'display_product_model_no'
                            ) && (
                              <p
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></p>
                            )}

                            {/* Manufacturing Date */}
                            {TxnEnableFieldsMap.get(
                              'display_product_manufacturing_date'
                            ) && (
                              <p
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></p>
                            )}

                            {/* Expiry Date */}
                            {TxnEnableFieldsMap.get(
                              'display_product_expiry_date'
                            ) && (
                              <p
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_quantity'
                            ) && (
                              <p style={{ width: '15%', textAlign: 'right' }}>
                                {totalqty}
                              </p>
                            )}

                            {/* Total Free Quantity */}
                            {TxnEnableFieldsMap.get(
                              'display_product_free_quantity'
                            ) && (
                              <p style={{ width: '15%', textAlign: 'right' }}>
                                {totalfreeqty}
                              </p>
                            )}

                            {/* Unit */}
                            {TxnEnableFieldsMap.get('display_product_unit') && (
                              <p
                                style={{ width: '15%', textAlign: 'right' }}
                              ></p>
                            )}

                            {TxnEnableFieldsMap.get('display_product_mrp') && (
                              <p
                                style={{ width: '15%', textAlign: 'right' }}
                              ></p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_price'
                            ) && (
                              <p
                                style={{
                                  width: '15%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></p>
                            )}

                            {_data.exportConversionRate > 0 &&
                              TxnEnableFieldsMap.get(
                                'display_product_price_other_currency'
                              ) && (
                                <p
                                  style={{
                                    width: '15%',
                                    textAlign: 'right',
                                    paddingRight: '3px'
                                  }}
                                ></p>
                              )}

                            {TxnEnableFieldsMap.get(
                              'display_product_price_per_gram'
                            ) && (
                              <p
                                style={{
                                  width: '30%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_gross_weight'
                            ) && (
                              <p style={{ width: '15%', textAlign: 'right' }}>
                                {parseFloat(totalGrossWt).toFixed(3)}
                              </p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_stone_weight'
                            ) && (
                              <p style={{ width: '15%', textAlign: 'right' }}>
                                {parseFloat(totalStoneWt).toFixed(3)}
                              </p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_net_weight'
                            ) && (
                              <p style={{ width: '15%', textAlign: 'right' }}>
                                {parseFloat(totalNetWt).toFixed(3)}
                              </p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_wastage'
                            ) && (
                              <p
                                style={{ width: '15%', textAlign: 'right' }}
                              ></p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_making_charge'
                            ) && (
                              <p
                                style={{ width: '15%', textAlign: 'right' }}
                              ></p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_making_charge_per_gram'
                            ) && (
                              <p
                                style={{ width: '15%', textAlign: 'right' }}
                              ></p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_stone_charge'
                            ) && (
                              <p
                                style={{ width: '15%', textAlign: 'right' }}
                              ></p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_purity'
                            ) && (
                              <p
                                style={{ width: '15%', textAlign: 'right' }}
                              ></p>
                            )}

                            {/* Copper */}
                            {TxnEnableFieldsMap.get(
                              'display_product_copper'
                            ) && (
                              <p
                                style={{ width: '15%', textAlign: 'right' }}
                              ></p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_discount'
                            ) && (
                              <p style={{ width: '15%', textAlign: 'right' }}>
                                {data.exportConversionRate > 0 ? (
                                  <span>
                                    {getFloatWithTwoDecimal(
                                      data.subTotalDisc /
                                        data.exportConversionRate
                                    )}
                                  </span>
                                ) : (
                                  <span>
                                    â‚¹{' '}
                                    {getFloatWithTwoDecimal(data.subTotalDisc)}
                                  </span>
                                )}
                              </p>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_gst_percentage'
                            ) && (
                              <p
                                style={{ width: '15%', textAlign: 'right' }}
                              ></p>
                            )}

                            {TxnEnableFieldsMap.get('display_product_gst') && (
                              <p style={{ width: '15%', textAlign: 'right' }}>
                                {getFloatWithTwoDecimal(totaltax_gst)}
                              </p>
                            )}

                            {data.isSale ? (
                              <>
                                {TxnEnableFieldsMap.get(
                                  'display_product_total_amount'
                                ) && (
                                  <p
                                    style={{
                                      width: '25%',
                                      textAlign: 'right',
                                      paddingRight: '3px'
                                    }}
                                  >
                                    {(
                                      getFloatWithTwoDecimal(
                                        data.totalTaxableAmount
                                      ) / (_data.exportConversionRate || 1)
                                    ).toFixed(2)}
                                  </p>
                                )}
                              </>
                            ) : (
                              <p
                                style={{
                                  width: '25%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              >
                                {getFloatWithTwoDecimal(
                                  data.totalTaxableAmount
                                )}
                              </p>
                            )}

                            {_data.exportConversionRate > 0 &&
                              TxnEnableFieldsMap.get(
                                'display_product_total_amount_other'
                              ) &&
                              data.amountOtherCurrency && (
                                <div
                                  style={{
                                    paddingRight: '3px',
                                    width: '25%',
                                    textAlign: 'right'
                                  }}
                                >
                                  {data.amountOtherCurrency?.toFixed(2)}
                                </div>
                              )}
                          </div>

                          <div
                            style={{
                              breakInside: 'avoid',
                              display: 'flex',
                              flexDirection: 'row',
                              width: '100%'
                            }}
                          >
                            <div style={{ width: '60%', textAlign: 'left' }}>
                              <div>
                                <p
                                  style={{
                                    fontWeight: 600,
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  INVOICE AMOUNT IN WORDS
                                </p>
                                <p
                                  style={{
                                    textTransform: 'capitalize',
                                    backgroundColor: '#f5f2f2',
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.strTotal}
                                </p>
                              </div>
                            </div>
                            <div style={{ width: '40%' }}>
                              <div
                                style={{
                                  textAlign: 'right',
                                  display: 'flex',
                                  flexDirection: 'row'
                                }}
                              >
                                <p>Sub Total</p>
                                {data.exportConversionRate ? (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    {data.exportCurrency}{' '}
                                    {(
                                      getFloatWithTwoDecimal(
                                        data.totalTaxableAmount +
                                          data.subTotalDisc
                                      ) / data.exportConversionRate
                                    )?.toFixed(2)}
                                    {/* {getFloatWithTwoDecimal(data.subTotal)} */}
                                  </p>
                                ) : (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    â‚¹{' '}
                                    {/* {getFloatWithTwoDecimal(
                                      data.totalTaxableAmount +
                                        data.subTotalDisc
                                    )} */}
                                    {getFloatWithTwoDecimal(data.subTotal)}
                                  </p>
                                )}
                              </div>
                            </div>
                          </div>

                          <div
                            style={{
                              breakInside: 'avoid',
                              display: 'flex',
                              flexDirection: 'row',
                              width: '100%'
                            }}
                          >
                            <div style={{ width: '60%', textAlign: 'left' }}>
                              {!_data.date && settings.boolDesc ? (
                                <div
                                  style={{
                                    breakInside: 'avoid',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  <p
                                    style={{
                                      fontWeight: 600,
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    Description
                                  </p>
                                  <p
                                    style={{
                                      backgroundColor: '#f5f2f2',
                                      marginTop: '0px',
                                      paddingTop: '0px',
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    {settings.strDesc}
                                  </p>
                                </div>
                              ) : (
                                ''
                              )}
                              {TxnEnableFieldsMap.get('display_bill_notes') ||
                              TxnEnableFieldsMap.get('display_total_weight') ? (
                                <div>
                                  <p
                                    style={{
                                      fontWeight: 600,
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    Notes
                                  </p>
                                  {data.notes && (
                                    <p
                                      style={{
                                        backgroundColor: '#f5f2f2',
                                        marginTop: '0px',
                                        paddingTop: '0px',
                                        paddingBottom: '0px',
                                        marginBottom: '0px'
                                      }}
                                    >
                                      {data.notes}
                                    </p>
                                  )}
                                  {TxnEnableFieldsMap.get(
                                    'display_total_weight'
                                  ) && (
                                    <>
                                      {_data.weightIn && _data.weightIn > 0 ? (
                                        <div
                                          style={{
                                            backgroundColor: '#f5f2f2',
                                            textAlign: 'right',
                                            display: 'flex',
                                            flexDirection: 'row',
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          <p
                                            style={{
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            Weight In
                                          </p>
                                          <p
                                            style={{
                                              flex: 1,
                                              wordBreak: 'keep-all',
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            {getFloatWithTwoDecimal(
                                              _data.weightIn
                                            )}
                                            g
                                          </p>
                                        </div>
                                      ) : null}
                                      {_data.weightOut &&
                                      _data.weightOut > 0 ? (
                                        <div
                                          style={{
                                            backgroundColor: '#f5f2f2',
                                            textAlign: 'right',
                                            display: 'flex',
                                            flexDirection: 'row',
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          <p
                                            style={{
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            Weight Out
                                          </p>
                                          <p
                                            style={{
                                              flex: 1,
                                              wordBreak: 'keep-all',
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            {getFloatWithTwoDecimal(
                                              _data.weightOut
                                            )}
                                            g
                                          </p>
                                        </div>
                                      ) : null}
                                      {_data.wastage && _data.wastage > 0 ? (
                                        <div
                                          style={{
                                            backgroundColor: '#f5f2f2',
                                            textAlign: 'right',
                                            display: 'flex',
                                            flexDirection: 'row',
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          <p
                                            style={{
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            Wastage
                                          </p>
                                          <p
                                            style={{
                                              flex: 1,
                                              wordBreak: 'keep-all',
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            {getFloatWithTwoDecimal(
                                              _data.wastage
                                            )}
                                            g
                                          </p>
                                        </div>
                                      ) : null}
                                    </>
                                  )}
                                  {this.getSeparator(1, classes.separator)}
                                </div>
                              ) : (
                                ''
                              )}
                              {data.terms !== '' ? (
                                <Fragment>
                                  {this.getSeparator(1, classes.separator)}
                                  <div style={{ whiteSpace: 'break-spaces' }}>
                                    <p
                                      style={{
                                        fontWeight: 600,
                                        paddingBottom: '0px',
                                        marginBottom: '0px'
                                      }}
                                    >
                                      TERMS AND CONDITIONS
                                    </p>
                                    {data.terms}
                                  </div>
                                </Fragment>
                              ) : (
                                ''
                              )}
                            </div>
                            <div style={{ textAlign: 'center', width: '40%' }}>
                              {_data.exportConversionRate === 0 &&
                              TxnEnableFieldsMap.get(
                                'display_bill_packing_charge'
                              ) &&
                              _data.packing_charge ? (
                                <div
                                  style={{
                                    textAlign: 'right',
                                    display: 'flex',
                                    flexDirection: 'row',
                                    flexWrap: 'wrap'
                                  }}
                                >
                                  <p>Package Charge</p>
                                  <p
                                    style={{
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    â‚¹{' '}
                                    {getFloatWithTwoDecimal(
                                      _data.packing_charge
                                        ? _data.packing_charge
                                        : 0
                                    )}
                                  </p>
                                </div>
                              ) : (
                                ' '
                              )}

                              {_data.exportConversionRate > 0 &&
                              TxnEnableFieldsMap.get(
                                'display_packing_other_currency'
                              ) &&
                              _data.packingChargeOtherCurrency ? (
                                <div
                                  style={{
                                    textAlign: 'right',
                                    display: 'flex',
                                    flexDirection: 'row',
                                    flexWrap: 'wrap'
                                  }}
                                >
                                  {_data.packingChargeOtherCurrency && (
                                    <div
                                      style={{
                                        minWidth: '100%',
                                        display: 'flex'
                                      }}
                                    >
                                      <p>Package Charge</p>
                                      <p
                                        style={{
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                      >
                                        {data.exportCurrency}{' '}
                                        {getFloatWithTwoDecimal(
                                          _data.packingChargeOtherCurrency
                                            ? _data.packingChargeOtherCurrency
                                            : 0
                                        )}
                                      </p>
                                    </div>
                                  )}
                                </div>
                              ) : (
                                ' '
                              )}

                              {_data.exportConversionRate === 0 &&
                                TxnEnableFieldsMap.get(
                                  'display_bill_shipping_charge'
                                ) &&
                                _data.shipping_charge !== 0 &&
                                !_data.backToBackPurchaseNumber && (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row',
                                      flexWrap: 'wrap'
                                    }}
                                  >
                                    <p>Shipping Charge</p>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all'
                                      }}
                                    >
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.shipping_charge
                                          ? _data.shipping_charge
                                          : 0
                                      )}
                                    </p>
                                  </div>
                                )}

                              {_data.exportConversionRate > 0 &&
                                TxnEnableFieldsMap.get(
                                  'display_shipping_other_currency'
                                ) &&
                                _data.shippingChargeOtherCurrency !== 0 &&
                                !_data.backToBackPurchaseNumber && (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row',
                                      flexWrap: 'wrap'
                                    }}
                                  >
                                    {_data.shippingChargeOtherCurrency && (
                                      <div
                                        style={{
                                          display: 'flex',
                                          flexDirection: 'row',
                                          minWidth: '100%'
                                        }}
                                      >
                                        <p>Shipping Charge</p>
                                        <p
                                          style={{
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                        >
                                          {data.exportCurrency}{' '}
                                          {getFloatWithTwoDecimal(
                                            _data.shippingChargeOtherCurrency
                                              ? _data.shippingChargeOtherCurrency
                                              : 0
                                          )}
                                        </p>
                                      </div>
                                    )}
                                  </div>
                                )}

                              {_data.freightCharge !== 0 &&
                                _data.backToBackPurchaseNumber && (
                                  <>
                                    {TxnEnableFieldsMap.get(
                                      'display_bill_shipping_charge'
                                    ) && (
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p>Freight Charge</p>
                                        <p
                                          style={{
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                        >
                                          â‚¹{' '}
                                          {getFloatWithTwoDecimal(
                                            _data.freightCharge
                                              ? _data.freightCharge
                                              : 0
                                          )}
                                        </p>
                                      </div>
                                    )}
                                  </>
                                )}

                              {_data.exportConversionRate === 0 &&
                                TxnEnableFieldsMap.get(
                                  'display_bill_insurance'
                                ) &&
                                _data.insurance &&
                                _data.insurance.amount !== 0 && (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row'
                                    }}
                                  >
                                    <p>Insurance</p>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all'
                                      }}
                                    >
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.insurance.amount
                                          ? _data.insurance.amount
                                          : 0
                                      )}
                                    </p>
                                  </div>
                                )}

                              {_data.exportConversionRate > 0 &&
                                TxnEnableFieldsMap.get(
                                  'display_insurance_other_currency'
                                ) &&
                                _data.insurance &&
                                _data.insurance.amountOtherCurrency !== 0 && (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row'
                                    }}
                                  >
                                    <p>Insurance</p>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all'
                                      }}
                                    >
                                      {data.exportCurrency}{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.insurance.amountOtherCurrency
                                          ? _data.insurance.amountOtherCurrency
                                          : 0
                                      )}
                                    </p>
                                  </div>
                                )}

                              {data.totalDiscount !== 0 && (
                                <>
                                  {((_data.invoice_number &&
                                    TxnEnableFieldsMap.get(
                                      'display_bill_discount'
                                    )) ||
                                    !_data.invoice_number) && (
                                    <div
                                      style={{
                                        textAlign: 'right',
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <p>Total Discount</p>
                                      <p
                                        style={{
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(
                                          data.totalDiscount
                                        )}
                                      </p>
                                    </div>
                                  )}
                                </>
                              )}

                              {settings.boolTaxDetails ? (
                                <div style={{ breakInside: 'avoid' }}>
                                  <p>
                                    {Array.from(gstMap.keys()).map((key) => {
                                      return (
                                        <div
                                          style={{
                                            textAlign: 'right',
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <div
                                            style={{
                                              width: '100%',
                                              textAlign: 'start'
                                            }}
                                          >
                                            {' '}
                                            <p>{key}</p>
                                          </div>
                                          <div style={{ width: '100%' }}>
                                            {' '}
                                            <p
                                              style={{
                                                flex: 1,
                                                wordBreak: 'keep-all',
                                                fontWeight: 600
                                              }}
                                            >
                                              â‚¹{' '}
                                              {getFloatWithTwoDecimal(
                                                gstMap.get(key)
                                              )}
                                            </p>
                                          </div>
                                        </div>
                                      );
                                    })}
                                  </p>
                                </div>
                              ) : (
                                ''
                              )}

                              {/* TCS Amount */}
                              {data.tcsAmount > 0 && (
                                <>
                                  {data.tcsAmount > 0 && (
                                    <div
                                      style={{
                                        textAlign: 'right',
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <p>
                                        TCS@{data.tcsRate}% {data.tcsCode}
                                      </p>
                                      <p
                                        style={{
                                          flex: 1,
                                          wordBreak: 'keep-all',
                                          fontWeight: 600
                                        }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(data.tcsAmount)}
                                      </p>
                                    </div>
                                  )}
                                </>
                              )}

                              {TxnEnableFieldsMap.get('display_product_cess') &&
                                data.totalCess > 0 && (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row'
                                    }}
                                  >
                                    <p>Total Cess</p>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all',
                                        fontWeight: 600
                                      }}
                                    >
                                      â‚¹ {getFloatWithTwoDecimal(data.totalCess)}
                                    </p>
                                  </div>
                                )}
                            </div>
                          </div>

                          <div
                            style={{
                              breakInside: 'avoid',
                              display: 'flex',
                              flexDirection: 'row',
                              width: '100%'
                            }}
                          >
                            <div
                              style={{
                                width: '60%',
                                textAlign: 'left',
                                display: 'flex'
                              }}
                            >
                              {settings.boolBankDetail ? (
                                <div
                                  style={{ width: '60%', textAlign: 'left' }}
                                >
                                  {settings.boolBankDetailsOnCreditSaleOnly &&
                                  data.balanceAmount > 0 ? (
                                    <div>
                                      <p
                                        style={{
                                          fontWeight: 600,
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        BANK DETAILS
                                      </p>
                                      <div
                                        style={{
                                          breakInside: 'avoid',
                                          backgroundColor: '#f5f2f2',
                                          marginTop: '0px',
                                          paddingTop: '0px',
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        <div
                                          style={{
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <div
                                            style={{
                                              width: '40%',
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              A/C Holder's Name
                                            </p>
                                          </div>
                                          <div
                                            style={{
                                              width: '60%',
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              : {settings.bankAccountHolderName}
                                            </p>
                                          </div>
                                        </div>
                                        <div
                                          style={{
                                            display: 'flex',
                                            flexDirection: 'row',
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          <div
                                            style={{
                                              width: '40%',
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              BANK NAME
                                            </p>
                                          </div>
                                          <div
                                            style={{
                                              width: '60%',
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              : {settings.bankName}
                                            </p>
                                          </div>
                                        </div>
                                        <div
                                          style={{
                                            display: 'flex',
                                            flexDirection: 'row',
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          <div
                                            style={{
                                              width: '40%',
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              A/C NO.
                                            </p>
                                          </div>
                                          <div
                                            style={{
                                              width: '60%',
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              : {settings.bankAccountNumber}
                                            </p>
                                          </div>
                                        </div>
                                        <div
                                          style={{
                                            display: 'flex',
                                            flexDirection: 'row',
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          <div
                                            style={{
                                              width: '40%',
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              IFSC Code
                                            </p>
                                          </div>
                                          <div
                                            style={{
                                              width: '60%',
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              : {settings.bankIfscCode}
                                            </p>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  ) : (
                                    <div>
                                      {!settings.boolBankDetailsOnCreditSaleOnly ? (
                                        <div
                                          style={{
                                            breakInside: 'avoid',
                                            backgroundColor: '#f5f2f2',
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          <p
                                            style={{
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            BANK DETAILS
                                          </p>
                                          <div
                                            style={{
                                              display: 'flex',
                                              flexDirection: 'row',
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            <div
                                              style={{
                                                width: '40%'
                                              }}
                                            >
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                A/C Holder's Name
                                              </p>
                                            </div>
                                            <div
                                              style={{
                                                width: '60%'
                                              }}
                                            >
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                :{' '}
                                                {settings.bankAccountHolderName}
                                              </p>
                                            </div>
                                          </div>
                                          <div
                                            style={{
                                              display: 'flex',
                                              flexDirection: 'row',
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            <div
                                              style={{
                                                width: '40%'
                                              }}
                                            >
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                BANK NAME
                                              </p>
                                            </div>
                                            <div
                                              style={{
                                                width: '60%'
                                              }}
                                            >
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                : {settings.bankName}
                                              </p>
                                            </div>
                                          </div>
                                          <div
                                            style={{
                                              display: 'flex',
                                              flexDirection: 'row',
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            <div
                                              style={{
                                                width: '40%'
                                              }}
                                            >
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                A/C NO.
                                              </p>
                                            </div>
                                            <div
                                              style={{
                                                width: '60%'
                                              }}
                                            >
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                : {settings.bankAccountNumber}
                                              </p>
                                            </div>
                                          </div>
                                          <div
                                            style={{
                                              display: 'flex',
                                              flexDirection: 'row',
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            <div
                                              style={{
                                                width: '40%',
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                IFSC Code
                                              </p>
                                            </div>
                                            <div
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                : {settings.bankIfscCode}
                                              </p>
                                            </div>
                                          </div>
                                        </div>
                                      ) : (
                                        ''
                                      )}
                                    </div>
                                  )}
                                </div>
                              ) : (
                                ''
                              )}
                              <div
                                style={{ width: '40%', textAlign: 'center' }}
                              >
                                {settings.boolQrCode ? (
                                  <>
                                    <QRCode
                                      value={
                                        data.qrCodestr ? data.qrCodestr : ''
                                      }
                                      size={75}
                                    />
                                  </>
                                ) : (
                                  ''
                                )}
                              </div>
                            </div>
                            <div style={{ textAlign: 'center', width: '40%' }}>
                              {String(_data.is_roundoff).toLowerCase() ===
                                'true' && (
                                <div
                                  style={{
                                    textAlign: 'right',
                                    display: 'flex',
                                    flexDirection: 'row'
                                  }}
                                >
                                  <p style={{ fontWeight: 600 }}>Round off</p>
                                  <p
                                    style={{
                                      flex: 1,
                                      wordBreak: 'keep-all',
                                      fontWeight: 600
                                    }}
                                  >
                                    {data.exportConversionRate ? (
                                      <span>
                                        {data.exportCurrency}{' '}
                                        {getFloatWithTwoDecimal(
                                          _data.round_amount /
                                            data.exportConversionRate
                                        )}
                                      </span>
                                    ) : (
                                      <span>
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(
                                          _data.round_amount
                                        )}
                                      </span>
                                    )}
                                  </p>
                                </div>
                              )}
                              <div
                                style={{
                                  textAlign: 'right',
                                  display: 'flex',
                                  flexDirection: 'row'
                                }}
                              >
                                <p
                                  style={{ fontSize: '12px', fontWeight: 600 }}
                                >
                                  Total
                                </p>
                                <p
                                  style={{
                                    fontSize: '12px',
                                    fontWeight: 600,
                                    flex: 1,
                                    wordBreak: 'keep-all'
                                  }}
                                >
                                  {data.exportConversionRate ? (
                                    <span>
                                      {data.exportCurrency}{' '}
                                      {getFloatWithTwoDecimal(data.totalAmount)}
                                    </span>
                                  ) : (
                                    <span>
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(data.totalAmount)}
                                    </span>
                                  )}
                                </p>
                              </div>

                              {_data.estimateType === 'open' ||
                              _data.estimateType === 'close' ? null : (
                                <>
                                  {data.receivedAmount > 0 && (
                                    <div
                                      style={{
                                        textAlign: 'right',
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <p>{data.paidReceivedTitle}</p>
                                      <p
                                        style={{
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(
                                          data.receivedAmount
                                        )}
                                      </p>
                                    </div>
                                  )}
                                  {_data.exportConversionRate === 0 &&
                                    data.balanceAmount > 0 && (
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p>Balance</p>
                                        <p
                                          style={{
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                        >
                                          â‚¹{' '}
                                          {getFloatWithTwoDecimal(
                                            data.balanceAmount
                                          )}
                                        </p>
                                      </div>
                                    )}

                                  {settings.boolPaymentMode &&
                                    data.paymentType !== '' && (
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p>Payment Type</p>
                                        <p
                                          style={{
                                            textTransform: 'capitalize',
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                          dangerouslySetInnerHTML={{
                                            __html: data.paymentType
                                          }}
                                        ></p>
                                      </div>
                                    )}

                                  {data.tdsAmount > 0 && (
                                    <div
                                      style={{
                                        textAlign: 'right',
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <p>
                                        TDS@{data.tdsRate}% {data.tdsCode}
                                      </p>
                                      <p
                                        style={{
                                          textTransform: 'capitalize',
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(data.tdsAmount)}
                                      </p>
                                    </div>
                                  )}
                                </>
                              )}

                              {/****** Outstanding Payble / Receivable *****/}
                              {settings.boolPreviousBalance &&
                                outStandingType &&
                                outStandingBalance !== 0 && (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row'
                                    }}
                                  >
                                    <p>Outstanding-{outStandingType} </p>
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        outStandingBalance
                                      )}
                                    </p>
                                  </div>
                                )}
                            </div>
                          </div>

                          <div
                            style={{
                              breakInside: 'avoid',
                              display: 'flex',
                              flexDirection: 'row',
                              width: '100%'
                            }}
                          >
                            <div
                              style={{
                                width: '50%',
                                textAlign: 'center',
                                alignSelf: 'flex-end'
                              }}
                            >
                              {TxnEnableFieldsMap.get(
                                'display_customer_signature'
                              ) && <p>Customer's Signature</p>}
                            </div>
                            <div style={{ textAlign: 'center', width: '50%' }}>
                              {settings.boolSignature &&
                              settings.strSignature ? (
                                <>
                                  <Box
                                    component="img"
                                    style={
                                      settings.signatureSize === 'Small'
                                        ? {
                                            width: signatureSmall,
                                            height: signatureSmall
                                          }
                                        : settings.signatureSize === 'Medium'
                                        ? {
                                            width: signatureMedium,
                                            height: signatureMedium
                                          }
                                        : {
                                            width: signatureLarge,
                                            height: signatureLarge
                                          }
                                    }
                                    src={settings.strSignature}
                                  />
                                  <p>Authorised Signature</p>
                                </>
                              ) : (
                                <>
                                  {this.getSeparator(10, classes.separator)}
                                  <p>Authorised signature</p>
                                </>
                              )}
                            </div>
                          </div>

                          {/******* e-Invoicing Details ********/}
                          {data.irnNo && data.irnNo !== '' && (
                            <div
                              style={{
                                display: 'flex',
                                flexDirection: 'row',
                                borderTop: '1px solid',
                                breakInside: 'avoid',
                                marginTop: '5px',
                                marginBottom: '0px'
                              }}
                            >
                              <div
                                style={{
                                  width: '25%',
                                  textAlign: 'center',
                                  marginTop: '5px'
                                }}
                              >
                                {data.eInvoiceQrCodeStr ? (
                                  <>
                                    <QRCode
                                      value={
                                        data.eInvoiceQrCodeStr
                                          ? data.eInvoiceQrCodeStr
                                          : ''
                                      }
                                      size={50}
                                    />
                                  </>
                                ) : (
                                  ''
                                )}
                              </div>
                              <div style={{ width: '75%' }}>
                                <div
                                  style={{
                                    display: 'flex',
                                    flexDirection: 'column',
                                    width: '100%'
                                  }}
                                >
                                  <div
                                    style={{
                                      display: 'flex',
                                      flexDirection: 'row',
                                      paddingLeft: '5px',
                                      width: '100%'
                                    }}
                                  >
                                    <b>IRN :</b>
                                    <b>{data.irnNo}</b>
                                  </div>
                                  <div
                                    style={{
                                      display: 'flex',
                                      flexDirection: 'row',
                                      paddingLeft: '5px',
                                      width: '100%'
                                    }}
                                  >
                                    <p>Ack No. :</p>
                                    <p
                                      style={{
                                        marginTop: '0px',
                                        paddingTop: '0px',
                                        paddingBottom: '0px',
                                        marginBottom: '0px'
                                      }}
                                    >
                                      {data.ackNo && data.ackNo}
                                    </p>
                                    <p>Ack Date :</p>
                                    <p>{data.ackDt && data.ackDt}</p>
                                  </div>
                                </div>
                              </div>
                            </div>
                          )}

                          <div style={{ textAlign: 'center' }}>
                            {settings.boolJurisdiction &&
                              settings.jurisdiction !== '' && (
                                <p>{settings.jurisdiction}</p>
                              )}
                          </div>
                        </div>
                      ) : (
                        <div
                          style={{
                            breakInside: 'avoid',
                            display: 'flex',
                            flexDirection: 'row',
                            width: '100%'
                          }}
                        >
                          <div
                            style={{
                              width: '50%',
                              textAlign: 'center',
                              alignSelf: 'flex-end'
                            }}
                          >
                            {TxnEnableFieldsMap.get(
                              'display_customer_signature'
                            ) && <p>Customer's Signature</p>}
                          </div>
                          <div style={{ textAlign: 'center', width: '50%' }}>
                            {settings.boolSignature && settings.strSignature ? (
                              <>
                                <Box
                                  component="img"
                                  style={
                                    settings.signatureSize === 'Small'
                                      ? {
                                          width: signatureSmall,
                                          height: signatureSmall
                                        }
                                      : settings.signatureSize === 'Medium'
                                      ? {
                                          width: signatureMedium,
                                          height: signatureMedium
                                        }
                                      : {
                                          width: signatureLarge,
                                          height: signatureLarge
                                        }
                                  }
                                  src={settings.strSignature}
                                />
                                <p>Authorised Signature</p>
                              </>
                            ) : (
                              <>
                                {this.getSeparator(10, classes.separator)}
                                <p>Authorised signature</p>
                              </>
                            )}
                          </div>
                        </div>
                      )}
                    </div>
                  </div>
                ))
              : ''}
          </div>
        ) : settings.theme === 'Theme 2' ? (
          <div
            style={
              settings.textSize === 'Small'
                ? { fontSize: txtSmall }
                : settings.textSize === 'Medium'
                ? { fontSize: txtMedium }
                : { fontSize: txtLarge }
            }
          >
            {this.props && this.props.data
              ? format.map((item, index) => (
                  <div
                    style={{
                      paddingTop: '0px',
                      pageBreakAfter: 'always',
                      paddingBottom: '0px',
                      width: '100%',
                      padding: '5px',
                      fontFamily: 'Roboto',
                      wordBreak: 'break-word'
                    }}
                  >
                    <div
                      style={{
                        border: '1px solid',
                        width: 'auto',
                        minHeight: '60px'
                      }}
                    >
                      {settings.boolBisHallmark && (
                        <div style={{ float: 'right' }}>
                          <Box
                            component="img"
                            style={{
                              ...(settings.logoSize === 'Small'
                                ? {
                                    width: bisLogoSmall,
                                    height: bisLogoHeightS
                                  }
                                : settings.logoSize === 'Medium'
                                ? {
                                    width: bisLogoMedium,
                                    height: bisLogoHeightM
                                  }
                                : {
                                    width: bisLogoLarge,
                                    height: bisLogoHeightL
                                  }),
                              padding: '5px'
                            }}
                            src={bisImage}
                          />
                        </div>
                      )}
                      <h1 style={{ marginTop: '10px' }}>
                        <center>{data.mainTitle}</center>
                      </h1>
                      {item.name != '' && (
                        <p
                          style={{
                            float: 'right',
                            marginRight: '2px',
                            padding: '5px',
                            border: '1px solid #8080807a',
                            color: '#808080bf',
                            fontWeight: 'bold',
                            fontSize: '11px',
                            height: 'auto',
                            marginTop: '-29px'
                          }}
                        >
                          {item.name}
                        </p>
                      )}
                    </div>
                    <div
                      style={{
                        display: 'flex',
                        flexDirection: 'row',
                        border: '1px solid',
                        borderTop: '0',
                        width: 'auto',
                        clear: 'both'
                      }}
                    >
                      <div style={{ width: '50%', borderRight: '1px solid' }}>
                        <div
                          style={{
                            display: 'flex',
                            flexDirection: 'row',
                            paddingLeft: '12px'
                          }}
                        >
                          {settings.boolCompanyLogo && (
                            <Grid
                              style={{
                                width: '25%',
                                paddingRight: '5px',
                                alignSelf: 'center'
                              }}
                            >
                              <Box
                                component="img"
                                style={
                                  settings.logoSize === 'Small'
                                    ? { width: logoSmall, height: logoHeightS }
                                    : settings.logoSize === 'Medium'
                                    ? { width: logoMedium, height: logoHeightM }
                                    : { width: logoLarge, height: logoHeightL }
                                }
                                src={settings.fileCompanyLogo}
                              />
                            </Grid>
                          )}
                          <Grid>
                            <p>
                              {settings.boolCompanyName && (
                                <Fragment>
                                  <h1>
                                    <strong
                                      style={{
                                        color: settings.companyNameColor
                                      }}
                                    >
                                      {settings.strCompanyName}
                                    </strong>
                                  </h1>
                                </Fragment>
                              )}
                              {settings.boolCompanyAdditionalDesc && (
                                <Fragment>
                                  {settings.companyAdditionalDesc}
                                  <br />
                                </Fragment>
                              )}
                              {settings.boolGSTIN && (
                                <Fragment>GSTIN: {settings.strGSTIN}</Fragment>
                              )}
                              {settings.boolPAN && (
                                <Fragment>
                                  <br />
                                  PAN: {settings.strPAN}
                                </Fragment>
                              )}
                              {settings.boolAddress && (
                                <Fragment>
                                  <br />
                                  {settings.strAddress}
                                </Fragment>
                              )}
                              {settings.boolEmail && (
                                <Fragment>
                                  <br />
                                  Email: {settings.strEmail}
                                </Fragment>
                              )}
                              {settings.boolPhone && (
                                <Fragment>
                                  <br />
                                  Ph. no: {settings.strPhone}
                                </Fragment>
                              )}
                              {settings.boolWebsite && (
                                <Fragment>
                                  <br />
                                  Website: {settings.strWebsite}
                                </Fragment>
                              )}
                            </p>
                          </Grid>
                        </div>
                        <div style={{ borderTop: '1px solid' }}>
                          {_data.delivery_challan_invoice_number &&
                          data.shipToCustomerName ? (
                            <p
                              style={{
                                textAlign: 'left',
                                paddingLeft: '12px',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              <b>{data.billTitle}</b>
                              {<br />}
                              <b>{data.shipToCustomerName}</b>
                              {data.shipToCustomerAddress ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.shipToCustomerAddress}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.shipToCustomerPhoneNo ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Ph. no: {data.shipToCustomerPhoneNo}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.shipToCustomerGSTNo ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  GSTIN: {data.shipToCustomerGSTNo}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.shipToCustomerState ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.shipToCustomerState}
                                </p>
                              ) : (
                                ''
                              )}
                            </p>
                          ) : (
                            <p
                              style={{
                                textAlign: 'left',
                                paddingLeft: '12px',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              <b>{data.billTitle}</b>
                              {<br />}
                              <b>{data.tname}</b>
                              {<br />}
                              {data.tadd ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.tadd}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.tphone ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Ph No: {data.tphone}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.tgstn ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  <b>{data.tgstn}</b>
                                </p>
                              ) : (
                                ''
                              )}
                              {_data.aadharNumber ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Aaadhar No: {_data.aadharNumber}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.tstate ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.tstate}
                                </p>
                              ) : (
                                ''
                              )}
                            </p>
                          )}
                        </div>
                      </div>
                      <div
                        style={{
                          width: '50%',
                          display: 'flex',
                          flexDirection: 'column'
                        }}
                      >
                        <div
                          style={{
                            width: '100%',
                            display: 'flex',
                            flexDirection: 'row',
                            borderBottom: '1px solid'
                          }}
                        >
                          <div
                            style={{
                              width: '50%',
                              borderRight: '1px solid',
                              paddingLeft: '3px'
                            }}
                          >
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all',
                                fontWeight: 600
                              }}
                            >
                              <b>
                                {data.invoiceNoTitle}
                                :
                                <br />
                                {data.invoiceNumber}
                              </b>
                            </p>
                          </div>
                          <div style={{ width: '50%', paddingLeft: '3px' }}>
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              {_data.purchase_order_invoice_number ? (
                                <b>PO Date: </b>
                              ) : data.salesReturnDate ? (
                                <b>Invoice Date:</b>
                              ) : (
                                <b>Date: </b>
                              )}
                              <br />
                              {dateFormatter(data.date) + ' '}{' '}
                              {TxnEnableFieldsMap.get(
                                'display_bill_transaction_time'
                              ) && getTimefromTimeStamp(data.updatedAt)}
                            </p>
                          </div>
                        </div>

                        {taxSettingsData?.exporterCodeNo && (
                          <div
                            style={{
                              width: '100%',
                              display: 'flex',
                              flexDirection: 'row',
                              borderBottom: '1px solid'
                            }}
                          >
                            <div
                              style={{
                                width: '50%',
                                borderRight: '1px solid',
                                paddingLeft: '3px'
                              }}
                            >
                              <p
                                style={{
                                  textAlign: 'left',
                                  flex: 1,
                                  wordBreak: 'keep-all',
                                  fontWeight: 600
                                }}
                              >
                                <b> EXP Ref: </b>{' '}
                                {taxSettingsData?.exporterCodeNo}
                              </p>
                            </div>
                            <div style={{ width: '50%', paddingLeft: '3px' }}>
                              <p
                                style={{
                                  textAlign: 'left',
                                  flex: 1,
                                  wordBreak: 'keep-all'
                                }}
                              >
                                <b> EXP Reg Date: </b>{' '}
                                {taxSettingsData?.exporterRegistrationDate}
                              </p>
                            </div>
                          </div>
                        )}

                        <div
                          style={{
                            width: '100%',
                            display: 'flex',
                            flexDirection: 'row',
                            borderBottom: '1px solid'
                          }}
                        >
                          <div
                            style={{
                              width: '50%',
                              borderRight: '1px solid',
                              paddingLeft: '3px'
                            }}
                          >
                            {data.salesReturnDate && (
                              <>
                                <p
                                  style={{
                                    textAlign: 'left',
                                    flex: 1,
                                    wordBreak: 'keep-all'
                                  }}
                                >
                                  <b>Return Date : </b>
                                  <br />
                                  {dateFormatter(data.salesReturnDate)}
                                </p>
                                <p
                                  style={{
                                    textAlign: 'left',
                                    flex: 1,
                                    wordBreak: 'keep-all'
                                  }}
                                >
                                  <b>Invoice No. :</b>
                                  {' ' + data.salesInvoiceNumber}
                                </p>
                              </>
                            )}

                            <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                              <b>Place Of Supply:</b>
                              <br />
                              {data.placeOfSupplyName ? (
                                data.placeOfSupplyName
                              ) : (
                                <br />
                              )}
                            </p>
                            {_data.rateList &&
                              _data.rateList.length > 0 &&
                              localStorage.getItem('isJewellery') ===
                                'true' && (
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  <b>Due Date:</b>
                                  <br />
                                  {data.duedate ? (
                                    dateFormatter(data.duedate)
                                  ) : (
                                    <br />
                                  )}
                                </p>
                              )}
                          </div>
                          <div style={{ width: '50%', paddingLeft: '3px' }}>
                            {_data.rateList &&
                            _data.rateList.length > 0 &&
                            localStorage.getItem('isJewellery') === 'true' ? (
                              getMetalNRates()
                            ) : (
                              <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                <b>Due Date:</b>
                                <br />
                                {data.duedate ? (
                                  dateFormatter(data.duedate)
                                ) : (
                                  <br />
                                )}
                              </p>
                            )}
                          </div>
                        </div>

                        {
                          <div
                            style={{
                              width: '100%',
                              display: 'flex',
                              flexDirection: 'row',
                              borderBottom: '1px solid'
                            }}
                          >
                            {true && data.exportCountryOrigin !== '' && (
                              <div
                                style={{
                                  width: '50%',
                                  borderRight: '1px solid',
                                  paddingLeft: '3px'
                                }}
                              >
                                <p
                                  style={{
                                    textAlign: 'left',
                                    flex: 1,
                                    wordBreak: 'keep-all'
                                  }}
                                >
                                  <b>Country of origin{' : '}</b>
                                  {data.exportCountryOrigin}
                                </p>
                              </div>
                            )}

                            {true && data.exportCountry !== '' && (
                              <div style={{ width: '50%', paddingLeft: '3px' }}>
                                <p
                                  style={{
                                    textAlign: 'left',
                                    flex: 1,
                                    wordBreak: 'keep-all'
                                  }}
                                >
                                  <b>Country of Final{' : '}</b>
                                  {data.exportCountry}
                                </p>
                              </div>
                            )}
                          </div>
                        }

                        <div
                          style={{
                            width: '100%',
                            display: 'flex',
                            flexDirection: 'row'
                          }}
                        >
                          <div
                            style={{
                              width: '50%',
                              borderRight: '1px solid',
                              paddingLeft: '3px'
                            }}
                          >
                            {data.isSale && data.shipToCustomerName && (
                              <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                <b>
                                  {TxnSettings?.enableBuyerOtherThanConsignee
                                    ? 'Buyer (Other Consignee)'
                                    : 'Ship To'}
                                </b>
                                <br />
                                {data.shipToCustomerName
                                  ? data.shipToCustomerName
                                  : 'N/A'}
                                {data.shipToCustomerAddress && (
                                  <p>{data.shipToCustomerAddress}</p>
                                )}
                                {data.shipToCustomerPhoneNo && (
                                  <p>Ph No: {data.shipToCustomerPhoneNo}</p>
                                )}
                                {data.shipToCustomerGSTNo && (
                                  <p>
                                    <b> GSTIN: {data.shipToCustomerGSTNo}</b>
                                  </p>
                                )}

                                {data.shipToCustomerState && (
                                  <p>{data.shipToCustomerState}</p>
                                )}

                                {isTemple && (
                                  <div
                                    dangerouslySetInnerHTML={{
                                      __html: data.astrologyDetails + '<br />'
                                    }}
                                  ></div>
                                )}
                                {isTemple && (
                                  <div
                                    dangerouslySetInnerHTML={{
                                      __html:
                                        data.additionalTempleDetails + '<br />'
                                    }}
                                  ></div>
                                )}
                              </p>
                            )}
                          </div>
                          <div
                            style={{
                              width: '50%',
                              paddingLeft: '3px',
                              minHeight: _data.delivery_challan_invoice_number
                                ? '175px'
                                : '150px'
                            }}
                          >
                            {data.order_type === 'kot' ? (
                              <>
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  <b>Table No.: </b>
                                  {data.tableNumber && data.tableNumber}
                                </p>
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  <b>Chairs : </b>
                                  {data.chairsUsedInString &&
                                    data.chairsUsedInString}
                                </p>
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  <b>Waiter Name : </b>
                                  {data.waiter_name && data.waiter_name}
                                </p>
                              </>
                            ) : (
                              <>
                                {TxnSettings &&
                                  TxnEnableFieldsMap.get(
                                    'display_job_work_employee'
                                  ) && (
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      <b>Job By{' : '}</b>
                                      {_data.jobAssignedEmployeeName}
                                    </p>
                                  )}
                                {TxnSettings &&
                                  TxnEnableFieldsMap.get(
                                    'display_salesman'
                                  ) && (
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      <b>Sales By{' : '}</b>
                                      {_data.salesEmployeeName}
                                    </p>
                                  )}
                                {_data.backToBackPurchaseNumber &&
                                  _data.supervisorName !== '' && (
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      <b>Supervisor{' : '}</b>
                                      {_data.supervisorName}
                                    </p>
                                  )}
                                {_data.backToBackPurchaseNumber &&
                                  _data.materialsInChargeName !== '' && (
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      <b>Materials In Charge{' : '}</b>
                                      {_data.materialsInChargeName}
                                    </p>
                                  )}
                                {data.eWayBillNo && data.eWayBillNo !== '' ? (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    <b>E-Way Bill No{': '}</b>
                                    {data.eWayBillNo !== '' && data.eWayBillNo}
                                  </p>
                                ) : (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    <b> </b>
                                    {}
                                  </p>
                                )}
                                {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) ? (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    <b>Transport Mode: </b>

                                    {TxnSettings &&
                                      TxnEnableFieldsMap.get(
                                        'display_transportation'
                                      ) &&
                                      data.transportMode && (
                                        <>
                                          <br />
                                          {data.transportMode}
                                        </>
                                      )}
                                  </p>
                                ) : (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    <b> </b>
                                    <>
                                      <br />
                                      {}
                                    </>
                                  </p>
                                )}

                                {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) ? (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    <b>Port of loading: </b>

                                    {TxnSettings &&
                                      TxnEnableFieldsMap.get(
                                        'display_transportation'
                                      ) &&
                                      data.portOfLoading && (
                                        <>
                                          <br />
                                          {data.portOfLoading}
                                        </>
                                      )}
                                  </p>
                                ) : (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    <b> </b>
                                    <>
                                      <br />
                                      {}
                                    </>
                                  </p>
                                )}

                                {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) ? (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    <b>Port of Discharge: </b>

                                    {TxnSettings &&
                                      TxnEnableFieldsMap.get(
                                        'display_transportation'
                                      ) &&
                                      data.portOfDischarge && (
                                        <>
                                          <br />
                                          {data.portOfDischarge}
                                        </>
                                      )}
                                  </p>
                                ) : (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    <b> </b>
                                    <>
                                      <br />
                                      {}
                                    </>
                                  </p>
                                )}

                                {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) ? (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    <b>Vessel Flight No: </b>

                                    {TxnSettings &&
                                      TxnEnableFieldsMap.get(
                                        'display_transportation'
                                      ) &&
                                      data.vesselFlightNo && (
                                        <>{data.vesselFlightNo}</>
                                      )}
                                  </p>
                                ) : (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    <b> </b>
                                    <>{}</>
                                  </p>
                                )}

                                {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) ? (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    <b>Transporter Id: </b>

                                    {TxnSettings &&
                                      TxnEnableFieldsMap.get(
                                        'display_transportation'
                                      ) &&
                                      data.transporterId && (
                                        <>
                                          <br />
                                          {data.transporterId}
                                        </>
                                      )}
                                  </p>
                                ) : (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    <b> </b>
                                    <>
                                      <br />
                                      {}
                                    </>
                                  </p>
                                )}
                                {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) ? (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    <b> Vehicle No: </b>
                                    <br />
                                    {TxnSettings &&
                                      TxnEnableFieldsMap.get(
                                        'display_transportation'
                                      ) &&
                                      data.vehicleNo &&
                                      data.vehicleNo}
                                  </p>
                                ) : (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    <b> </b>
                                    <br />
                                    {}
                                  </p>
                                )}
                              </>
                            )}
                            {TxnSettings &&
                            TxnEnableFieldsMap.get('display_po') ? (
                              <p
                                style={{
                                  textAlign: 'left',
                                  flex: 1,
                                  wordBreak: 'keep-all'
                                }}
                              >
                                <b>PO Number: </b>
                                {TxnSettings &&
                                  TxnEnableFieldsMap.get('display_po') &&
                                  data.poNo &&
                                  data.poNo}
                              </p>
                            ) : (
                              <p
                                style={{
                                  textAlign: 'left',
                                  flex: 1,
                                  wordBreak: 'keep-all'
                                }}
                              >
                                <b> </b>{' '}
                              </p>
                            )}
                            {TxnSettings &&
                            TxnEnableFieldsMap.get('display_po') ? (
                              <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                <b>PO Date:</b>
                                {data.poDate &&
                                  dateFormatter(data.poDate) + ' '}
                              </p>
                            ) : (
                              <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                <b> </b>{' '}
                              </p>
                            )}
                          </div>
                        </div>
                      </div>
                    </div>

                    <div>
                      {getHeaderRow()}

                      <div
                        style={{ border: '1px solid', minHeight: minRowHeight }}
                      >
                        {_data.item_list && _data.item_list.length > 0
                          ? getInvoiceRows()
                          : ''}
                      </div>

                      {/***************Theme 2 - Footer************/}

                      {!isPackagePreivew ? (
                        <div>
                          <div
                            style={{
                              border: '1px solid',
                              breakInside: 'avoid',
                              display: 'flex',
                              flexDirection: 'row',
                              fontWeight: 600
                            }}
                          >
                            <div
                              style={{
                                borderRight: '1px solid',
                                textAlign: 'center',
                                width: '10%'
                              }}
                            ></div>
                            <div
                              style={{
                                textAlign: 'center',
                                borderRight: '1px solid',
                                paddingRight: '3px',
                                width: '30%'
                              }}
                            >
                              Total
                            </div>

                            {/******* HSN ********/}
                            {TxnEnableFieldsMap.get('display_hsn') && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {/********* Serial/IMEI No. *********/}
                            {TxnSettings &&
                              TxnEnableFieldsMap.get(
                                'display_product_serial_imei'
                              ) && (
                                <div
                                  style={{
                                    borderRight: '1px solid ',
                                    paddingRight: '3px',
                                    width: '15%',
                                    textAlign: 'right'
                                  }}
                                ></div>
                              )}

                            {/* Batch Number */}
                            {TxnEnableFieldsMap.get(
                              'display_product_batch_number'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {/* Barcode */}
                            {TxnEnableFieldsMap.get(
                              'display_product_barcode'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {/* Brand */}
                            {TxnEnableFieldsMap.get(
                              'display_product_brand'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {/* Model No */}
                            {TxnEnableFieldsMap.get(
                              'display_product_model_no'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {/* Manufacturing Date */}
                            {TxnEnableFieldsMap.get(
                              'display_product_manufacturing_date'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {/* Expiry Date */}
                            {TxnEnableFieldsMap.get(
                              'display_product_expiry_date'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_quantity'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              >
                                {totalqty}
                              </div>
                            )}

                            {/* Total Free Quantity */}
                            {TxnEnableFieldsMap.get(
                              'display_product_free_quantity'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              >
                                {totalfreeqty}
                              </div>
                            )}

                            {/* Unit */}
                            {TxnEnableFieldsMap.get('display_product_unit') && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get('display_product_mrp') && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_price'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  width: '15%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {_data.exportConversionRate > 0 &&
                              TxnEnableFieldsMap.get(
                                'display_product_price_other_currency'
                              ) && (
                                <p
                                  style={{
                                    borderRight: '1px solid',

                                    width: '15%',
                                    textAlign: 'right',
                                    paddingRight: '3px'
                                  }}
                                ></p>
                              )}
                            {TxnEnableFieldsMap.get(
                              'display_product_price_per_gram'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  width: '30%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_gross_weight'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              >
                                {parseFloat(totalGrossWt).toFixed(3)}
                              </div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_stone_weight'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              >
                                {parseFloat(totalStoneWt).toFixed(3)}
                              </div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_net_weight'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              >
                                {parseFloat(totalNetWt).toFixed(3)}
                              </div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_wastage'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_making_charge'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_making_charge_per_gram'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_stone_charge'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_purity'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              ></div>
                            )}

                            {/* Copper */}
                            {TxnEnableFieldsMap.get(
                              'display_product_copper'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_discount'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              >
                                {data.exportConversionRate > 0 ? (
                                  <span>
                                    {getFloatWithTwoDecimal(
                                      data.subTotalDisc /
                                        data.exportConversionRate
                                    )}
                                  </span>
                                ) : (
                                  <span>
                                    â‚¹{' '}
                                    {getFloatWithTwoDecimal(data.subTotalDisc)}
                                  </span>
                                )}
                              </div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_gst_percentage'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get('display_product_gst') && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              >
                                {getFloatWithTwoDecimal(totaltax_gst)}
                              </div>
                            )}

                            {data.isSale ? (
                              <>
                                {TxnEnableFieldsMap.get(
                                  'display_product_total_amount'
                                ) && (
                                  <div
                                    style={{
                                      width: '25%',
                                      textAlign: 'right',
                                      paddingRight: '3px'
                                    }}
                                  >
                                    {(
                                      getFloatWithTwoDecimal(
                                        data.totalTaxableAmount
                                      ) / (_data.exportConversionRate || 1)
                                    ).toFixed(2)}
                                  </div>
                                )}
                              </>
                            ) : (
                              <div
                                style={{
                                  width: '25%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              >
                                {getFloatWithTwoDecimal(
                                  data.totalTaxableAmount
                                )}
                              </div>
                            )}

                            {_data.exportConversionRate > 0 &&
                              TxnEnableFieldsMap.get(
                                'display_product_total_amount_other'
                              ) &&
                              data.amountOtherCurrency && (
                                <div
                                  style={{
                                    borderLeft: '1px solid',
                                    width: '25%',
                                    textAlign: 'right',
                                    paddingRight: '3px'
                                  }}
                                >
                                  {data.amountOtherCurrency?.toFixed(2)}
                                </div>
                              )}
                          </div>

                          <div
                            style={{
                              display: 'flex',
                              flexDirection: 'row',
                              border: '1px solid',
                              breakInside: 'avoid',
                              width: 'auto'
                            }}
                          >
                            <div style={{ width: '70%', textAlign: 'right' }}>
                              <b>Sub Total</b>
                            </div>
                            <div
                              style={{
                                width: '30%',
                                textAlign: 'right',
                                paddingRight: '3px'
                              }}
                            >
                              {data.exportConversionRate ? (
                                <b>
                                  {data.exportCurrency}{' '}
                                  {(
                                    getFloatWithTwoDecimal(
                                      data.totalTaxableAmount +
                                        data.subTotalDisc
                                    ) / data.exportConversionRate
                                  )?.toFixed(2)}
                                  {/* {getFloatWithTwoDecimal(data.subTotal)} */}
                                </b>
                              ) : (
                                <b>
                                  â‚¹{' '}
                                  {/* {getFloatWithTwoDecimal(
                                    data.totalTaxableAmount + data.subTotalDisc
                                  )} */}
                                  {getFloatWithTwoDecimal(data.subTotal)}
                                </b>
                              )}
                            </div>
                          </div>

                          {settings.boolTaxDetails && gstMap.size > 0 && (
                            <div
                              style={{
                                border: '1px solid',
                                breakInside: 'avoid',
                                width: 'auto'
                              }}
                            >
                              {Array.from(gstMap.keys()).map((key) => {
                                return (
                                  <div
                                    style={{
                                      display: 'flex',
                                      flexDirection: 'row'
                                    }}
                                  >
                                    <div
                                      style={{
                                        width: '70%',
                                        textAlign: 'right'
                                      }}
                                    >
                                      <b>
                                        {' '}
                                        <p>{key}</p>
                                      </b>
                                    </div>
                                    <div
                                      style={{
                                        width: '30%',
                                        textAlign: 'right',
                                        paddingRight: '3px'
                                      }}
                                    >
                                      <b>
                                        {' '}
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(
                                          gstMap.get(key)
                                        )}
                                      </b>
                                    </div>
                                  </div>
                                );
                              })}
                            </div>
                          )}

                          <div
                            style={{
                              border: '1px solid',
                              breakInside: 'avoid',
                              width: 'auto'
                            }}
                          >
                            {_data.exportConversionRate === 0 &&
                            TxnEnableFieldsMap.get(
                              'display_bill_packing_charge'
                            ) &&
                            _data.packing_charge ? (
                              <div
                                style={{
                                  display: 'flex',
                                  flexDirection: 'row',
                                  width: 'auto'
                                }}
                              >
                                <div
                                  style={{ width: '70%', textAlign: 'right' }}
                                >
                                  <div>
                                    <p>Package Charge</p>
                                  </div>
                                </div>
                                <div
                                  style={{
                                    width: '30%',
                                    textAlign: 'right',
                                    paddingRight: '3px'
                                  }}
                                >
                                  <div>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all'
                                      }}
                                    >
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.packing_charge
                                          ? _data.packing_charge
                                          : 0
                                      )}
                                    </p>
                                  </div>
                                </div>
                              </div>
                            ) : (
                              ' '
                            )}

                            {_data.exportConversionRate > 0 &&
                            TxnEnableFieldsMap.get(
                              'display_packing_other_currency'
                            ) &&
                            _data.packingChargeOtherCurrency ? (
                              <div
                                style={{
                                  display: 'flex',
                                  flexDirection: 'row',
                                  width: 'auto'
                                }}
                              >
                                <div
                                  style={{ width: '70%', textAlign: 'right' }}
                                >
                                  <div>
                                    <p>Packing Charge</p>
                                  </div>
                                </div>
                                <div
                                  style={{
                                    width: '30%',
                                    textAlign: 'right',
                                    paddingRight: '3px'
                                  }}
                                >
                                  <div>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all'
                                      }}
                                    >
                                      {data.exportCurrency}{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.packingChargeOtherCurrency
                                          ? _data.packingChargeOtherCurrency
                                          : 0
                                      )}
                                    </p>
                                  </div>
                                </div>
                              </div>
                            ) : (
                              ' '
                            )}

                            {_data.exportConversionRate === 0 &&
                            TxnEnableFieldsMap.get(
                              'display_bill_shipping_charge'
                            ) &&
                            !_data.backToBackPurchaseNumber &&
                            _data.shipping_charge ? (
                              <div
                                style={{
                                  display: 'flex',
                                  flexDirection: 'row'
                                }}
                              >
                                <div
                                  style={{ width: '70%', textAlign: 'right' }}
                                >
                                  <div>
                                    <p>Shipping Charge</p>
                                  </div>
                                </div>
                                <div
                                  style={{
                                    width: '30%',
                                    textAlign: 'right',
                                    paddingRight: '3px'
                                  }}
                                >
                                  <div>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all'
                                      }}
                                    >
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.shipping_charge
                                          ? _data.shipping_charge
                                          : 0
                                      )}
                                    </p>
                                  </div>
                                </div>
                              </div>
                            ) : (
                              ' '
                            )}

                            {_data.exportConversionRate > 0 &&
                            TxnEnableFieldsMap.get(
                              'display_shipping_other_currency'
                            ) &&
                            !_data.backToBackPurchaseNumber &&
                            _data.shippingChargeOtherCurrency ? (
                              <div
                                style={{
                                  display: 'flex',
                                  flexDirection: 'row'
                                }}
                              >
                                <div
                                  style={{ width: '70%', textAlign: 'right' }}
                                >
                                  <div>
                                    <p>Shipping Charge</p>
                                  </div>
                                </div>
                                <div
                                  style={{
                                    width: '30%',
                                    textAlign: 'right',
                                    paddingRight: '3px'
                                  }}
                                >
                                  <div>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all'
                                      }}
                                    >
                                      {data.exportCurrency}{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.shippingChargeOtherCurrency
                                          ? _data.shippingChargeOtherCurrency
                                          : 0
                                      )}
                                    </p>
                                  </div>
                                </div>
                              </div>
                            ) : (
                              ' '
                            )}

                            <div
                              style={{
                                display: 'flex',
                                flexDirection: 'row'
                              }}
                            >
                              <div style={{ width: '70%', textAlign: 'right' }}>
                                {TxnEnableFieldsMap.get(
                                  'display_bill_shipping_charge'
                                ) &&
                                  _data.backToBackPurchaseNumber && (
                                    <p>Freight Charge</p>
                                  )}
                              </div>
                              <div
                                style={{
                                  width: '30%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              >
                                {TxnEnableFieldsMap.get(
                                  'display_bill_shipping_charge'
                                ) &&
                                  _data.backToBackPurchaseNumber && (
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all'
                                      }}
                                    >
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.freightCharge
                                          ? _data.freightCharge
                                          : 0
                                      )}
                                    </p>
                                  )}
                              </div>
                            </div>

                            {_data.exportConversionRate === 0 &&
                            TxnEnableFieldsMap.get('display_bill_insurance') &&
                            _data.insurance &&
                            _data.insurance.amount > 0 ? (
                              <div
                                style={{
                                  display: 'flex',
                                  flexDirection: 'row'
                                }}
                              >
                                <div
                                  style={{ width: '70%', textAlign: 'right' }}
                                >
                                  <p>Insurance</p>
                                </div>
                                <div
                                  style={{
                                    width: '30%',
                                    textAlign: 'right',
                                    paddingRight: '3px'
                                  }}
                                >
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    â‚¹{' '}
                                    {getFloatWithTwoDecimal(
                                      _data.insurance && _data.insurance.amount
                                        ? _data.insurance.amount
                                        : 0
                                    )}
                                  </p>
                                </div>
                              </div>
                            ) : (
                              ' '
                            )}

                            {_data.exportConversionRate > 0 &&
                            TxnEnableFieldsMap.get(
                              'display_insurance_other_currency'
                            ) &&
                            _data.insurance &&
                            _data.insurance.amountOtherCurrency > 0 ? (
                              <div
                                style={{
                                  display: 'flex',
                                  flexDirection: 'row'
                                }}
                              >
                                <div
                                  style={{ width: '70%', textAlign: 'right' }}
                                >
                                  <div>
                                    <p>Insurance</p>
                                  </div>
                                </div>
                                <div
                                  style={{
                                    width: '30%',
                                    textAlign: 'right',
                                    paddingRight: '3px'
                                  }}
                                >
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    {data.exportCurrency}{' '}
                                    {getFloatWithTwoDecimal(
                                      _data.insurance &&
                                        _data.insurance.amountOtherCurrency
                                        ? _data.insurance.amountOtherCurrency
                                        : 0
                                    )}
                                  </p>
                                </div>
                              </div>
                            ) : (
                              ' '
                            )}
                          </div>

                          <div
                            style={{
                              border: '1px solid',
                              breakInside: 'avoid'
                            }}
                          >
                            {TxnEnableFieldsMap.get('display_bill_discount') &&
                              data.totalDiscount !== 0 && (
                                <div
                                  style={{
                                    width: '100%',
                                    display: 'flex',
                                    flexDirection: 'row'
                                  }}
                                >
                                  <div
                                    style={{ width: '70%', textAlign: 'right' }}
                                  >
                                    {data.totalDiscount === 0 ? (
                                      ''
                                    ) : (
                                      <>
                                        {((_data.invoice_number &&
                                          TxnEnableFieldsMap.get(
                                            'display_bill_discount'
                                          )) ||
                                          !_data.invoice_number) && (
                                          <p>Total Discount</p>
                                        )}
                                      </>
                                    )}
                                  </div>

                                  <div
                                    style={{
                                      width: '30%',
                                      textAlign: 'right',
                                      paddingRight: '3px'
                                    }}
                                  >
                                    {data.totalDiscount === 0 ? (
                                      ''
                                    ) : (
                                      <>
                                        {((_data.invoice_number &&
                                          TxnEnableFieldsMap.get(
                                            'display_bill_discount'
                                          )) ||
                                          !_data.invoice_number) && (
                                          <p
                                            style={{
                                              flex: 1,
                                              wordBreak: 'keep-all'
                                            }}
                                          >
                                            â‚¹{' '}
                                            {getFloatWithTwoDecimal(
                                              data.totalDiscount
                                            )}
                                          </p>
                                        )}
                                      </>
                                    )}
                                  </div>
                                </div>
                              )}

                            {/* TCS Amount */}
                            {data.tcsAmount > 0 && (
                              <>
                                <div
                                  style={{
                                    width: '100%',
                                    display: 'flex',
                                    flexDirection: 'row'
                                  }}
                                >
                                  <div
                                    style={{ width: '70%', textAlign: 'right' }}
                                  >
                                    <p>
                                      TCS@{data.tcsRate}% {data.tcsCode}
                                    </p>
                                  </div>
                                  <div
                                    style={{
                                      width: '30%',
                                      textAlign: 'right',
                                      paddingRight: '3px'
                                    }}
                                  >
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      â‚¹ {getFloatWithTwoDecimal(data.tcsAmount)}
                                    </p>
                                  </div>
                                </div>
                              </>
                            )}

                            {TxnEnableFieldsMap.get('display_product_cess') &&
                              data.totalCess > 0 && (
                                <>
                                  <div
                                    style={{
                                      width: '100%',
                                      display: 'flex',
                                      flexDirection: 'row'
                                    }}
                                  >
                                    <div
                                      style={{
                                        width: '70%',
                                        textAlign: 'right'
                                      }}
                                    >
                                      {data.totalCess === 0 ? (
                                        ''
                                      ) : (
                                        <>
                                          {data.totalCess > 0 && (
                                            <p>Total Cess</p>
                                          )}
                                        </>
                                      )}
                                    </div>
                                    <div
                                      style={{
                                        width: '30%',
                                        textAlign: 'right',
                                        paddingRight: '3px'
                                      }}
                                    >
                                      {TxnEnableFieldsMap.get(
                                        'display_product_cess'
                                      ) &&
                                        data.totalCess > 0 && (
                                          <p
                                            style={{
                                              flex: 1,
                                              wordBreak: 'keep-all'
                                            }}
                                          >
                                            â‚¹{' '}
                                            {getFloatWithTwoDecimal(
                                              data.totalCess
                                            )}
                                          </p>
                                        )}
                                    </div>
                                  </div>
                                </>
                              )}
                          </div>

                          {String(_data.is_roundoff).toLowerCase() ===
                            'true' && (
                            <div
                              style={{
                                border: '1px solid',
                                display: 'flex',
                                flexDirection: 'row',
                                breakInside: 'avoid'
                              }}
                            >
                              <div style={{ width: '70%', textAlign: 'right' }}>
                                <p style={{ fontWeight: 600 }}>Round off</p>
                              </div>
                              <div
                                style={{
                                  width: '30%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              >
                                <p
                                  style={{
                                    flex: 1,
                                    wordBreak: 'keep-all',
                                    fontWeight: 600
                                  }}
                                >
                                  {data.exportConversionRate ? (
                                    <span>
                                      {data.exportCurrency}{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.round_amount /
                                          data.exportConversionRate
                                      )}
                                    </span>
                                  ) : (
                                    <span>
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.round_amount
                                      )}
                                    </span>
                                  )}
                                </p>
                              </div>
                            </div>
                          )}

                          {_data.estimateType === 'open' ||
                          _data.estimateType === 'close' ? (
                            ''
                          ) : (
                            <>
                              {data.receivedAmount > 0 && (
                                <div
                                  style={{
                                    border: '1px solid',
                                    display: 'flex',
                                    flexDirection: 'row',
                                    breakInside: 'avoid'
                                  }}
                                >
                                  <div
                                    style={{ width: '70%', textAlign: 'right' }}
                                  >
                                    <p>{data.paidReceivedTitle}</p>
                                  </div>
                                  <div
                                    style={{
                                      width: '30%',
                                      textAlign: 'right',
                                      paddingRight: '3px'
                                    }}
                                  >
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        data.receivedAmount
                                      )}
                                    </p>
                                  </div>
                                </div>
                              )}

                              {_data.exportConversionRate === 0 &&
                                data.balanceAmount > 0 && (
                                  <div
                                    style={{
                                      border: '1px solid',
                                      display: 'flex',
                                      flexDirection: 'row',
                                      breakInside: 'avoid'
                                    }}
                                  >
                                    <div
                                      style={{
                                        width: '70%',
                                        textAlign: 'right'
                                      }}
                                    >
                                      <p>Balance</p>
                                    </div>
                                    <div
                                      style={{
                                        width: '30%',
                                        textAlign: 'right',
                                        paddingRight: '3px'
                                      }}
                                    >
                                      <p
                                        style={{
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(
                                          data.balanceAmount
                                        )}
                                      </p>
                                    </div>
                                  </div>
                                )}

                              {settings.boolPaymentMode &&
                                data.paymentType !== '' && (
                                  <>
                                    <div
                                      style={{
                                        border: '1px solid',
                                        display: 'flex',
                                        flexDirection: 'row',
                                        breakInside: 'avoid'
                                      }}
                                    >
                                      <div
                                        style={{
                                          width: '70%',
                                          textAlign: 'right'
                                        }}
                                      >
                                        <p>Payment Type</p>
                                      </div>
                                      <div
                                        style={{
                                          width: '30%',
                                          textAlign: 'right',
                                          paddingRight: '3px'
                                        }}
                                      >
                                        <p
                                          style={{
                                            textTransform: 'capitalize'
                                          }}
                                          dangerouslySetInnerHTML={{
                                            __html: data.paymentType
                                          }}
                                        ></p>
                                      </div>
                                    </div>
                                  </>
                                )}
                              {data.tdsAmount > 0 && (
                                <>
                                  <div
                                    style={{
                                      border: '1px solid',
                                      display: 'flex',
                                      flexDirection: 'row',
                                      breakInside: 'avoid'
                                    }}
                                  >
                                    <div
                                      style={{
                                        width: '70%',
                                        textAlign: 'right'
                                      }}
                                    >
                                      <p>
                                        TDS@{data.tdsRate}% {data.tdsCode}
                                      </p>
                                    </div>
                                    <div
                                      style={{
                                        width: '30%',
                                        textAlign: 'right',
                                        paddingRight: '3px'
                                      }}
                                    >
                                      <p
                                        style={{ textTransform: 'capitalize' }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(data.tdsAmount)}
                                      </p>
                                    </div>
                                  </div>
                                </>
                              )}
                            </>
                          )}

                          <div
                            style={{
                              border: '1px solid',
                              display: 'flex',
                              flexDirection: 'row',
                              breakInside: 'avoid'
                            }}
                          >
                            <div
                              style={{
                                width: '70%',
                                textAlign: 'right',
                                fontWeight: 600
                              }}
                            >
                              <h1>
                                {' '}
                                <p>TOTAL</p>
                              </h1>
                            </div>
                            <div
                              style={{
                                width: '30%',
                                textAlign: 'right',
                                paddingRight: '3px',
                                fontWeight: 600
                              }}
                            >
                              <h1>
                                {' '}
                                <p>
                                  {' '}
                                  {data.exportConversionRate ? (
                                    <span>
                                      {data.exportCurrency}{' '}
                                      {getFloatWithTwoDecimal(data.totalAmount)}
                                    </span>
                                  ) : (
                                    <span>
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(data.totalAmount)}
                                    </span>
                                  )}
                                </p>
                              </h1>
                            </div>
                          </div>

                          <div
                            style={{
                              border: '1px solid',
                              breakInside: 'avoid'
                            }}
                          >
                            <p
                              style={{
                                textAlign: 'right',
                                paddingRight: '3px',
                                fontWeight: 600
                              }}
                            >
                              Total Amount (in words):{' '}
                              {data.exportConversionRate ? 'USD' : 'INR'}{' '}
                              {data.strTotal}
                            </p>
                          </div>

                          <div
                            style={{
                              border: '1px solid',
                              textAlign: 'right',
                              breakInside: 'avoid'
                            }}
                          >
                            <p style={{ paddingRight: '3px', fontWeight: 600 }}>
                              Amount Payable:{' '}
                              {data.exportConversionRate > 0
                                ? data.exportCurrency
                                : 'â‚¹'}{' '}
                              {getFloatWithTwoDecimal(data.totalAmount)}
                            </p>
                          </div>

                          {/****** Outstanding Payble / Receivable *****/}
                          {settings.boolPreviousBalance &&
                            outStandingType &&
                            outStandingBalance !== 0 && (
                              <div
                                style={{
                                  border: '1px solid',
                                  textAlign: 'right',
                                  breakInside: 'avoid'
                                }}
                              >
                                <p
                                  style={{
                                    paddingRight: '3px',
                                    fontWeight: 600
                                  }}
                                >
                                  Outstanding-{outStandingType}: â‚¹{' '}
                                  {getFloatWithTwoDecimal(outStandingBalance)}
                                </p>
                              </div>
                            )}

                          <div
                            style={{
                              border: '1px solid',
                              display: 'flex',
                              flexDirection: 'row',
                              breakInside: 'avoid'
                            }}
                          >
                            <div style={{ width: '50%', paddingLeft: '12px' }}>
                              {(TxnEnableFieldsMap.get('display_bill_notes') ||
                                TxnEnableFieldsMap.get(
                                  'display_total_weight'
                                )) && (
                                <>
                                  <p
                                    style={{
                                      fontWeight: 600,
                                      marginTop: '0px',
                                      paddingTop: '0px',
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    Notes
                                  </p>
                                  <Fragment>
                                    {data.notes && (
                                      <p
                                        style={{
                                          marginTop: '0px',
                                          paddingTop: '0px',
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        {data.notes}
                                      </p>
                                    )}
                                    {TxnEnableFieldsMap.get(
                                      'display_total_weight'
                                    ) && (
                                      <>
                                        {_data.weightIn &&
                                        _data.weightIn > 0 ? (
                                          <div
                                            style={{
                                              textAlign: 'right',
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <p
                                              style={{
                                                fontWeight: 600,
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              Weight In
                                            </p>
                                            <p
                                              style={{
                                                flex: 1,
                                                wordBreak: 'keep-all',
                                                fontWeight: 600,
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              {getFloatWithTwoDecimal(
                                                _data.weightIn
                                                  ? _data.weightIn
                                                  : 0
                                              )}
                                              g
                                            </p>
                                          </div>
                                        ) : null}
                                        {_data.weightOut &&
                                        _data.weightOut > 0 ? (
                                          <div
                                            style={{
                                              textAlign: 'right',
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <p
                                              style={{
                                                fontWeight: 600,
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              Weight Out
                                            </p>
                                            <p
                                              style={{
                                                flex: 1,
                                                wordBreak: 'keep-all',
                                                fontWeight: 600,
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              {getFloatWithTwoDecimal(
                                                _data.weightOut
                                                  ? _data.weightOut
                                                  : 0
                                              )}
                                              g
                                            </p>
                                          </div>
                                        ) : null}
                                        {_data.wastage && _data.wastage > 0 ? (
                                          <div
                                            style={{
                                              textAlign: 'right',
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <p
                                              style={{
                                                fontWeight: 600,
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              Wastage
                                            </p>
                                            <p
                                              style={{
                                                flex: 1,
                                                wordBreak: 'keep-all',
                                                fontWeight: 600,
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              {getFloatWithTwoDecimal(
                                                _data.wastage
                                                  ? _data.wastage
                                                  : 0
                                              )}
                                              g
                                            </p>
                                          </div>
                                        ) : null}
                                      </>
                                    )}
                                  </Fragment>
                                </>
                              )}
                              {!_data.date && settings.boolDesc && (
                                <Fragment>
                                  <p
                                    style={{
                                      fontWeight: 600,
                                      marginTop: '0px',
                                      paddingTop: '0px',
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    Description
                                  </p>
                                  <p
                                    style={{
                                      marginTop: '0px',
                                      paddingTop: '0px',
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    {settings.strDesc}
                                  </p>
                                </Fragment>
                              )}

                              {settings.boolBankDetail && (
                                <div>
                                  {settings.boolBankDetailsOnCreditSaleOnly &&
                                  data.balanceAmount > 0 ? (
                                    <Fragment>
                                      <p
                                        style={{
                                          fontWeight: 600,
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        BANK DETAILS
                                      </p>
                                      <div>
                                        <div
                                          style={{
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <div style={{ width: '40%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              A/C Holder's Name
                                            </p>
                                          </div>
                                          <div style={{ width: '60%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              : {settings.bankAccountHolderName}
                                            </p>
                                          </div>
                                        </div>
                                        <div
                                          style={{
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <div style={{ width: '40%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              BANK NAME
                                            </p>
                                          </div>
                                          <div style={{ width: '60%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              : {settings.bankName}
                                            </p>
                                          </div>
                                        </div>
                                        <div
                                          style={{
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <div style={{ width: '40%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              A/C NO.
                                            </p>
                                          </div>
                                          <div style={{ width: '60%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              : {settings.bankAccountNumber}
                                            </p>
                                          </div>
                                        </div>
                                        <div
                                          style={{
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <div style={{ width: '40%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              IFSC Code
                                            </p>
                                          </div>
                                          <div style={{ width: '60%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              : {settings.bankIfscCode}
                                            </p>
                                          </div>
                                        </div>
                                      </div>
                                    </Fragment>
                                  ) : (
                                    <div>
                                      {!settings.boolBankDetailsOnCreditSaleOnly && (
                                        <Fragment>
                                          <p style={{ fontWeight: 600 }}>
                                            BANK DETAILS
                                          </p>
                                          <div>
                                            <div
                                              style={{
                                                display: 'flex',
                                                flexDirection: 'row'
                                              }}
                                            >
                                              <div style={{ width: '40%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  A/C Holder's Name
                                                </p>
                                              </div>
                                              <div style={{ width: '60%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  :{' '}
                                                  {
                                                    settings.bankAccountHolderName
                                                  }
                                                </p>
                                              </div>
                                            </div>
                                            <div
                                              style={{
                                                display: 'flex',
                                                flexDirection: 'row'
                                              }}
                                            >
                                              <div style={{ width: '40%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  BANK NAME
                                                </p>
                                              </div>
                                              <div style={{ width: '60%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  : {settings.bankName}
                                                </p>
                                              </div>
                                            </div>
                                            <div
                                              style={{
                                                display: 'flex',
                                                flexDirection: 'row'
                                              }}
                                            >
                                              <div style={{ width: '40%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  A/C NO.
                                                </p>
                                              </div>
                                              <div style={{ width: '60%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  : {settings.bankAccountNumber}
                                                </p>
                                              </div>
                                            </div>
                                            <div
                                              style={{
                                                display: 'flex',
                                                flexDirection: 'row'
                                              }}
                                            >
                                              <div style={{ width: '40%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  IFSC Code
                                                </p>
                                              </div>
                                              <div style={{ width: '60%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  : {settings.bankIfscCode}
                                                </p>
                                              </div>
                                            </div>
                                          </div>
                                        </Fragment>
                                      )}
                                    </div>
                                  )}
                                </div>
                              )}
                            </div>
                            <div
                              style={{
                                width: '20%',
                                borderRight: '1px solid',
                                textAlign: 'center',
                                display: 'flex',
                                flexDirection: 'column'
                              }}
                            >
                              {settings.boolQrCode && (
                                <div>
                                  <p
                                    style={{
                                      alignSelf: 'center',
                                      fontWeight: 600
                                    }}
                                  >
                                    Pay using UPI:
                                  </p>
                                  <Fragment>
                                    {this.getSeparator(1, classes.separator)}
                                    <QRCode
                                      value={
                                        data.qrCodestr ? data.qrCodestr : ''
                                      }
                                      size={75}
                                    />
                                  </Fragment>
                                </div>
                              )}
                              {TxnEnableFieldsMap.get(
                                'display_customer_signature'
                              ) && (
                                <div
                                  style={{
                                    textAlign: 'center',
                                    alignSelf: 'flex-end',
                                    paddingRight: '5px'
                                  }}
                                >
                                  {this.getSeparator(8, classes.separator)}
                                  <p>Customer's Signature</p>
                                </div>
                              )}
                            </div>
                            <div
                              style={{
                                width: '30%',
                                textAlign: 'left',
                                paddingLeft: '5px'
                              }}
                            >
                              <p>For {settings.strCompanyName}</p>
                              {settings.boolSignature &&
                              settings.strSignature ? (
                                <>
                                  <Box
                                    component="img"
                                    style={
                                      settings.signatureSize === 'Small'
                                        ? {
                                            width: signatureSmall,
                                            height: signatureSmall
                                          }
                                        : settings.signatureSize === 'Medium'
                                        ? {
                                            width: signatureMedium,
                                            height: signatureMedium
                                          }
                                        : {
                                            width: signatureLarge,
                                            height: signatureLarge
                                          }
                                    }
                                    src={settings.strSignature}
                                  />
                                  <p>Authorised signature</p>
                                </>
                              ) : (
                                <>
                                  {this.getSeparator(10, classes.separator)}
                                  <p>Authorised signature</p>
                                </>
                              )}
                            </div>
                          </div>

                          <div
                            style={{
                              breakInside: 'avoid',
                              border: '1px solid',
                              display: 'flex',
                              flexDirection: 'row'
                            }}
                          >
                            <div style={{ width: '50%', paddingLeft: '3px' }}>
                              <p style={{ fontWeight: 600 }}>
                                Terms and Conditions:
                              </p>
                              {data.terms !== '' ? (
                                <Fragment>
                                  <div style={{ whiteSpace: 'break-spaces' }}>
                                    {data.terms}
                                  </div>
                                </Fragment>
                              ) : (
                                this.getSeparator(4, classes.separator)
                              )}
                            </div>
                            <div
                              style={{
                                width: '50%',
                                borderRight: '1px solid',
                                paddingLeft: '12px',
                                paddingRight: '12px'
                              }}
                            >
                              {data.irnNo && (
                                <div
                                  style={{
                                    display: 'flex',
                                    flexDirection: 'row',
                                    breakInside: 'avoid',
                                    width: '100%'
                                  }}
                                >
                                  <div
                                    style={{
                                      width: '25%',
                                      textAlign: 'center'
                                    }}
                                  >
                                    {data.eInvoiceQrCodeStr ? (
                                      <>
                                        {this.getSeparator(
                                          1,
                                          classes.separator
                                        )}
                                        <QRCode
                                          value={
                                            data.eInvoiceQrCodeStr
                                              ? data.eInvoiceQrCodeStr
                                              : ''
                                          }
                                          size={30}
                                        />
                                      </>
                                    ) : (
                                      ''
                                    )}
                                  </div>
                                  <div style={{ width: '75%' }}>
                                    <div
                                      style={{
                                        display: 'flex',
                                        flexDirection: 'column',
                                        width: '100%'
                                      }}
                                    >
                                      <div
                                        style={{
                                          display: 'flex',
                                          flexDirection: 'row',
                                          paddingLeft: '5px',
                                          width: '100%'
                                        }}
                                      >
                                        <div style={{ width: '30%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            IRN :
                                          </p>
                                        </div>
                                        <div style={{ width: '70%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            {data.irnNo}
                                          </p>
                                        </div>
                                      </div>
                                      <div
                                        style={{
                                          display: 'flex',
                                          flexDirection: 'row',
                                          paddingLeft: '5px',
                                          width: '100%'
                                        }}
                                      >
                                        <div style={{ width: '30%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            Ack No. :
                                          </p>
                                        </div>
                                        <div style={{ width: '70%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            {data.ackNo}
                                          </p>
                                        </div>
                                      </div>
                                      <div
                                        style={{
                                          display: 'flex',
                                          flexDirection: 'row',
                                          paddingLeft: '5px',
                                          width: '100%'
                                        }}
                                      >
                                        <div style={{ width: '30%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            Ack Date :
                                          </p>
                                        </div>
                                        <div style={{ width: '70%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            {data.ackDt}
                                          </p>
                                        </div>
                                      </div>
                                      {/* <div style={{ paddingLeft: '5px' }}>
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  e-Invoicing detail{'('}s{')'} generated from
                                  the Government's e-Invoicing system
                                </p>
                              </div> */}
                                    </div>
                                  </div>
                                </div>
                              )}
                            </div>
                          </div>
                          <div style={{ textAlign: 'center' }}>
                            {settings.boolJurisdiction &&
                              settings.jurisdiction !== '' && (
                                <p>{settings.jurisdiction}</p>
                              )}
                          </div>
                        </div>
                      ) : (
                        <div
                          style={{
                            border: '1px solid',
                            display: 'flex',
                            flexDirection: 'row',
                            breakInside: 'avoid',
                            borderTop: 'none'
                          }}
                        >
                          <div style={{ width: '50%', paddingLeft: '12px' }}>
                            {(TxnEnableFieldsMap.get('display_bill_notes') ||
                              TxnEnableFieldsMap.get(
                                'display_total_weight'
                              )) && (
                              <>
                                <p
                                  style={{
                                    fontWeight: 600,
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Notes
                                </p>
                                <Fragment>
                                  {data.notes && (
                                    <p
                                      style={{
                                        marginTop: '0px',
                                        paddingTop: '0px',
                                        paddingBottom: '0px',
                                        marginBottom: '0px'
                                      }}
                                    >
                                      {data.notes}
                                    </p>
                                  )}
                                  {TxnEnableFieldsMap.get(
                                    'display_total_weight'
                                  ) && (
                                    <>
                                      {_data.weightIn && _data.weightIn > 0 ? (
                                        <div
                                          style={{
                                            textAlign: 'right',
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <p
                                            style={{
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            Weight In
                                          </p>
                                          <p
                                            style={{
                                              flex: 1,
                                              wordBreak: 'keep-all',
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            {getFloatWithTwoDecimal(
                                              _data.weightIn
                                                ? _data.weightIn
                                                : 0
                                            )}
                                            g
                                          </p>
                                        </div>
                                      ) : null}
                                      {_data.weightOut &&
                                      _data.weightOut > 0 ? (
                                        <div
                                          style={{
                                            textAlign: 'right',
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <p
                                            style={{
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            Weight Out
                                          </p>
                                          <p
                                            style={{
                                              flex: 1,
                                              wordBreak: 'keep-all',
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            {getFloatWithTwoDecimal(
                                              _data.weightOut
                                                ? _data.weightOut
                                                : 0
                                            )}
                                            g
                                          </p>
                                        </div>
                                      ) : null}
                                      {_data.wastage && _data.wastage > 0 ? (
                                        <div
                                          style={{
                                            textAlign: 'right',
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <p
                                            style={{
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            Wastage
                                          </p>
                                          <p
                                            style={{
                                              flex: 1,
                                              wordBreak: 'keep-all',
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            {getFloatWithTwoDecimal(
                                              _data.wastage ? _data.wastage : 0
                                            )}
                                            g
                                          </p>
                                        </div>
                                      ) : null}
                                    </>
                                  )}
                                </Fragment>
                              </>
                            )}
                            {!_data.date && settings.boolDesc && (
                              <Fragment>
                                <p
                                  style={{
                                    fontWeight: 600,
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Description
                                </p>
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {settings.strDesc}
                                </p>
                              </Fragment>
                            )}

                            {settings.boolBankDetail && (
                              <div>
                                {settings.boolBankDetailsOnCreditSaleOnly &&
                                data.balanceAmount > 0 ? (
                                  <Fragment>
                                    <p
                                      style={{
                                        fontWeight: 600,
                                        paddingBottom: '0px',
                                        marginBottom: '0px'
                                      }}
                                    >
                                      BANK DETAILS
                                    </p>
                                    <div>
                                      <div
                                        style={{
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <div style={{ width: '40%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            A/C Holder's Name
                                          </p>
                                        </div>
                                        <div style={{ width: '60%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            : {settings.bankAccountHolderName}
                                          </p>
                                        </div>
                                      </div>
                                      <div
                                        style={{
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <div style={{ width: '40%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            BANK NAME
                                          </p>
                                        </div>
                                        <div style={{ width: '60%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            : {settings.bankName}
                                          </p>
                                        </div>
                                      </div>
                                      <div
                                        style={{
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <div style={{ width: '40%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            A/C NO.
                                          </p>
                                        </div>
                                        <div style={{ width: '60%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            : {settings.bankAccountNumber}
                                          </p>
                                        </div>
                                      </div>
                                      <div
                                        style={{
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <div style={{ width: '40%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            IFSC Code
                                          </p>
                                        </div>
                                        <div style={{ width: '60%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            : {settings.bankIfscCode}
                                          </p>
                                        </div>
                                      </div>
                                    </div>
                                  </Fragment>
                                ) : (
                                  <div>
                                    {!settings.boolBankDetailsOnCreditSaleOnly && (
                                      <Fragment>
                                        <p style={{ fontWeight: 600 }}>
                                          BANK DETAILS
                                        </p>
                                        <div>
                                          <div
                                            style={{
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <div style={{ width: '40%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                A/C Holder's Name
                                              </p>
                                            </div>
                                            <div style={{ width: '60%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                :{' '}
                                                {settings.bankAccountHolderName}
                                              </p>
                                            </div>
                                          </div>
                                          <div
                                            style={{
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <div style={{ width: '40%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                BANK NAME
                                              </p>
                                            </div>
                                            <div style={{ width: '60%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                : {settings.bankName}
                                              </p>
                                            </div>
                                          </div>
                                          <div
                                            style={{
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <div style={{ width: '40%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                A/C NO.
                                              </p>
                                            </div>
                                            <div style={{ width: '60%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                : {settings.bankAccountNumber}
                                              </p>
                                            </div>
                                          </div>
                                          <div
                                            style={{
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <div style={{ width: '40%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                IFSC Code
                                              </p>
                                            </div>
                                            <div style={{ width: '60%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                : {settings.bankIfscCode}
                                              </p>
                                            </div>
                                          </div>
                                        </div>
                                      </Fragment>
                                    )}
                                  </div>
                                )}
                              </div>
                            )}
                          </div>
                          <div
                            style={{
                              width: '19.7%',
                              borderRight: '1px solid',
                              textAlign: 'center',
                              display: 'flex',
                              flexDirection: 'column'
                            }}
                          >
                            {settings.boolQrCode && (
                              <div>
                                <p
                                  style={{
                                    alignSelf: 'center',
                                    fontWeight: 600
                                  }}
                                >
                                  Pay using UPI:
                                </p>
                                <Fragment>
                                  {this.getSeparator(1, classes.separator)}
                                  <QRCode
                                    value={data.qrCodestr ? data.qrCodestr : ''}
                                    size={75}
                                  />
                                </Fragment>
                              </div>
                            )}
                            {TxnEnableFieldsMap.get(
                              'display_customer_signature'
                            ) && (
                              <div
                                style={{
                                  textAlign: 'center',
                                  alignSelf: 'flex-end',
                                  paddingRight: '5px'
                                }}
                              >
                                {this.getSeparator(8, classes.separator)}
                                <p>Customer's Signature</p>
                              </div>
                            )}
                          </div>
                          <div
                            style={{
                              width: '30%',
                              textAlign: 'left',
                              paddingLeft: '5px'
                            }}
                          >
                            <p>For {settings.strCompanyName}</p>
                            {settings.boolSignature && settings.strSignature ? (
                              <>
                                <Box
                                  component="img"
                                  style={
                                    settings.signatureSize === 'Small'
                                      ? {
                                          width: signatureSmall,
                                          height: signatureSmall
                                        }
                                      : settings.signatureSize === 'Medium'
                                      ? {
                                          width: signatureMedium,
                                          height: signatureMedium
                                        }
                                      : {
                                          width: signatureLarge,
                                          height: signatureLarge
                                        }
                                  }
                                  src={settings.strSignature}
                                />
                                <p>Authorised signature</p>
                              </>
                            ) : (
                              <>
                                {this.getSeparator(10, classes.separator)}
                                <p>Authorised signature</p>
                              </>
                            )}
                          </div>
                        </div>
                      )}
                    </div>
                  </div>
                ))
              : ''}
          </div>
        ) : settings.theme === 'Theme 3' ? (
          <div
            style={
              settings.textSize === 'Small'
                ? { fontSize: txtSmall }
                : settings.textSize === 'Medium'
                ? { fontSize: txtMedium }
                : { fontSize: txtLarge }
            }
          >
            {this.props && this.props.data
              ? format.map((item, index) => (
                  <div
                    style={{
                      paddingTop: '0px',
                      pageBreakAfter: 'always',
                      paddingBottom: '0px',
                      width: '100%',
                      padding: '5px',
                      fontFamily: 'Roboto',
                      wordBreak: 'break-word'
                    }}
                  >
                    <div style={{ border: '1px solid', minHeight: '60px' }}>
                      <h1 style={{ marginTop: '10px' }}>
                        <center>{data.mainTitle}</center>
                      </h1>

                      {item.name != '' && (
                        <p
                          style={{
                            float: 'right',
                            marginRight: '2px',
                            padding: '5px',
                            border: '1px solid #8080807a',
                            color: '#808080bf',
                            fontWeight: 'bold',
                            fontSize: '11px',
                            height: 'auto',
                            marginTop: '-29px'
                          }}
                        >
                          {item.name}
                        </p>
                      )}
                      {settings.boolBisHallmark && (
                        <div style={{ float: 'left', marginTop: '-39px' }}>
                          <Box
                            component="img"
                            style={{
                              ...(settings.logoSize === 'Small'
                                ? {
                                    width: bisLogoSmall,
                                    height: bisLogoHeightS
                                  }
                                : settings.logoSize === 'Medium'
                                ? {
                                    width: bisLogoMedium,
                                    height: bisLogoHeightM
                                  }
                                : {
                                    width: bisLogoLarge,
                                    height: bisLogoHeightL
                                  }),
                              padding: '5px'
                            }}
                            src={bisImage}
                          />
                        </div>
                      )}
                    </div>

                    <div
                      style={{
                        display: 'flex',
                        flexDirection: 'row',
                        border: '1px solid',
                        clear: 'both'
                      }}
                    >
                      <div style={{ width: '50%', borderRight: '1px solid' }}>
                        <div
                          style={{
                            display: 'flex',
                            flexDirection: 'row',
                            paddingLeft: '12px'
                          }}
                        >
                          {settings.boolCompanyLogo && (
                            <div
                              style={{
                                width: '30%',
                                paddingRight: '5px',
                                alignSelf: 'center'
                              }}
                            >
                              <Box
                                component="img"
                                style={
                                  settings.logoSize === 'Small'
                                    ? { width: logoSmall, height: logoHeightS }
                                    : settings.logoSize === 'Medium'
                                    ? { width: logoMedium, height: logoHeightM }
                                    : { width: logoLarge, height: logoHeightL }
                                }
                                src={settings.fileCompanyLogo}
                              />
                            </div>
                          )}
                          <div>
                            <p>
                              {settings.boolCompanyName && (
                                <Fragment>
                                  <h1>
                                    <strong
                                      style={{
                                        color: settings.companyNameColor
                                      }}
                                    >
                                      {settings.strCompanyName}
                                    </strong>
                                  </h1>
                                </Fragment>
                              )}
                              {settings.boolCompanyAdditionalDesc && (
                                <Fragment>
                                  {settings.companyAdditionalDesc}
                                  <br />
                                </Fragment>
                              )}
                              {settings.boolGSTIN && (
                                <Fragment>GSTIN: {settings.strGSTIN}</Fragment>
                              )}
                              {settings.boolPAN && (
                                <Fragment>
                                  <br />
                                  PAN: {settings.strPAN}
                                </Fragment>
                              )}
                              {settings.boolAddress && (
                                <Fragment>
                                  <br />
                                  {settings.strAddress}
                                </Fragment>
                              )}
                              {settings.boolEmail || settings.boolWebsite ? (
                                <>
                                  <Fragment>
                                    <br />
                                    Email: {settings.strEmail}
                                  </Fragment>

                                  {settings.boolWebsite && (
                                    <Fragment>
                                      {' '}
                                      Website: {settings.strEmail}
                                    </Fragment>
                                  )}
                                </>
                              ) : (
                                ''
                              )}
                            </p>
                          </div>
                        </div>
                        <div style={{ borderTop: '1px solid' }}>
                          {_data.delivery_challan_invoice_number &&
                          data.shipToCustomerName ? (
                            <p
                              style={{
                                textAlign: 'left',
                                paddingLeft: '12px',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              <b>{data.billTitle}</b>
                              {<br />}
                              <b>{data.shipToCustomerName}</b>
                              {<br />}
                              {data.shipToCustomerAddress ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.shipToCustomerAddress}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.shipToCustomerPhoneNo ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Ph. no: {data.shipToCustomerPhoneNo}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.shipToCustomerGSTNo ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  GSTIN: {data.shipToCustomerGSTNo}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.shipToCustomerState ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.shipToCustomerState}
                                </p>
                              ) : (
                                ''
                              )}
                            </p>
                          ) : (
                            <p
                              style={{
                                textAlign: 'left',
                                paddingLeft: '12px',
                                flex: 1,
                                wordBreak: 'keep-all',
                                marginTop: '0px',
                                paddingTop: '0px',
                                paddingBottom: '0px',
                                marginBottom: '0px'
                              }}
                            >
                              <b>{data.billTitle}</b>
                              {<br />}
                              <b>{data.tname}</b>
                              {<br />}
                              {data.tadd ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.tadd}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.tphone ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Ph No: {data.tphone}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.tgstn ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  <b>{data.tgstn}</b>
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {_data.aadharNumber ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Aaadhar No: {_data.aadharNumber}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.tstate ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.tstate}
                                </p>
                              ) : (
                                ''
                              )}
                            </p>
                          )}
                        </div>
                      </div>
                      <div
                        style={{
                          width: '50%',
                          display: 'flex',
                          flexDirection: 'column'
                        }}
                      >
                        <div
                          style={{
                            width: '100%',
                            display: 'flex',
                            flexDirection: 'row',
                            borderBottom: '1px solid'
                          }}
                        >
                          <div
                            style={{
                              width: '50%',
                              borderRight: '1px solid',
                              paddingLeft: '3px'
                            }}
                          >
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all',
                                fontWeight: 600
                              }}
                            >
                              <b>
                                {data.invoiceNoTitle}
                                :
                                <br />
                                {data.invoiceNumber}
                              </b>
                            </p>
                          </div>
                          <div style={{ width: '50%', paddingLeft: '3px' }}>
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              {_data.purchase_order_invoice_number ? (
                                <b>PO Date: </b>
                              ) : (
                                <b>Date: </b>
                              )}
                              <br />
                              {dateFormatter(data.date) + ' '}{' '}
                              {TxnEnableFieldsMap.get(
                                'display_bill_transaction_time'
                              ) && getTimefromTimeStamp(data.updatedAt)}
                            </p>
                          </div>
                        </div>
                        {taxSettingsData?.exporterCodeNo && (
                          <div
                            style={{
                              width: '100%',
                              display: 'flex',
                              flexDirection: 'row',
                              borderBottom: '1px solid'
                            }}
                          >
                            <div
                              style={{
                                width: '50%',
                                borderRight: '1px solid',
                                paddingLeft: '3px'
                              }}
                            >
                              <p
                                style={{
                                  textAlign: 'left',
                                  flex: 1,
                                  wordBreak: 'keep-all',
                                  fontWeight: 600
                                }}
                              >
                                <b> EXP Ref: </b>{' '}
                                {taxSettingsData?.exporterCodeNo}
                              </p>
                            </div>
                            <div style={{ width: '50%', paddingLeft: '3px' }}>
                              <p
                                style={{
                                  textAlign: 'left',
                                  flex: 1,
                                  wordBreak: 'keep-all'
                                }}
                              >
                                <b> EXP Reg Date: </b>{' '}
                                {taxSettingsData?.exporterRegistrationDate}
                              </p>
                            </div>
                          </div>
                        )}
                        <div
                          style={{
                            width: '100%',
                            display: 'flex',
                            flexDirection: 'row',
                            borderBottom: '1px solid'
                          }}
                        >
                          <div
                            style={{
                              width: '50%',
                              borderRight: '1px solid',
                              paddingLeft: '3px'
                            }}
                          >
                            {data.salesReturnDate && (
                              <>
                                <p
                                  style={{
                                    textAlign: 'left',
                                    flex: 1,
                                    wordBreak: 'keep-all'
                                  }}
                                >
                                  <b>Return Date : </b>
                                  <br />
                                  {dateFormatter(data.salesReturnDate)}
                                </p>
                                <p
                                  style={{
                                    textAlign: 'left',
                                    flex: 1,
                                    wordBreak: 'keep-all'
                                  }}
                                >
                                  <b>Invoice No. :</b>
                                  {' ' + data.salesInvoiceNumber}
                                </p>
                              </>
                            )}
                            <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                              <b>Place Of Supply:</b>
                              <br />
                              {data.placeOfSupplyName ? (
                                data.placeOfSupplyName
                              ) : (
                                <br />
                              )}
                            </p>
                            {_data.rateList &&
                              _data.rateList.length > 0 &&
                              localStorage.getItem('isJewellery') ===
                                'true' && (
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  <b>Due Date:</b>
                                  <br />
                                  {data.duedate ? (
                                    dateFormatter(data.duedate)
                                  ) : (
                                    <br />
                                  )}
                                </p>
                              )}
                          </div>
                          <div style={{ width: '50%', paddingLeft: '3px' }}>
                            {_data.rateList &&
                            _data.rateList.length > 0 &&
                            localStorage.getItem('isJewellery') === 'true' ? (
                              getMetalNRates()
                            ) : (
                              <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                <b>Due Date:</b>
                                <br />
                                {data.duedate ? (
                                  dateFormatter(data.duedate)
                                ) : (
                                  <br />
                                )}
                              </p>
                            )}
                          </div>
                        </div>
                        {
                          <div
                            style={{
                              width: '100%',
                              display: 'flex',
                              flexDirection: 'row',
                              borderBottom: '1px solid'
                            }}
                          >
                            {true && data.exportCountryOrigin !== '' && (
                              <div
                                style={{
                                  width: '50%',
                                  borderRight: '1px solid',
                                  paddingLeft: '3px'
                                }}
                              >
                                <p
                                  style={{
                                    textAlign: 'left',
                                    flex: 1,
                                    wordBreak: 'keep-all'
                                  }}
                                >
                                  <b>Country of origin{' : '}</b>
                                  {data.exportCountryOrigin}
                                </p>
                              </div>
                            )}

                            {true && data.exportCountry !== '' && (
                              <div style={{ width: '50%', paddingLeft: '3px' }}>
                                <p
                                  style={{
                                    textAlign: 'left',
                                    flex: 1,
                                    wordBreak: 'keep-all'
                                  }}
                                >
                                  <b>Country of Final{' : '}</b>
                                  {data.exportCountry}
                                </p>
                              </div>
                            )}
                          </div>
                        }
                        <div
                          style={{
                            width: '100%',
                            display: 'flex',
                            flexDirection: 'row',
                            borderBottom: '1px solid'
                          }}
                        >
                          <div
                            style={{
                              width: '50%',
                              paddingLeft: '3px',
                              borderRight: '1px solid'
                            }}
                          >
                            <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                              {data.order_type === 'kot' ? (
                                <>
                                  <b>Table No.: </b>
                                  {data.tableNumber && data.tableNumber}
                                </>
                              ) : (
                                <>
                                  {data.eWayBillNo && data.eWayBillNo !== '' ? (
                                    <>
                                      <b>E-Way Bill No: </b>
                                      {data.eWayBillNo && data.eWayBillNo}
                                    </>
                                  ) : (
                                    <>
                                      <b> </b>{' '}
                                    </>
                                  )}
                                </>
                              )}
                            </p>
                            <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                              {data.order_type === 'kot' ? (
                                <>
                                  <b>Chairs Used : </b>
                                  {data.chairsUsedInString &&
                                    data.chairsUsedInString}
                                </>
                              ) : (
                                <>
                                  {TxnSettings &&
                                  TxnEnableFieldsMap.get(
                                    'display_transportation'
                                  ) ? (
                                    <>
                                      <b>Transport Mode: </b>
                                      {TxnSettings &&
                                        TxnEnableFieldsMap.get(
                                          'display_transportation'
                                        ) &&
                                        data.transportMode &&
                                        data.transportMode}
                                    </>
                                  ) : (
                                    <>
                                      <b> </b>{' '}
                                    </>
                                  )}
                                  {TxnSettings &&
                                  TxnEnableFieldsMap.get(
                                    'display_transportation'
                                  ) ? (
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      <b>Port of loading: </b>

                                      {TxnSettings &&
                                        TxnEnableFieldsMap.get(
                                          'display_transportation'
                                        ) &&
                                        data.portOfLoading && (
                                          <>{data.portOfLoading}</>
                                        )}
                                    </p>
                                  ) : (
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      <b> </b>
                                      <>{}</>
                                    </p>
                                  )}

                                  {TxnSettings &&
                                  TxnEnableFieldsMap.get(
                                    'display_transportation'
                                  ) ? (
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      <b>Port of Discharge: </b>

                                      {TxnSettings &&
                                        TxnEnableFieldsMap.get(
                                          'display_transportation'
                                        ) &&
                                        data.portOfDischarge && (
                                          <>{data.portOfDischarge}</>
                                        )}
                                    </p>
                                  ) : (
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      <b> </b>
                                      <>{}</>
                                    </p>
                                  )}

                                  {TxnSettings &&
                                  TxnEnableFieldsMap.get(
                                    'display_transportation'
                                  ) ? (
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      <b>Vessel Flight No: </b>

                                      {TxnSettings &&
                                        TxnEnableFieldsMap.get(
                                          'display_transportation'
                                        ) &&
                                        data.vesselFlightNo && (
                                          <>
                                            <br />
                                            {data.vesselFlightNo}
                                          </>
                                        )}
                                    </p>
                                  ) : (
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      <b> </b>
                                      <>
                                        <br />
                                        {}
                                      </>
                                    </p>
                                  )}
                                </>
                              )}
                            </p>
                            <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                              {data.order_type === 'kot' ? (
                                <>
                                  <b>Waiter Name : </b>
                                  {data.waiter_name && data.waiter_name}
                                </>
                              ) : (
                                <>
                                  {TxnSettings &&
                                  TxnEnableFieldsMap.get(
                                    'display_transportation'
                                  ) ? (
                                    <>
                                      <b>Vehicle No: </b>
                                      {data.vehicleNo && data.vehicleNo}{' '}
                                    </>
                                  ) : (
                                    <>
                                      <b> </b>{' '}
                                    </>
                                  )}
                                </>
                              )}
                            </p>
                            <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                              <>
                                {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) ? (
                                  <>
                                    <b>Transporter Id: </b>
                                    {data.transporterId &&
                                      data.transporterId}{' '}
                                  </>
                                ) : (
                                  <>
                                    <b> </b>{' '}
                                  </>
                                )}
                              </>
                            </p>
                          </div>
                          <div style={{ width: '50%', paddingLeft: '3px' }}>
                            <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                              {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_job_work_employee'
                                ) && (
                                  <p
                                    style={{
                                      textAlign: 'left',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>Job By{' : '}</b>
                                    <br />
                                    {_data.jobAssignedEmployeeName}
                                  </p>
                                )}
                              {TxnSettings &&
                                TxnEnableFieldsMap.get('display_salesman') && (
                                  <p
                                    style={{
                                      textAlign: 'left',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>Sales By{' : '}</b>
                                    <br />
                                    {_data.salesEmployeeName}
                                  </p>
                                )}
                              {_data.backToBackPurchaseNumber &&
                                _data.supervisorName !== '' && (
                                  <p
                                    style={{
                                      textAlign: 'left',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>Supervisor{' : '}</b>
                                    {_data.supervisorName}
                                  </p>
                                )}
                              {_data.backToBackPurchaseNumber &&
                                _data.materialsInChargeName !== '' && (
                                  <p
                                    style={{
                                      textAlign: 'left',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    <b>Materials In Charge{' : '}</b>
                                    {_data.materialsInChargeName}
                                  </p>
                                )}
                              {TxnSettings &&
                                TxnEnableFieldsMap.get('display_po') && (
                                  <p
                                    style={{
                                      textAlign: 'left',
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    {data.poNo && <b>PO Number: </b>}
                                    <br />
                                    {data.poNo && data.poNo}
                                  </p>
                                )}
                              {data.poDate && (
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  <b> PO Date: </b>
                                  {dateFormatter(data.poDate) + ' '}
                                </p>
                              )}
                              {isTemple && (
                                <div
                                  dangerouslySetInnerHTML={{
                                    __html: data.astrologyDetails + '<br />'
                                  }}
                                ></div>
                              )}
                              {isTemple && (
                                <div
                                  dangerouslySetInnerHTML={{
                                    __html:
                                      data.additionalTempleDetails + '<br />'
                                  }}
                                ></div>
                              )}
                            </p>
                          </div>
                        </div>
                        <div
                          style={{
                            width: '100%',
                            paddingLeft: '3px'
                          }}
                        >
                          {data.isSale && data.shipToCustomerName && (
                            <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                              <b>
                                {TxnSettings?.enableBuyerOtherThanConsignee
                                  ? 'Buyer (Other Consignee)'
                                  : 'Ship To'}
                              </b>
                              {<br />}
                              {data.shipToCustomerName
                                ? data.shipToCustomerName
                                : 'N/A'}
                              {<br />}
                              {data.shipToCustomerAddress && (
                                <p>
                                  {data.shipToCustomerAddress}
                                  {<br />}
                                </p>
                              )}
                              {data.shipToCustomerPhoneNo && (
                                <p>
                                  Ph No: {_data.shipToCustomerPhoneNo}
                                  {<br />}
                                </p>
                              )}
                              {data.shipToCustomerGSTNo && (
                                <p>
                                  <b>GSTIN: {data.shipToCustomerGSTNo}</b>
                                  {<br />}
                                </p>
                              )}
                              {data.shipToCustomerState ? (
                                <p>
                                  {data.shipToCustomerState}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                            </p>
                          )}
                        </div>
                      </div>
                    </div>

                    {getHeaderRow()}
                    <div
                      style={{ border: '1px solid', minHeight: minRowHeight }}
                    >
                      {_data.item_list &&
                        _data.item_list.length > 0 &&
                        getInvoiceRows()}
                    </div>

                    {!isPackagePreivew ? (
                      <div>
                        {data.isSale ? (
                          <>
                            {TxnEnableFieldsMap.get(
                              'display_product_total_amount'
                            ) && (
                              <div
                                style={{
                                  width: '100%',
                                  display: 'flex',
                                  flexDirection: 'row',
                                  border: '1px solid',
                                  paddingRight: '3px',
                                  breakInside: 'avoid'
                                }}
                              >
                                <div
                                  style={{
                                    width: '50%',
                                    textAlign: 'right',
                                    borderRight: '1px solid',
                                    paddingRight: '3px'
                                  }}
                                >
                                  <b>Taxable Amount</b>
                                </div>
                                <div
                                  style={{ width: '50%', textAlign: 'right' }}
                                >
                                  {data.exportConversionRate < 1 ? (
                                    <b>
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        data.totalTaxableAmount
                                      )}
                                    </b>
                                  ) : (
                                    <b>
                                      {getFloatWithTwoDecimal(
                                        data.totalTaxableAmount /
                                          data.exportConversionRate
                                      )}
                                    </b>
                                  )}
                                </div>
                              </div>
                            )}
                          </>
                        ) : (
                          <div
                            style={{
                              width: '100%',
                              display: 'flex',
                              flexDirection: 'row',
                              border: '1px solid',
                              paddingRight: '3px',
                              breakInside: 'avoid'
                            }}
                          >
                            <div
                              style={{
                                width: '50%',
                                textAlign: 'right',
                                borderRight: '1px solid',
                                paddingRight: '3px'
                              }}
                            >
                              <b>Taxable Amount</b>
                            </div>
                            <div style={{ width: '50%', textAlign: 'right' }}>
                              {data.exportConversionRate < 1 ? (
                                <b>
                                  â‚¹{' '}
                                  {getFloatWithTwoDecimal(
                                    data.totalTaxableAmount
                                  )}
                                </b>
                              ) : (
                                <b>
                                  {getFloatWithTwoDecimal(
                                    data.totalTaxableAmount /
                                      data.exportConversionRate
                                  )}
                                </b>
                              )}
                            </div>
                          </div>
                        )}

                        <div
                          style={{
                            border: '1px solid',
                            paddingRight: '3px',
                            breakInside: 'avoid'
                          }}
                        >
                          <div
                            style={{
                              width: '100%',
                              display: 'flex',
                              flexDirection: 'row'
                            }}
                          >
                            <div
                              style={{
                                width: '50%',
                                textAlign: 'right',
                                borderRight: '1px solid',
                                paddingRight: '3px'
                              }}
                            >
                              <p>Sub Total</p>
                            </div>
                            <div style={{ width: '50%', textAlign: 'right' }}>
                              {data.exportConversionRate ? (
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  {data.exportCurrency}{' '}
                                  {(
                                    getFloatWithTwoDecimal(
                                      data.totalTaxableAmount +
                                        data.subTotalDisc
                                    ) / data.exportConversionRate
                                  )?.toFixed(2)}
                                  {/* {getFloatWithTwoDecimal(data.subTotal)} */}
                                </p>
                              ) : (
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  â‚¹{' '}
                                  {/* {getFloatWithTwoDecimal(
                                    data.totalTaxableAmount + data.subTotalDisc
                                  )} */}
                                  {getFloatWithTwoDecimal(data.subTotal)}
                                </p>
                              )}
                            </div>
                          </div>

                          {_data.exportConversionRate === 0 &&
                          TxnEnableFieldsMap.get(
                            'display_bill_packing_charge'
                          ) &&
                          _data.packing_charge ? (
                            <div
                              style={{
                                width: '100%',
                                display: 'flex',
                                flexDirection: 'row'
                              }}
                            >
                              <div
                                style={{
                                  width: '50%',
                                  textAlign: 'right',
                                  borderRight: '1px solid',
                                  paddingRight: '3px'
                                }}
                              >
                                <div>
                                  <p>Package Charge</p>
                                </div>
                              </div>
                              <div style={{ width: '50%', textAlign: 'right' }}>
                                <div>
                                  {' '}
                                  <p
                                    style={{
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    â‚¹{' '}
                                    {getFloatWithTwoDecimal(
                                      _data.packing_charge
                                        ? _data.packing_charge
                                        : 0
                                    )}
                                  </p>
                                </div>
                              </div>
                            </div>
                          ) : (
                            ' '
                          )}

                          {_data.exportConversionRate > 0 &&
                          TxnEnableFieldsMap.get(
                            'display_packing_other_currency'
                          ) &&
                          _data.packingChargeOtherCurrency ? (
                            <div
                              style={{
                                width: '100%',
                                display: 'flex',
                                flexDirection: 'row'
                              }}
                            >
                              <div
                                style={{
                                  width: '50%',
                                  textAlign: 'right',
                                  borderRight: '1px solid',
                                  paddingRight: '3px'
                                }}
                              >
                                <div>
                                  {_data.packingChargeOtherCurrency && (
                                    <p>Package Charge</p>
                                  )}
                                </div>
                              </div>
                              <div style={{ width: '50%', textAlign: 'right' }}>
                                <div>
                                  {' '}
                                  {_data.packingChargeOtherCurrency && (
                                    <p>
                                      {data.exportCurrency}{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.packingChargeOtherCurrency
                                          ? _data.packingChargeOtherCurrency
                                          : 0
                                      )}
                                    </p>
                                  )}
                                </div>
                              </div>
                            </div>
                          ) : (
                            ' '
                          )}

                          {_data.exportConversionRate === 0 &&
                          TxnEnableFieldsMap.get(
                            'display_bill_shipping_charge'
                          ) &&
                          !_data.backToBackPurchaseNumber &&
                          _data.shipping_charge ? (
                            <div
                              style={{
                                width: '100%',
                                display: 'flex',
                                flexDirection: 'row'
                              }}
                            >
                              <div
                                style={{
                                  width: '50%',
                                  textAlign: 'right',
                                  borderRight: '1px solid',
                                  paddingRight: '3px'
                                }}
                              >
                                <div>
                                  {' '}
                                  <p>Shipping Charge</p>
                                </div>
                              </div>
                              <div style={{ width: '50%', textAlign: 'right' }}>
                                <div>
                                  <p
                                    style={{
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    â‚¹{' '}
                                    {getFloatWithTwoDecimal(
                                      _data.shipping_charge
                                        ? _data.shipping_charge
                                        : 0
                                    )}
                                  </p>
                                </div>
                              </div>
                            </div>
                          ) : (
                            ' '
                          )}

                          {_data.exportConversionRate > 0 &&
                          TxnEnableFieldsMap.get(
                            'display_shipping_other_currency'
                          ) &&
                          !_data.backToBackPurchaseNumber &&
                          _data.shippingChargeOtherCurrency ? (
                            <div
                              style={{
                                width: '100%',
                                display: 'flex',
                                flexDirection: 'row'
                              }}
                            >
                              <div
                                style={{
                                  width: '50%',
                                  textAlign: 'right',
                                  borderRight: '1px solid',
                                  paddingRight: '3px'
                                }}
                              >
                                <div>
                                  {' '}
                                  {_data.shippingChargeOtherCurrency && (
                                    <p>Shipping Charge</p>
                                  )}
                                </div>
                              </div>
                              <div style={{ width: '50%', textAlign: 'right' }}>
                                <div>
                                  {_data.shippingChargeOtherCurrency && (
                                    <p>
                                      {data.exportCurrency}{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.shippingChargeOtherCurrency
                                          ? _data.shippingChargeOtherCurrency
                                          : 0
                                      )}
                                    </p>
                                  )}
                                </div>
                              </div>
                            </div>
                          ) : (
                            ' '
                          )}

                          <div
                            style={{
                              width: '100%',
                              display: 'flex',
                              flexDirection: 'row'
                            }}
                          >
                            <div
                              style={{
                                width: '50%',
                                textAlign: 'right',
                                borderRight: '1px solid',
                                paddingRight: '3px'
                              }}
                            >
                              <>
                                {TxnEnableFieldsMap.get(
                                  'display_bill_shipping_charge'
                                ) &&
                                  _data.backToBackPurchaseNumber && (
                                    <p>Freight Charge</p>
                                  )}
                              </>
                            </div>
                            <div style={{ width: '50%', textAlign: 'right' }}>
                              <>
                                {TxnEnableFieldsMap.get(
                                  'display_bill_shipping_charge'
                                ) &&
                                  _data.backToBackPurchaseNumber && (
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all'
                                      }}
                                    >
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.freightCharge
                                          ? _data.freightCharge
                                          : 0
                                      )}
                                    </p>
                                  )}
                              </>
                            </div>
                          </div>

                          {_data.exportConversionRate === 0 &&
                          TxnEnableFieldsMap.get('display_bill_insurance') &&
                          _data.insurance &&
                          _data.insurance.amount ? (
                            <div
                              style={{
                                width: '100%',
                                display: 'flex',
                                flexDirection: 'row'
                              }}
                            >
                              <div
                                style={{
                                  width: '50%',
                                  textAlign: 'right',
                                  borderRight: '1px solid',
                                  paddingRight: '3px'
                                }}
                              >
                                <p>Insurance</p>
                              </div>
                              <div style={{ width: '50%', textAlign: 'right' }}>
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  â‚¹{' '}
                                  {getFloatWithTwoDecimal(
                                    _data.insurance && _data.insurance.amount
                                      ? _data.insurance.amount
                                      : 0
                                  )}
                                </p>
                              </div>
                            </div>
                          ) : (
                            ' '
                          )}

                          {_data.exportConversionRate > 0 &&
                          TxnEnableFieldsMap.get(
                            'display_insurance_other_currency'
                          ) &&
                          _data.insurance &&
                          _data.insurance.amountOtherCurrency ? (
                            <div
                              style={{
                                width: '100%',
                                display: 'flex',
                                flexDirection: 'row'
                              }}
                            >
                              <div
                                style={{
                                  width: '50%',
                                  textAlign: 'right',
                                  borderRight: '1px solid',
                                  paddingRight: '3px'
                                }}
                              >
                                <p>Insurance</p>
                              </div>
                              <div style={{ width: '50%', textAlign: 'right' }}>
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  {data.exportCurrency}{' '}
                                  {getFloatWithTwoDecimal(
                                    _data.insurance &&
                                      _data.insurance.amountOtherCurrency
                                      ? _data.insurance.amountOtherCurrency
                                      : 0
                                  )}
                                </p>
                              </div>
                            </div>
                          ) : (
                            ' '
                          )}

                          {data.totalDiscount > 0 && (
                            <div
                              style={{
                                width: '100%',
                                display: 'flex',
                                flexDirection: 'row'
                              }}
                            >
                              <div
                                style={{
                                  width: '50%',
                                  textAlign: 'right',
                                  borderRight: '1px solid',
                                  paddingRight: '3px'
                                }}
                              >
                                {/* {data.totalDiscount === 0 ? (
                              ''
                            ) : ( */}
                                <>
                                  {((_data.invoice_number &&
                                    TxnEnableFieldsMap.get(
                                      'display_bill_discount'
                                    )) ||
                                    !_data.invoice_number) && (
                                    <p>Total Discount</p>
                                  )}
                                </>
                                {/* )} */}
                              </div>
                              <div style={{ width: '50%', textAlign: 'right' }}>
                                {/* {data.totalDiscount === 0 ? (
                              ''
                            ) : ( */}
                                <>
                                  {((_data.invoice_number &&
                                    TxnEnableFieldsMap.get(
                                      'display_bill_discount'
                                    )) ||
                                    !_data.invoice_number) && (
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        data.totalDiscount
                                      )}
                                    </p>
                                  )}
                                </>
                                {/* )} */}
                              </div>
                            </div>
                          )}

                          {/* TCS Amount */}
                          {data.tcsAmount > 0 && (
                            <>
                              <div
                                style={{
                                  width: '100%',
                                  display: 'flex',
                                  flexDirection: 'row'
                                }}
                              >
                                <div
                                  style={{
                                    width: '50%',
                                    textAlign: 'right',
                                    borderRight: '1px solid',
                                    paddingRight: '3px'
                                  }}
                                >
                                  <p>
                                    TCS@{data.tcsRate}% {data.tcsCode}
                                  </p>
                                </div>
                                <div
                                  style={{ width: '50%', textAlign: 'right' }}
                                >
                                  <p
                                    style={{
                                      flex: 1,
                                      wordBreak: 'keep-all',
                                      fontWeight: 600
                                    }}
                                  >
                                    â‚¹ {getFloatWithTwoDecimal(data.tcsAmount)}
                                  </p>
                                </div>
                              </div>
                            </>
                          )}

                          <div
                            style={{
                              width: '100%',
                              display: 'flex',
                              flexDirection: 'row'
                            }}
                          >
                            <div
                              style={{
                                width: '50%',
                                textAlign: 'right',
                                borderRight: '1px solid',
                                paddingRight: '3px'
                              }}
                            >
                              {TxnEnableFieldsMap.get('display_product_cess') &&
                                data.totalCess > 0 && <p>Total Cess</p>}
                            </div>
                            <div style={{ width: '50%', textAlign: 'right' }}>
                              <>
                                {TxnEnableFieldsMap.get(
                                  'display_product_cess'
                                ) &&
                                  data.totalCess > 0 && (
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all',
                                        fontWeight: 600
                                      }}
                                    >
                                      â‚¹ {getFloatWithTwoDecimal(data.totalCess)}
                                    </p>
                                  )}
                              </>
                            </div>
                          </div>

                          <div
                            style={{
                              width: '100%',
                              display: 'flex',
                              flexDirection: 'row'
                            }}
                          >
                            <div
                              style={{
                                width: '50%',
                                textAlign: 'right',
                                borderRight: '1px solid',
                                paddingRight: '3px'
                              }}
                            >
                              {String(_data.is_roundoff).toLowerCase() ===
                                'true' && (
                                <p style={{ fontWeight: 600 }}>Round off</p>
                              )}
                            </div>
                            <div style={{ width: '50%', textAlign: 'right' }}>
                              {String(_data.is_roundoff).toLowerCase() ===
                                'true' && (
                                <p
                                  style={{
                                    flex: 1,
                                    wordBreak: 'keep-all',
                                    fontWeight: 600
                                  }}
                                >
                                  {data.exportConversionRate ? (
                                    <span>
                                      {data.exportCurrency}{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.round_amount /
                                          data.exportConversionRate
                                      )}
                                    </span>
                                  ) : (
                                    <span>
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.round_amount
                                      )}
                                    </span>
                                  )}
                                </p>
                              )}
                            </div>
                          </div>
                        </div>

                        {((settings.boolTaxDetails && gstMap.size > 0) ||
                          _data.estimateType === 'open' ||
                          _data.estimateType === 'close') && (
                          <div
                            style={{ border: '1px solid', paddingRight: '3px' }}
                          >
                            {settings.boolTaxDetails && (
                              <>
                                {Array.from(gstMap.keys()).map((key) => {
                                  return (
                                    <Grid
                                      style={{
                                        width: '100%',
                                        display: 'flex',
                                        flexDirection: 'row',
                                        breakInside: 'avoid'
                                      }}
                                    >
                                      <Grid
                                        style={{
                                          width: '50%',
                                          textAlign: 'right',
                                          borderRight: '1px solid',
                                          paddingRight: '3px'
                                        }}
                                      >
                                        <p>{key}</p>
                                      </Grid>
                                      <Grid
                                        style={{
                                          width: '50%',
                                          textAlign: 'right'
                                        }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(
                                          gstMap.get(key)
                                        )}
                                      </Grid>
                                    </Grid>
                                  );
                                })}
                              </>
                            )}

                            {_data.estimateType === 'open' ||
                            _data.estimateType === 'close' ? (
                              ''
                            ) : (
                              <>
                                {data.receivedAmount > 0 && (
                                  <div
                                    style={{
                                      width: '100%',
                                      display: 'flex',
                                      flexDirection: 'row',
                                      breakInside: 'avoid'
                                    }}
                                  >
                                    <div
                                      style={{
                                        width: '50%',
                                        textAlign: 'right',
                                        borderRight: '1px solid',
                                        paddingRight: '3px'
                                      }}
                                    >
                                      <p>{data.paidReceivedTitle}</p>
                                    </div>
                                    <div
                                      style={{
                                        width: '50%',
                                        textAlign: 'right'
                                      }}
                                    >
                                      <p
                                        style={{
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(
                                          data.receivedAmount
                                        )}
                                      </p>
                                    </div>
                                  </div>
                                )}

                                {_data.exportConversionRate === 0 &&
                                  data.balanceAmount > 0 && (
                                    <Grid
                                      style={{
                                        width: '100%',
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <Grid
                                        style={{
                                          width: '50%',
                                          textAlign: 'right',
                                          borderRight: '1px solid',
                                          paddingRight: '3px'
                                        }}
                                      >
                                        <p>Balance</p>
                                      </Grid>
                                      <Grid
                                        style={{
                                          width: '50%',
                                          textAlign: 'right'
                                        }}
                                      >
                                        <p
                                          style={{
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                        >
                                          â‚¹{' '}
                                          {getFloatWithTwoDecimal(
                                            data.balanceAmount
                                          )}
                                        </p>
                                      </Grid>
                                    </Grid>
                                  )}
                              </>
                            )}
                          </div>
                        )}

                        {/****************Theme 3 - Footer *****************/}
                        <div
                          style={{
                            breakInside: 'avoid',
                            border: '1px solid',
                            display: 'flex',
                            flexDirection: 'row',
                            fontWeight: 600
                          }}
                        >
                          <div
                            style={{
                              borderRight: '1px solid ',
                              textAlign: 'center',
                              width: '10%'
                            }}
                          ></div>
                          <div
                            style={{
                              textAlign: 'center',
                              borderRight: '1px solid ',
                              paddingRight: '3px',
                              width: '30%'
                            }}
                          >
                            Total
                          </div>
                          {/******* HSN ********/}
                          {TxnEnableFieldsMap.get('display_hsn') && (
                            <div
                              style={{
                                borderRight: '1px solid ',
                                width: '16%',
                                textAlign: 'right',
                                paddingRight: '3px'
                              }}
                            ></div>
                          )}
                          {/********* Serial/IMEI No. *********/}
                          {TxnSettings &&
                            TxnEnableFieldsMap.get(
                              'display_product_serial_imei'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              ></div>
                            )}
                          {/* Batch Number */}
                          {TxnEnableFieldsMap.get(
                            'display_product_batch_number'
                          ) && (
                            <div
                              style={{
                                borderRight: '1px solid ',
                                width: '16%',
                                textAlign: 'right',
                                paddingRight: '3px'
                              }}
                            ></div>
                          )}
                          {/* Barcode */}
                          {TxnEnableFieldsMap.get(
                            'display_product_barcode'
                          ) && (
                            <div
                              style={{
                                borderRight: '1px solid ',
                                width: '16%',
                                textAlign: 'right',
                                paddingRight: '3px'
                              }}
                            ></div>
                          )}
                          {/* Brand */}
                          {TxnEnableFieldsMap.get('display_product_brand') && (
                            <div
                              style={{
                                borderRight: '1px solid ',
                                width: '16%',
                                textAlign: 'right',
                                paddingRight: '3px'
                              }}
                            ></div>
                          )}
                          {/* Model No */}
                          {TxnEnableFieldsMap.get(
                            'display_product_model_no'
                          ) && (
                            <div
                              style={{
                                borderRight: '1px solid ',
                                width: '16%',
                                textAlign: 'right',
                                paddingRight: '3px'
                              }}
                            ></div>
                          )}
                          {/* Manufacturing Date */}
                          {TxnEnableFieldsMap.get(
                            'display_product_manufacturing_date'
                          ) && (
                            <div
                              style={{
                                borderRight: '1px solid ',
                                width: '16%',
                                textAlign: 'right',
                                paddingRight: '3px'
                              }}
                            ></div>
                          )}
                          {/* Expiry Date */}
                          {TxnEnableFieldsMap.get(
                            'display_product_expiry_date'
                          ) && (
                            <div
                              style={{
                                borderRight: '1px solid ',
                                width: '16%',
                                textAlign: 'right',
                                paddingRight: '3px'
                              }}
                            ></div>
                          )}
                          {TxnEnableFieldsMap.get(
                            'display_product_quantity'
                          ) && (
                            <div
                              style={{
                                borderRight: '1px solid ',
                                paddingRight: '3px',
                                width: '15%',
                                textAlign: 'right'
                              }}
                            >
                              {totalqty}
                            </div>
                          )}
                          {/* Total Free Quantity */}
                          {TxnEnableFieldsMap.get(
                            'display_product_free_quantity'
                          ) && (
                            <div
                              style={{
                                borderRight: '1px solid',
                                paddingRight: '3px',
                                width: '15%',
                                textAlign: 'right'
                              }}
                            >
                              {totalfreeqty}
                            </div>
                          )}
                          {/* Unit */}
                          {TxnEnableFieldsMap.get('display_product_unit') && (
                            <div
                              style={{
                                borderRight: '1px solid ',
                                width: '15%',
                                textAlign: 'right'
                              }}
                            ></div>
                          )}
                          {TxnEnableFieldsMap.get('display_product_mrp') && (
                            <div
                              style={{
                                borderRight: '1px solid ',
                                paddingRight: '3px',
                                width: '15%',
                                textAlign: 'right'
                              }}
                            ></div>
                          )}
                          {_data.exportConversionRate === 0 &&
                            TxnEnableFieldsMap.get('display_product_price') && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  width: '15%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}
                          {_data.exportConversionRate > 0 &&
                            TxnEnableFieldsMap.get(
                              'display_product_price_other_currency'
                            ) && (
                              <p
                                style={{
                                  borderRight: '1px solid',

                                  width: '15%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></p>
                            )}
                          {TxnEnableFieldsMap.get(
                            'display_product_price_per_gram'
                          ) && (
                            <div
                              style={{
                                borderRight: '1px solid ',
                                width: '30%',
                                textAlign: 'right',
                                paddingRight: '3px'
                              }}
                            ></div>
                          )}
                          {TxnEnableFieldsMap.get(
                            'display_product_gross_weight'
                          ) && (
                            <div
                              style={{
                                borderRight: '1px solid ',
                                paddingRight: '3px',
                                width: '15%',
                                textAlign: 'right'
                              }}
                            >
                              {parseFloat(totalGrossWt).toFixed(3)}
                            </div>
                          )}
                          {TxnEnableFieldsMap.get(
                            'display_product_stone_weight'
                          ) && (
                            <div
                              style={{
                                borderRight: '1px solid ',
                                paddingRight: '3px',
                                width: '15%',
                                textAlign: 'right'
                              }}
                            >
                              {parseFloat(totalStoneWt).toFixed(3)}
                            </div>
                          )}
                          {TxnEnableFieldsMap.get(
                            'display_product_net_weight'
                          ) && (
                            <div
                              style={{
                                borderRight: '1px solid ',
                                paddingRight: '3px',
                                width: '15%',
                                textAlign: 'right'
                              }}
                            >
                              {parseFloat(totalNetWt).toFixed(3)}
                            </div>
                          )}
                          {TxnEnableFieldsMap.get(
                            'display_product_wastage'
                          ) && (
                            <div
                              style={{
                                borderRight: '1px solid ',
                                paddingRight: '3px',
                                width: '15%',
                                textAlign: 'right'
                              }}
                            ></div>
                          )}
                          {TxnEnableFieldsMap.get(
                            'display_product_making_charge'
                          ) && (
                            <div
                              style={{
                                borderRight: '1px solid ',
                                paddingRight: '3px',
                                width: '15%',
                                textAlign: 'right'
                              }}
                            ></div>
                          )}
                          {TxnEnableFieldsMap.get(
                            'display_product_making_charge_per_gram'
                          ) && (
                            <div
                              style={{
                                borderRight: '1px solid ',
                                paddingRight: '3px',
                                width: '15%',
                                textAlign: 'right'
                              }}
                            ></div>
                          )}
                          {TxnEnableFieldsMap.get(
                            'display_product_stone_charge'
                          ) && (
                            <div
                              style={{
                                borderRight: '1px solid ',
                                paddingRight: '3px',
                                width: '15%',
                                textAlign: 'right'
                              }}
                            ></div>
                          )}
                          {TxnEnableFieldsMap.get('display_product_purity') && (
                            <div
                              style={{
                                borderRight: '1px solid ',
                                paddingRight: '3px',
                                width: '15%',
                                textAlign: 'right'
                              }}
                            ></div>
                          )}
                          {/* Copper */}
                          {TxnEnableFieldsMap.get('display_product_copper') && (
                            <div
                              style={{
                                borderRight: '1px solid',
                                width: '15%',
                                textAlign: 'right'
                              }}
                            ></div>
                          )}
                          {TxnEnableFieldsMap.get(
                            'display_product_discount'
                          ) && (
                            <div
                              style={{
                                borderRight: '1px solid ',
                                paddingRight: '3px',
                                width: '15%',
                                textAlign: 'right'
                              }}
                            >
                              {data.exportConversionRate > 0 ? (
                                <span>
                                  {getFloatWithTwoDecimal(
                                    data.subTotalDisc /
                                      data.exportConversionRate
                                  )}
                                </span>
                              ) : (
                                <span>
                                  â‚¹ {getFloatWithTwoDecimal(data.subTotalDisc)}
                                </span>
                              )}
                            </div>
                          )}
                          {_data.exportConversionRate === 0 &&
                            TxnEnableFieldsMap.get(
                              'display_product_gst_percentage'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              ></div>
                            )}
                          {_data.exportConversionRate === 0 &&
                            TxnEnableFieldsMap.get('display_product_gst') && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              >
                                â‚¹ {getFloatWithTwoDecimal(totaltax_gst)}
                              </div>
                            )}
                          {data.isSale ? (
                            <>
                              {_data.exportConversionRate === 0 &&
                                TxnEnableFieldsMap.get(
                                  'display_product_total_amount'
                                ) && (
                                  <div
                                    style={{
                                      width: '25%',
                                      textAlign: 'right',
                                      paddingRight: '3px'
                                    }}
                                  >
                                    {getFloatWithTwoDecimal(data.totalAmount)}
                                  </div>
                                )}
                              {_data.exportConversionRate > 0 &&
                                TxnEnableFieldsMap.get(
                                  'display_product_total_amount_other'
                                ) && (
                                  <div
                                    style={{
                                      paddingRight: '3px',
                                      width: '25%',
                                      textAlign: 'right',
                                      borderLeft: '1px solid '
                                    }}
                                  >
                                    {data.exportCurrency}{' '}
                                    {getFloatWithTwoDecimal(data.totalAmount)}
                                  </div>
                                )}
                            </>
                          ) : (
                            <div
                              style={{
                                width: '25%',
                                textAlign: 'right',
                                paddingRight: '3px'
                              }}
                            >
                              â‚¹ {getFloatWithTwoDecimal(data.totalAmount)}
                            </div>
                          )}
                        </div>

                        {settings.boolPaymentMode &&
                          data.paymentType !== '' && (
                            <>
                              <div
                                style={{
                                  display: 'flex',
                                  flexDirection: 'row',
                                  border: '1px solid',
                                  breakInside: 'avoid'
                                }}
                              >
                                <div
                                  style={{
                                    width: '80%',
                                    textAlign: 'right',
                                    paddingRight: '3px',
                                    borderRight: '1px solid '
                                  }}
                                >
                                  <p>Payment Type</p>
                                </div>
                                <div
                                  style={{
                                    width: '20%',
                                    textAlign: 'right',
                                    paddingRight: '3px'
                                  }}
                                >
                                  <p
                                    style={{ textTransform: 'capitalize' }}
                                    dangerouslySetInnerHTML={{
                                      __html: data.paymentType
                                    }}
                                  ></p>
                                </div>
                              </div>
                            </>
                          )}

                        {data.tdsAmount > 0 && (
                          <>
                            <div
                              style={{
                                display: 'flex',
                                flexDirection: 'row',
                                border: '1px solid',
                                breakInside: 'avoid'
                              }}
                            >
                              <div
                                style={{
                                  width: '80%',
                                  textAlign: 'right',
                                  paddingRight: '3px',
                                  borderRight: '1px solid '
                                }}
                              >
                                <p>
                                  TDS@{data.tdsRate}% {data.tdsCode}
                                </p>
                              </div>
                              <div
                                style={{
                                  width: '20%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              >
                                <p style={{ textTransform: 'capitalize' }}>
                                  â‚¹ {getFloatWithTwoDecimal(data.tdsAmount)}
                                </p>
                              </div>
                            </div>
                          </>
                        )}

                        <div
                          style={{
                            border: '1px solid',
                            breakInside: 'avoid',
                            textAlign: 'right'
                          }}
                        >
                          <p style={{ paddingRight: '3px', fontWeight: 600 }}>
                            Amount Chargeable (in words) :{data.strTotal}
                          </p>
                        </div>

                        <div
                          style={{
                            border: '1px solid',
                            textAlign: 'right',
                            breakInside: 'avoid'
                          }}
                        >
                          <p
                            style={{
                              paddingRight: '3px',
                              fontSize: '12px',
                              fontWeight: 600
                            }}
                          >
                            Amount Payable:{' '}
                            {data.exportConversionRate > 0
                              ? data.exportCurrency
                              : 'â‚¹'}{' '}
                            {getFloatWithTwoDecimal(data.totalAmount)}
                          </p>
                        </div>

                        {/****** Outstanding Payble / Receivable *****/}
                        {settings.boolPreviousBalance &&
                          settings.boolPreviousBalance &&
                          outStandingType &&
                          outStandingBalance !== 0 && (
                            <div
                              style={{
                                border: '1px solid',
                                textAlign: 'right',
                                breakInside: 'avoid'
                              }}
                            >
                              <p
                                style={{ paddingRight: '3px', fontWeight: 600 }}
                              >
                                Outstanding-{outStandingType}: â‚¹{' '}
                                {getFloatWithTwoDecimal(outStandingBalance)}
                              </p>
                            </div>
                          )}

                        <div
                          style={{
                            border: '1px solid',
                            display: 'flex',
                            flexDirection: 'row',
                            breakInside: 'avoid'
                          }}
                        >
                          <div style={{ width: '50%', paddingLeft: '12px' }}>
                            {(TxnEnableFieldsMap.get('display_bill_notes') ||
                              TxnEnableFieldsMap.get(
                                'display_total_weight'
                              )) && (
                              <>
                                <p
                                  style={{
                                    fontWeight: 600,
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Notes
                                </p>
                                <Fragment>
                                  {data.notes && (
                                    <p
                                      style={{
                                        marginTop: '0px',
                                        paddingTop: '0px',
                                        paddingBottom: '0px',
                                        marginBottom: '0px'
                                      }}
                                    >
                                      {data.notes}
                                    </p>
                                  )}
                                  {TxnEnableFieldsMap.get(
                                    'display_total_weight'
                                  ) && (
                                    <>
                                      {_data.weightIn && _data.weightIn > 0 ? (
                                        <div
                                          style={{
                                            textAlign: 'right',
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <p
                                            style={{
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            Weight In
                                          </p>
                                          <p
                                            style={{
                                              flex: 1,
                                              wordBreak: 'keep-all',
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            {getFloatWithTwoDecimal(
                                              _data.weightIn
                                                ? _data.weightIn
                                                : 0
                                            )}
                                            g
                                          </p>
                                        </div>
                                      ) : null}
                                      {_data.weightOut &&
                                      _data.weightOut > 0 ? (
                                        <div
                                          style={{
                                            textAlign: 'right',
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <p
                                            style={{
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            Weight Out
                                          </p>
                                          <p
                                            style={{
                                              flex: 1,
                                              wordBreak: 'keep-all',
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            {getFloatWithTwoDecimal(
                                              _data.weightOut
                                                ? _data.weightOut
                                                : 0
                                            )}
                                            g
                                          </p>
                                        </div>
                                      ) : null}
                                      {_data.wastage && _data.wastage > 0 ? (
                                        <div
                                          style={{
                                            textAlign: 'right',
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <p
                                            style={{
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            Wastage
                                          </p>
                                          <p
                                            style={{
                                              flex: 1,
                                              wordBreak: 'keep-all',
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            {getFloatWithTwoDecimal(
                                              _data.wastage ? _data.wastage : 0
                                            )}
                                            g
                                          </p>
                                        </div>
                                      ) : null}
                                    </>
                                  )}
                                </Fragment>
                              </>
                            )}

                            {!_data.date && settings.boolDesc && (
                              <Fragment>
                                <p
                                  style={{
                                    fontWeight: 600,
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Description
                                </p>
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {settings.strDesc}
                                </p>
                              </Fragment>
                            )}

                            {settings.boolBankDetail && (
                              <div>
                                {settings.boolBankDetailsOnCreditSaleOnly &&
                                data.balanceAmount > 0 ? (
                                  <Fragment>
                                    <div>
                                      <p
                                        style={{
                                          fontWeight: 600,
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        BANK DETAILS
                                      </p>
                                      <div
                                        style={{
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <div style={{ width: '40%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            A/C Holder's Name
                                          </p>
                                        </div>
                                        <div style={{ width: '60%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            : {settings.bankAccountHolderName}
                                          </p>
                                        </div>
                                      </div>
                                      <div
                                        style={{
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <div style={{ width: '40%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            BANK NAME
                                          </p>
                                        </div>
                                        <div style={{ width: '60%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            : {settings.bankName}
                                          </p>
                                        </div>
                                      </div>
                                      <div
                                        style={{
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <div style={{ width: '40%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            A/C NO.
                                          </p>
                                        </div>
                                        <div style={{ width: '60%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            : {settings.bankAccountNumber}
                                          </p>
                                        </div>
                                      </div>
                                      <div
                                        style={{
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <div style={{ width: '40%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            IFSC Code
                                          </p>
                                        </div>
                                        <div style={{ width: '60%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            : {settings.bankIfscCode}
                                          </p>
                                        </div>
                                      </div>
                                    </div>
                                  </Fragment>
                                ) : (
                                  <div>
                                    {!settings.boolBankDetailsOnCreditSaleOnly && (
                                      <Fragment>
                                        <div>
                                          <p
                                            style={{
                                              fontWeight: 600,
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            BANK DETAILS
                                          </p>
                                          <div
                                            style={{
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <div style={{ width: '40%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                A/C Holder's Name
                                              </p>
                                            </div>
                                            <div style={{ width: '60%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                :{' '}
                                                {settings.bankAccountHolderName}
                                              </p>
                                            </div>
                                          </div>
                                          <div
                                            style={{
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <div style={{ width: '40%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                BANK NAME
                                              </p>
                                            </div>
                                            <div style={{ width: '60%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                : {settings.bankName}
                                              </p>
                                            </div>
                                          </div>
                                          <div
                                            style={{
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <div style={{ width: '40%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                A/C NO.
                                              </p>
                                            </div>
                                            <div style={{ width: '60%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                : {settings.bankAccountNumber}
                                              </p>
                                            </div>
                                          </div>
                                          <div
                                            style={{
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <div style={{ width: '40%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                IFSC Code
                                              </p>
                                            </div>
                                            <div style={{ width: '60%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                : {settings.bankIfscCode}
                                              </p>
                                            </div>
                                          </div>
                                        </div>
                                      </Fragment>
                                    )}
                                  </div>
                                )}
                              </div>
                            )}
                          </div>
                          <div
                            style={{
                              width: '20%',
                              borderRight: '1px solid',
                              textAlign: 'center'
                            }}
                          >
                            {settings.boolQrCode && (
                              <>
                                <p
                                  style={{
                                    alignSelf: 'center',
                                    fontWeight: 600
                                  }}
                                >
                                  Pay using UPI:
                                </p>
                                <Fragment>
                                  {this.getSeparator(1, classes.separator)}
                                  <QRCode
                                    value={data.qrCodestr ? data.qrCodestr : ''}
                                    size={75}
                                  />
                                </Fragment>
                              </>
                            )}
                            {TxnEnableFieldsMap.get(
                              'display_customer_signature'
                            ) && (
                              <>
                                {this.getSeparator(8, classes.separator)}
                                <p>Customer's Signature</p>
                              </>
                            )}
                          </div>

                          <div
                            style={{
                              width: '30%',
                              textAlign: 'left',
                              paddingLeft: '5px'
                            }}
                          >
                            <p>For {settings.strCompanyName}</p>
                            {settings.boolSignature && settings.strSignature ? (
                              <>
                                <Box
                                  component="img"
                                  style={
                                    settings.signatureSize === 'Small'
                                      ? {
                                          width: signatureSmall,
                                          height: signatureSmall
                                        }
                                      : settings.signatureSize === 'Medium'
                                      ? {
                                          width: signatureMedium,
                                          height: signatureMedium
                                        }
                                      : {
                                          width: signatureLarge,
                                          height: signatureLarge
                                        }
                                  }
                                  src={settings.strSignature}
                                />
                                <p>Authorised signature</p>
                              </>
                            ) : (
                              <>
                                {this.getSeparator(10, classes.separator)}
                                <p>Authorised signature</p>
                              </>
                            )}
                          </div>
                        </div>

                        <div
                          style={{
                            display: 'flex',
                            flexDirection: 'row',
                            border: '1px solid',
                            breakInside: 'avoid'
                          }}
                        >
                          <div style={{ width: '50%', paddingLeft: '3px' }}>
                            <p style={{ fontWeight: 600 }}>
                              Terms and Conditions:
                            </p>
                            {data.terms !== '' ? (
                              <Fragment>
                                <div style={{ whiteSpace: 'break-spaces' }}>
                                  {data.terms}
                                </div>
                              </Fragment>
                            ) : (
                              this.getEmptyRows(1)
                            )}
                          </div>
                          <div
                            style={{
                              width: '50%',
                              borderRight: '1px solid',
                              paddingLeft: '12px',
                              paddingRight: '12px'
                            }}
                          >
                            {data.irnNo && (
                              <div
                                style={{
                                  display: 'flex',
                                  flexDirection: 'row',
                                  breakInside: 'avoid',
                                  width: '100%'
                                }}
                              >
                                <div
                                  style={{
                                    width: '25%',
                                    textAlign: 'center'
                                  }}
                                >
                                  {data.eInvoiceQrCodeStr ? (
                                    <>
                                      {this.getSeparator(1, classes.separator)}
                                      <QRCode
                                        value={
                                          data.eInvoiceQrCodeStr
                                            ? data.eInvoiceQrCodeStr
                                            : ''
                                        }
                                        size={30}
                                      />
                                    </>
                                  ) : (
                                    ''
                                  )}
                                </div>
                                <div style={{ width: '75%' }}>
                                  <div
                                    style={{
                                      display: 'flex',
                                      flexDirection: 'column',
                                      width: '100%'
                                    }}
                                  >
                                    <div
                                      style={{
                                        display: 'flex',
                                        flexDirection: 'row',
                                        paddingLeft: '5px',
                                        width: '100%'
                                      }}
                                    >
                                      <div style={{ width: '30%' }}>
                                        <p>IRN :</p>
                                      </div>
                                      <div style={{ width: '70%' }}>
                                        <p
                                          style={{
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          {data.irnNo}
                                        </p>
                                      </div>
                                    </div>
                                    <div
                                      style={{
                                        display: 'flex',
                                        flexDirection: 'row',
                                        paddingLeft: '5px',
                                        width: '100%'
                                      }}
                                    >
                                      <div style={{ width: '30%' }}>
                                        <p
                                          style={{
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          Ack No. :
                                        </p>
                                      </div>
                                      <div style={{ width: '70%' }}>
                                        <p
                                          style={{
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          {data.ackNo}
                                        </p>
                                      </div>
                                    </div>
                                    <div
                                      style={{
                                        display: 'flex',
                                        flexDirection: 'row',
                                        paddingLeft: '5px',
                                        width: '100%'
                                      }}
                                    >
                                      <div style={{ width: '30%' }}>
                                        <p
                                          style={{
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          Ack Date :
                                        </p>
                                      </div>
                                      <div style={{ width: '70%' }}>
                                        <p
                                          style={{
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          {data.ackDt}
                                        </p>
                                      </div>
                                    </div>
                                    {/* <div style={{ paddingLeft: '5px' }}>
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  e-Invoicing detail{'('}s{')'} generated from
                                  the Government's e-Invoicing system
                                </p>
                              </div> */}
                                  </div>
                                </div>
                              </div>
                            )}
                          </div>
                        </div>
                        <div style={{ textAlign: 'center' }}>
                          {settings.boolJurisdiction &&
                            settings.jurisdiction !== '' && (
                              <p>{settings.jurisdiction}</p>
                            )}
                        </div>
                      </div>
                    ) : (
                      <div
                        style={{
                          border: '1px solid',
                          display: 'flex',
                          flexDirection: 'row',
                          breakInside: 'avoid',
                          borderTop: 'none'
                        }}
                      >
                        <div style={{ width: '50%', paddingLeft: '12px' }}>
                          {(TxnEnableFieldsMap.get('display_bill_notes') ||
                            TxnEnableFieldsMap.get('display_total_weight')) && (
                            <>
                              <p
                                style={{
                                  fontWeight: 600,
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                Notes
                              </p>
                              <Fragment>
                                {data.notes && (
                                  <p
                                    style={{
                                      marginTop: '0px',
                                      paddingTop: '0px',
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    {data.notes}
                                  </p>
                                )}
                                {TxnEnableFieldsMap.get(
                                  'display_total_weight'
                                ) && (
                                  <>
                                    {_data.weightIn && _data.weightIn > 0 ? (
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p
                                          style={{
                                            fontWeight: 600,
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          Weight In
                                        </p>
                                        <p
                                          style={{
                                            flex: 1,
                                            wordBreak: 'keep-all',
                                            fontWeight: 600,
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          {getFloatWithTwoDecimal(
                                            _data.weightIn ? _data.weightIn : 0
                                          )}
                                          g
                                        </p>
                                      </div>
                                    ) : null}
                                    {_data.weightOut && _data.weightOut > 0 ? (
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p
                                          style={{
                                            fontWeight: 600,
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          Weight Out
                                        </p>
                                        <p
                                          style={{
                                            flex: 1,
                                            wordBreak: 'keep-all',
                                            fontWeight: 600,
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          {getFloatWithTwoDecimal(
                                            _data.weightOut
                                              ? _data.weightOut
                                              : 0
                                          )}
                                          g
                                        </p>
                                      </div>
                                    ) : null}
                                    {_data.wastage && _data.wastage > 0 ? (
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p
                                          style={{
                                            fontWeight: 600,
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          Wastage
                                        </p>
                                        <p
                                          style={{
                                            flex: 1,
                                            wordBreak: 'keep-all',
                                            fontWeight: 600,
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          {getFloatWithTwoDecimal(
                                            _data.wastage ? _data.wastage : 0
                                          )}
                                          g
                                        </p>
                                      </div>
                                    ) : null}
                                  </>
                                )}
                              </Fragment>
                            </>
                          )}

                          {!_data.date && settings.boolDesc && (
                            <Fragment>
                              <p
                                style={{
                                  fontWeight: 600,
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                Description
                              </p>
                              <p
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                {settings.strDesc}
                              </p>
                            </Fragment>
                          )}

                          {settings.boolBankDetail && (
                            <div>
                              {settings.boolBankDetailsOnCreditSaleOnly &&
                              data.balanceAmount > 0 ? (
                                <Fragment>
                                  <div>
                                    <p
                                      style={{
                                        fontWeight: 600,
                                        paddingBottom: '0px',
                                        marginBottom: '0px'
                                      }}
                                    >
                                      BANK DETAILS
                                    </p>
                                    <div
                                      style={{
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <div style={{ width: '40%' }}>
                                        <p
                                          style={{
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          A/C Holder's Name
                                        </p>
                                      </div>
                                      <div style={{ width: '60%' }}>
                                        <p
                                          style={{
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          : {settings.bankAccountHolderName}
                                        </p>
                                      </div>
                                    </div>
                                    <div
                                      style={{
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <div style={{ width: '40%' }}>
                                        <p
                                          style={{
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          BANK NAME
                                        </p>
                                      </div>
                                      <div style={{ width: '60%' }}>
                                        <p
                                          style={{
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          : {settings.bankName}
                                        </p>
                                      </div>
                                    </div>
                                    <div
                                      style={{
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <div style={{ width: '40%' }}>
                                        <p
                                          style={{
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          A/C NO.
                                        </p>
                                      </div>
                                      <div style={{ width: '60%' }}>
                                        <p
                                          style={{
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          : {settings.bankAccountNumber}
                                        </p>
                                      </div>
                                    </div>
                                    <div
                                      style={{
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <div style={{ width: '40%' }}>
                                        <p
                                          style={{
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          IFSC Code
                                        </p>
                                      </div>
                                      <div style={{ width: '60%' }}>
                                        <p
                                          style={{
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          : {settings.bankIfscCode}
                                        </p>
                                      </div>
                                    </div>
                                  </div>
                                </Fragment>
                              ) : (
                                <div>
                                  {!settings.boolBankDetailsOnCreditSaleOnly && (
                                    <Fragment>
                                      <div>
                                        <p
                                          style={{
                                            fontWeight: 600,
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          BANK DETAILS
                                        </p>
                                        <div
                                          style={{
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <div style={{ width: '40%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              A/C Holder's Name
                                            </p>
                                          </div>
                                          <div style={{ width: '60%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              : {settings.bankAccountHolderName}
                                            </p>
                                          </div>
                                        </div>
                                        <div
                                          style={{
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <div style={{ width: '40%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              BANK NAME
                                            </p>
                                          </div>
                                          <div style={{ width: '60%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              : {settings.bankName}
                                            </p>
                                          </div>
                                        </div>
                                        <div
                                          style={{
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <div style={{ width: '40%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              A/C NO.
                                            </p>
                                          </div>
                                          <div style={{ width: '60%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              : {settings.bankAccountNumber}
                                            </p>
                                          </div>
                                        </div>
                                        <div
                                          style={{
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <div style={{ width: '40%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              IFSC Code
                                            </p>
                                          </div>
                                          <div style={{ width: '60%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              : {settings.bankIfscCode}
                                            </p>
                                          </div>
                                        </div>
                                      </div>
                                    </Fragment>
                                  )}
                                </div>
                              )}
                            </div>
                          )}
                        </div>
                        <div
                          style={{
                            width: '19.7%',
                            borderRight: '1px solid',
                            textAlign: 'center'
                          }}
                        >
                          {settings.boolQrCode && (
                            <>
                              <p
                                style={{
                                  alignSelf: 'center',
                                  fontWeight: 600
                                }}
                              >
                                Pay using UPI:
                              </p>
                              <Fragment>
                                {this.getSeparator(1, classes.separator)}
                                <QRCode
                                  value={data.qrCodestr ? data.qrCodestr : ''}
                                  size={75}
                                />
                              </Fragment>
                            </>
                          )}
                          {TxnEnableFieldsMap.get(
                            'display_customer_signature'
                          ) && (
                            <>
                              {this.getSeparator(8, classes.separator)}
                              <p>Customer's Signature</p>
                            </>
                          )}
                        </div>

                        <div
                          style={{
                            width: '30%',
                            textAlign: 'left',
                            paddingLeft: '5px'
                          }}
                        >
                          <p>For {settings.strCompanyName}</p>
                          {settings.boolSignature && settings.strSignature ? (
                            <>
                              <Box
                                component="img"
                                style={
                                  settings.signatureSize === 'Small'
                                    ? {
                                        width: signatureSmall,
                                        height: signatureSmall
                                      }
                                    : settings.signatureSize === 'Medium'
                                    ? {
                                        width: signatureMedium,
                                        height: signatureMedium
                                      }
                                    : {
                                        width: signatureLarge,
                                        height: signatureLarge
                                      }
                                }
                                src={settings.strSignature}
                              />
                              <p>Authorised signature</p>
                            </>
                          ) : (
                            <>
                              {this.getSeparator(10, classes.separator)}
                              <p>Authorised signature</p>
                            </>
                          )}
                        </div>
                      </div>
                    )}
                  </div>
                ))
              : ''}
          </div>
        ) : settings.theme === 'Theme 4' ? (
          <div
            style={
              settings.textSize === 'Small'
                ? { fontSize: txtSmall }
                : settings.textSize === 'Medium'
                ? { fontSize: txtMedium }
                : { fontSize: txtLarge }
            }
          >
            {this.props && this.props.data
              ? format.map((item, index) => (
                  <div
                    style={{
                      paddingTop: '0px',
                      pageBreakAfter: 'always',
                      paddingBottom: '0px',
                      width: '100%',
                      padding: '5px',
                      fontFamily: 'Roboto',
                      wordBreak: 'break-word'
                    }}
                  >
                    <div style={{ border: '1px solid' }}>
                      <div style={{ width: '100%' }}>
                        <h2 style={{ marginTop: '10px' }}>
                          <center>{data.mainTitle}</center>
                        </h2>
                        {item.name !== '' && (
                          <p
                            style={{
                              float: 'right',
                              marginRight: '2px',
                              padding: '5px',
                              border: '1px solid #8080807a',
                              color: '#808080bf',
                              fontWeight: 'bold',
                              fontSize: '11px',
                              height: 'auto',
                              marginTop: '-29px'
                            }}
                          >
                            {item.name}
                          </p>
                        )}
                        {settings.boolBisHallmark && (
                          <div style={{ float: 'left', marginTop: '-29px' }}>
                            <Box
                              component="img"
                              style={{
                                ...(settings.logoSize === 'Small'
                                  ? {
                                      width: bisLogoSmall,
                                      height: bisLogoHeightS
                                    }
                                  : settings.logoSize === 'Medium'
                                  ? {
                                      width: bisLogoMedium,
                                      height: bisLogoHeightM
                                    }
                                  : {
                                      width: bisLogoLarge,
                                      height: bisLogoHeightL
                                    }),
                                padding: '5px'
                              }}
                              src={bisImage}
                            />
                          </div>
                        )}
                      </div>

                      <div
                        style={{
                          display: 'flex',
                          flexDirection: 'row',
                          clear: 'both'
                        }}
                      >
                        <div
                          style={{
                            width: '50%',
                            paddingLeft: '10px',
                            paddingTop: '10px'
                          }}
                        >
                          <div>
                            {settings.boolCompanyLogo && (
                              <Box
                                component="img"
                                style={
                                  settings.logoSize === 'Small'
                                    ? { width: logoSmall, height: logoHeightS }
                                    : settings.logoSize === 'Medium'
                                    ? { width: logoMedium, height: logoHeightM }
                                    : { width: logoLarge, height: logoHeightL }
                                }
                                src={settings.fileCompanyLogo}
                              />
                            )}
                          </div>
                          <div>
                            <p>
                              {settings.boolCompanyName ? (
                                <Fragment>
                                  <h1>
                                    <strong
                                      style={{
                                        color: settings.companyNameColor
                                      }}
                                    >
                                      {settings.strCompanyName}
                                    </strong>
                                  </h1>
                                </Fragment>
                              ) : (
                                ''
                              )}
                              {settings.boolCompanyAdditionalDesc ? (
                                <Fragment>
                                  {settings.companyAdditionalDesc}
                                  <br />
                                </Fragment>
                              ) : (
                                ''
                              )}
                              {settings.boolAddress ? (
                                <Fragment>{settings.strAddress}</Fragment>
                              ) : (
                                ''
                              )}
                              {settings.boolPhone ? (
                                <Fragment>
                                  <br />
                                  Ph. no: {settings.strPhone}
                                </Fragment>
                              ) : (
                                ''
                              )}
                              {settings.boolEmail || settings.boolWebsite ? (
                                <>
                                  <Fragment>
                                    <br />
                                    Email: {settings.strEmail}
                                  </Fragment>

                                  {settings.boolWebsite && (
                                    <Fragment>
                                      {' '}
                                      Website: {settings.strEmail}
                                    </Fragment>
                                  )}
                                </>
                              ) : (
                                ''
                              )}
                            </p>
                          </div>
                        </div>
                        <div
                          style={{
                            width: '50%',
                            textAlign: 'right',
                            paddingTop: '10px',
                            paddingRight: '10px'
                          }}
                        >
                          <div
                            style={{
                              textAlign: 'right',
                              paddingRight: '10px'
                            }}
                          >
                            {data.irnNo && (
                              <>
                                {data.eInvoiceQrCodeStr ? (
                                  <>
                                    <QRCode
                                      value={
                                        data.eInvoiceQrCodeStr
                                          ? data.eInvoiceQrCodeStr
                                          : ''
                                      }
                                      size={45}
                                    />
                                    <div>
                                      <p>
                                        Ack No. : {data.ackNo && data.ackNo}
                                      </p>
                                    </div>
                                  </>
                                ) : (
                                  ''
                                )}
                              </>
                            )}
                          </div>
                          {data.irnNo && data.irnNo !== '' && (
                            <div
                              style={{
                                marginTop: '0px',
                                paddingTop: '0px',
                                paddingBottom: '0px',
                                marginBottom: '0px'
                              }}
                            >
                              <p
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                <b>IRN : {data.irnNo}</b>
                              </p>
                            </div>
                          )}
                          <b>
                            {settings.boolGSTIN ? (
                              <Fragment> GSTIN: {settings.strGSTIN}</Fragment>
                            ) : (
                              ''
                            )}
                          </b>
                          <p>
                            {settings.boolPAN ? (
                              <Fragment> PAN: {settings.strPAN}</Fragment>
                            ) : (
                              ''
                            )}
                          </p>
                        </div>
                      </div>
                    </div>

                    <div
                      style={{
                        display: 'flex',
                        flexDirection: 'row',
                        border: '1px solid'
                      }}
                    >
                      <div
                        style={{
                          width: '50%',
                          paddingLeft: '10px'
                        }}
                      >
                        <p
                          style={{
                            flex: 1,
                            wordBreak: 'keep-all',
                            marginTop: '0px',
                            paddingTop: '0px',
                            paddingBottom: '0px',
                            marginBottom: '0px'
                          }}
                        >
                          <b>
                            {' '}
                            {data.invoiceNoTitle}
                            {' : '}
                            {data.invoiceNumber}{' '}
                          </b>
                        </p>
                        {data.salesInvoiceNumber && (
                          <>
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all',
                                marginTop: '0px',
                                paddingTop: '0px',
                                paddingBottom: '0px',
                                marginBottom: '0px'
                              }}
                            >
                              <b> Return Date : </b>
                              {dateFormatter(data.salesReturnDate)}{' '}
                            </p>
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all',
                                marginTop: '0px',
                                paddingTop: '0px',
                                paddingBottom: '0px',
                                marginBottom: '0px'
                              }}
                            >
                              <b>
                                Sale Invoice No. : {data.salesInvoiceNumber}{' '}
                              </b>
                            </p>
                          </>
                        )}
                        <p
                          style={{
                            flex: 1,
                            wordBreak: 'keep-all',
                            marginTop: '0px',
                            paddingTop: '0px',
                            paddingBottom: '0px',
                            marginBottom: '0px'
                          }}
                        >
                          {_data.purchase_order_invoice_number ? (
                            <b>{'PO Date : '}</b>
                          ) : data.salesReturnDate ? (
                            <b>{'Invoice Date : '}</b>
                          ) : (
                            <b>{'Date : '}</b>
                          )}
                          {dateFormatter(data.date) + ' '}{' '}
                          {TxnEnableFieldsMap.get(
                            'display_bill_transaction_time'
                          ) && getTimefromTimeStamp(data.updatedAt)}
                        </p>
                        {taxSettingsData?.exporterCodeNo ? (
                          <p>
                            <b> EXP Ref: </b> {taxSettingsData?.exporterCodeNo}
                          </p>
                        ) : (
                          ''
                        )}
                        {taxSettingsData?.exporterRegistrationDate ? (
                          <p>
                            <b> EXP Reg Date: </b>{' '}
                            {taxSettingsData?.exporterRegistrationDate}
                          </p>
                        ) : (
                          ''
                        )}
                        {data.duedate && (
                          <p
                            style={{
                              marginTop: '0px',
                              paddingTop: '0px',
                              paddingBottom: '0px',
                              marginBottom: '0px'
                            }}
                          >
                            <b>Due Date : </b>
                            {dateFormatter(data.duedate)}
                          </p>
                        )}
                        {data.placeOfSupplyName && (
                          <p
                            style={{
                              flex: 1,
                              wordBreak: 'keep-all',
                              marginTop: '0px',
                              paddingTop: '0px',
                              paddingBottom: '0px',
                              marginBottom: '0px'
                            }}
                          >
                            <b>Place Of Supply{' : '}</b>
                            {data.placeOfSupplyName}
                          </p>
                        )}
                        {true && data.exportCountryOrigin !== '' && (
                          <p
                            style={{
                              textAlign: 'left',
                              flex: 1,
                              wordBreak: 'keep-all'
                            }}
                          >
                            <b>Country of origin{' : '}</b>
                            {data.exportCountryOrigin}
                          </p>
                        )}
                        {true && data.exportCountry !== '' && (
                          <p
                            style={{
                              textAlign: 'left',
                              flex: 1,
                              wordBreak: 'keep-all'
                            }}
                          >
                            <b>Country of Final{' : '}</b>
                            {data.exportCountry}
                          </p>
                        )}
                        {TxnSettings &&
                          TxnEnableFieldsMap.get('display_po') && (
                            <p
                              style={{
                                marginTop: '0px',
                                paddingTop: '0px',
                                paddingBottom: '0px',
                                marginBottom: '0px'
                              }}
                            >
                              <b>{data.poNo && 'PO Number : '}</b>
                              {data.poNo && data.poNo}
                            </p>
                          )}
                        {data.poDate && (
                          <p
                            style={{
                              marginTop: '0px',
                              paddingTop: '0px',
                              paddingBottom: '0px',
                              marginBottom: '0px'
                            }}
                          >
                            <b>PO Date : </b>
                            {dateFormatter(data.poDate) + ' '}
                          </p>
                        )}
                        {_data.rateList &&
                          _data.rateList.length > 0 &&
                          localStorage.getItem('isJewellery') === 'true' &&
                          getMetalNRates()}
                      </div>
                      <div style={{ width: '50%', paddingLeft: '10px' }}>
                        {data.order_type === 'kot' ? (
                          <>
                            <p
                              style={{
                                marginTop: '0px',
                                paddingTop: '0px',
                                paddingBottom: '0px',
                                marginBottom: '0px'
                              }}
                            >
                              <b>Table No : </b>
                              {data.tableNumber && data.tableNumber}
                            </p>
                            <p
                              style={{
                                marginTop: '0px',
                                paddingTop: '0px',
                                paddingBottom: '0px',
                                marginBottom: '0px'
                              }}
                            >
                              <b>Chairs : </b>
                              {data.chairsUsedInString &&
                                data.chairsUsedInString}
                            </p>
                            {data.duedate && (
                              <p
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                <b>Waiter Name : </b>
                                {data.waiter_name && data.waiter_name}
                              </p>
                            )}{' '}
                          </>
                        ) : (
                          <>
                            {TxnSettings &&
                              TxnEnableFieldsMap.get(
                                'display_job_work_employee'
                              ) && (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  <b>Job By{' : '}</b>
                                  <br />
                                  {_data.jobAssignedEmployeeName}
                                </p>
                              )}
                            {TxnSettings &&
                              TxnEnableFieldsMap.get('display_salesman') && (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  <b>Sales By{' : '}</b>
                                  <br />
                                  {_data.salesEmployeeName}
                                </p>
                              )}
                            {_data.backToBackPurchaseNumber &&
                              _data.supervisorName !== '' && (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  <b>Supervisor{' : '}</b>
                                  {_data.supervisorName}
                                </p>
                              )}
                            {_data.backToBackPurchaseNumber &&
                              _data.materialsInChargeName !== '' && (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  <b>Materials In Charge{' : '}</b>
                                  {_data.materialsInChargeName}
                                </p>
                              )}
                            {data.eWayBillNo && (
                              <p
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                <b>E-Way Bill No{' : '}</b>
                                {data.eWayBillNo}
                              </p>
                            )}
                            {TxnSettings &&
                              TxnEnableFieldsMap.get(
                                'display_transportation'
                              ) &&
                              data.transportMode && (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  <b>{'Transport Mode: '}</b>
                                  {data.transportMode}
                                </p>
                              )}

                            {TxnSettings &&
                            TxnEnableFieldsMap.get('display_transportation') ? (
                              <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                <b>Port of loading: </b>

                                {TxnSettings &&
                                  TxnEnableFieldsMap.get(
                                    'display_transportation'
                                  ) &&
                                  data.portOfLoading && (
                                    <>{data.portOfLoading}</>
                                  )}
                              </p>
                            ) : (
                              <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                <b> </b>
                                <>{}</>
                              </p>
                            )}

                            {TxnSettings &&
                            TxnEnableFieldsMap.get('display_transportation') ? (
                              <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                <b>Port of Discharge: </b>

                                {TxnSettings &&
                                  TxnEnableFieldsMap.get(
                                    'display_transportation'
                                  ) &&
                                  data.portOfDischarge && (
                                    <>{data.portOfDischarge}</>
                                  )}
                              </p>
                            ) : (
                              <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                <b> </b>
                                <>{}</>
                              </p>
                            )}

                            {TxnSettings &&
                            TxnEnableFieldsMap.get('display_transportation') ? (
                              <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                <b>Vessel Flight No: </b>

                                {TxnSettings &&
                                  TxnEnableFieldsMap.get(
                                    'display_transportation'
                                  ) &&
                                  data.vesselFlightNo && (
                                    <>{data.vesselFlightNo}</>
                                  )}
                              </p>
                            ) : (
                              <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                <b> </b>
                                <>{}</>
                              </p>
                            )}

                            {TxnSettings &&
                              TxnEnableFieldsMap.get(
                                'display_transportation'
                              ) &&
                              data.transporterId && (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  <b>{'Transporter Id : '}</b>
                                  {data.transporterId}
                                </p>
                              )}

                            {TxnSettings &&
                              TxnEnableFieldsMap.get(
                                'display_transportation'
                              ) &&
                              data.vehicleNo && (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  <b>{'Vehicle No : '}</b>
                                  {data.vehicleNo}
                                </p>
                              )}
                          </>
                        )}

                        {isTemple && (
                          <div
                            dangerouslySetInnerHTML={{
                              __html: data.astrologyDetails + '<br />'
                            }}
                          ></div>
                        )}
                        {isTemple && (
                          <div
                            dangerouslySetInnerHTML={{
                              __html: data.additionalTempleDetails + '<br />'
                            }}
                          ></div>
                        )}
                      </div>
                    </div>

                    <div
                      style={{
                        display: 'flex',
                        flexDirection: 'row',
                        border: '1px solid'
                      }}
                    >
                      <div style={{ width: '50%', paddingLeft: '10px' }}>
                        {_data.delivery_challan_invoice_number &&
                        data.shipToCustomerName ? (
                          <>
                            <p>
                              <b>{data.billTitle}</b>
                            </p>
                            <p
                              style={{
                                marginTop: '0px',
                                paddingTop: '0px',
                                paddingBottom: '0px',
                                marginBottom: '0px'
                              }}
                            >
                              <b>{data.shipToCustomerName}</b>
                            </p>
                            {data.shipToCustomerAddress && (
                              <p
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                {data.shipToCustomerAddress}
                              </p>
                            )}
                            {data.shipToCustomerPhoneNo && (
                              <p
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                Ph. no: {data.shipToCustomerPhoneNo}
                              </p>
                            )}
                            {data.shipToCustomerGSTNo && (
                              <p
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                {' '}
                                <b>GSTIN: {data.shipToCustomerGSTNo}</b>{' '}
                              </p>
                            )}
                            {data.shipToCustomerState ? (
                              <p
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                {data.shipToCustomerState}
                                {<br />}
                              </p>
                            ) : (
                              ''
                            )}
                          </>
                        ) : (
                          <>
                            <p>
                              <b>{data.billTitle}</b>
                            </p>
                            <p
                              style={{
                                marginTop: '0px',
                                paddingTop: '0px',
                                paddingBottom: '0px',
                                marginBottom: '0px'
                              }}
                            >
                              <b>{data.tname}</b>
                            </p>
                            {data.tadd && (
                              <p
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                {data.tadd}
                              </p>
                            )}
                            {data.tphone && (
                              <p
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                Ph No: {data.tphone}
                              </p>
                            )}
                            {data.tgstn && (
                              <p
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                <b>{data.tgstn}</b>
                              </p>
                            )}
                            {_data.aadharNumber ? (
                              <p
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                Aaadhar No: {_data.aadharNumber}
                                {<br />}
                              </p>
                            ) : (
                              ''
                            )}
                            {data.tstate && (
                              <p
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                {data.tstate}
                              </p>
                            )}
                          </>
                        )}
                      </div>
                      <div style={{ width: '50%', paddingLeft: '10px' }}>
                        {data.isSale && data.shipToCustomerName && (
                          <>
                            <b>
                              {TxnSettings?.enableBuyerOtherThanConsignee
                                ? 'Buyer (Other Consignee)'
                                : 'Ship To'}
                            </b>
                            {data.shipToCustomerName && (
                              <p
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                {' '}
                                <b>{data.shipToCustomerName} </b>
                              </p>
                            )}

                            {data.shipToCustomerAddress && (
                              <p
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                {data.shipToCustomerAddress}
                              </p>
                            )}
                            {data.shipToCustomerPhoneNo && (
                              <p
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                Ph No: {data.shipToCustomerPhoneNo}
                              </p>
                            )}
                            {data.shipToCustomerGSTNo && (
                              <b
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                GSTIN: {data.shipToCustomerGSTNo}
                              </b>
                            )}
                            {data.shipToCustomerState ? (
                              <p
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                {data.shipToCustomerState}
                                {<br />}
                              </p>
                            ) : (
                              ''
                            )}
                          </>
                        )}
                      </div>
                    </div>

                    {getHeaderRow()}

                    <div
                      style={{ border: '1px solid', minHeight: minRowHeight }}
                    >
                      {_data.item_list && _data.item_list.length > 0
                        ? getInvoiceRows()
                        : ''}
                    </div>
                    {!isPackagePreivew ? (
                      <div>
                        <div
                          style={{
                            width: '100%',
                            border: '1px solid',
                            breakInside: 'avoid',
                            fontWeight: 600,
                            display: 'flex',
                            flexDirection: 'row'
                          }}
                        >
                          <div
                            style={{ textAlign: 'center', width: '10%' }}
                          ></div>
                          <div
                            style={{
                              textAlign: 'center',
                              width: '30%'
                            }}
                          >
                            Total
                          </div>
                          {/******* HSN ********/}
                          {TxnEnableFieldsMap.get('display_hsn') && (
                            <div
                              style={{
                                width: '16%',
                                textAlign: 'right',
                                paddingRight: '3px'
                              }}
                            ></div>
                          )}
                          {/********* Serial/IMEI No. *********/}
                          {TxnSettings &&
                            TxnEnableFieldsMap.get(
                              'display_product_serial_imei'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              ></div>
                            )}
                          {/* Batch Number */}
                          {TxnEnableFieldsMap.get(
                            'display_product_batch_number'
                          ) && (
                            <div
                              style={{
                                width: '16%',
                                textAlign: 'right',
                                paddingRight: '3px'
                              }}
                            ></div>
                          )}
                          {/* BArcode */}
                          {TxnEnableFieldsMap.get(
                            'display_product_barcode'
                          ) && (
                            <div
                              style={{
                                width: '16%',
                                textAlign: 'right',
                                paddingRight: '3px'
                              }}
                            ></div>
                          )}
                          {/* Brand */}
                          {TxnEnableFieldsMap.get('display_product_brand') && (
                            <div
                              style={{
                                width: '16%',
                                textAlign: 'right',
                                paddingRight: '3px'
                              }}
                            ></div>
                          )}
                          {/* Model Number */}
                          {TxnEnableFieldsMap.get(
                            'display_product_model_no'
                          ) && (
                            <div
                              style={{
                                width: '16%',
                                textAlign: 'right',
                                paddingRight: '3px'
                              }}
                            ></div>
                          )}
                          {/* Manufacturing Date */}
                          {TxnEnableFieldsMap.get(
                            'display_product_manufacturing_date'
                          ) && (
                            <div
                              style={{
                                width: '16%',
                                textAlign: 'right',
                                paddingRight: '3px'
                              }}
                            ></div>
                          )}
                          {/* Expiry Date */}
                          {TxnEnableFieldsMap.get(
                            'display_product_expiry_date'
                          ) && (
                            <div
                              style={{
                                width: '16%',
                                textAlign: 'right',
                                paddingRight: '3px'
                              }}
                            ></div>
                          )}
                          {TxnEnableFieldsMap.get(
                            'display_product_quantity'
                          ) && (
                            <div style={{ width: '15%', textAlign: 'right' }}>
                              {totalqty}
                            </div>
                          )}
                          {/* Total Free Quantity */}
                          {TxnEnableFieldsMap.get(
                            'display_product_free_quantity'
                          ) && (
                            <div style={{ width: '15%', textAlign: 'right' }}>
                              {totalfreeqty}
                            </div>
                          )}
                          {/* Unit */}
                          {TxnEnableFieldsMap.get('display_product_unit') && (
                            <div
                              style={{ width: '15%', textAlign: 'right' }}
                            ></div>
                          )}
                          {_data.exportConversionRate === 0 &&
                            TxnEnableFieldsMap.get('display_product_mrp') && (
                              <div
                                style={{ width: '15%', textAlign: 'right' }}
                              ></div>
                            )}
                          {TxnEnableFieldsMap.get('display_product_price') && (
                            <div
                              style={{
                                width: '15%',
                                textAlign: 'right',
                                paddingRight: '3px'
                              }}
                            ></div>
                          )}
                          {_data.exportConversionRate > 0 &&
                            TxnEnableFieldsMap.get(
                              'display_product_price_other_currency'
                            ) && (
                              <p
                                style={{
                                  width: '15%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></p>
                            )}
                          {TxnEnableFieldsMap.get(
                            'display_product_price_per_gram'
                          ) && (
                            <div
                              style={{
                                width: '30%',
                                textAlign: 'right',
                                paddingRight: '3px'
                              }}
                            ></div>
                          )}
                          {TxnEnableFieldsMap.get(
                            'display_product_gross_weight'
                          ) && (
                            <div style={{ width: '15%', textAlign: 'right' }}>
                              {parseFloat(totalGrossWt).toFixed(3)}
                            </div>
                          )}
                          {TxnEnableFieldsMap.get(
                            'display_product_stone_weight'
                          ) && (
                            <div style={{ width: '15%', textAlign: 'right' }}>
                              {parseFloat(totalStoneWt).toFixed(3)}
                            </div>
                          )}
                          {TxnEnableFieldsMap.get(
                            'display_product_net_weight'
                          ) && (
                            <div style={{ width: '15%', textAlign: 'right' }}>
                              {parseFloat(totalNetWt).toFixed(3)}
                            </div>
                          )}
                          {TxnEnableFieldsMap.get(
                            'display_product_wastage'
                          ) && (
                            <div
                              style={{ width: '15%', textAlign: 'right' }}
                            ></div>
                          )}
                          {TxnEnableFieldsMap.get(
                            'display_product_making_charge'
                          ) && (
                            <div
                              style={{ width: '15%', textAlign: 'right' }}
                            ></div>
                          )}
                          {TxnEnableFieldsMap.get(
                            'display_product_making_charge_per_gram'
                          ) && (
                            <div
                              style={{ width: '15%', textAlign: 'right' }}
                            ></div>
                          )}
                          {TxnEnableFieldsMap.get(
                            'display_product_stone_charge'
                          ) && (
                            <div
                              style={{ width: '15%', textAlign: 'right' }}
                            ></div>
                          )}
                          {TxnEnableFieldsMap.get('display_product_purity') && (
                            <div
                              style={{ width: '15%', textAlign: 'right' }}
                            ></div>
                          )}
                          {/* Copper */}
                          {TxnEnableFieldsMap.get('display_product_copper') && (
                            <div
                              style={{ width: '15%', textAlign: 'right' }}
                            ></div>
                          )}
                          {TxnEnableFieldsMap.get(
                            'display_product_discount'
                          ) && (
                            <div style={{ width: '15%', textAlign: 'right' }}>
                              {data.exportConversionRate > 0 ? (
                                <span>
                                  {getFloatWithTwoDecimal(
                                    data.subTotalDisc /
                                      data.exportConversionRate
                                  )}
                                </span>
                              ) : (
                                <span>
                                  â‚¹ {getFloatWithTwoDecimal(data.subTotalDisc)}
                                </span>
                              )}
                            </div>
                          )}
                          {_data.exportConversionRate === 0 &&
                            TxnEnableFieldsMap.get(
                              'display_product_gst_percentage'
                            ) && (
                              <div
                                style={{ width: '15%', textAlign: 'right' }}
                              ></div>
                            )}
                          {_data.exportConversionRate === 0 &&
                            TxnEnableFieldsMap.get('display_product_gst') && (
                              <div style={{ width: '15%', textAlign: 'right' }}>
                                {getFloatWithTwoDecimal(totaltax_gst)}
                              </div>
                            )}
                          {data.isSale ? (
                            <>
                              {_data.exportConversionRate === 0 &&
                                TxnEnableFieldsMap.get(
                                  'display_product_total_amount'
                                ) && (
                                  <div
                                    style={{
                                      width: '25%',
                                      textAlign: 'right',
                                      paddingRight: '3px'
                                    }}
                                  >
                                    {(
                                      getFloatWithTwoDecimal(
                                        data.totalTaxableAmount
                                      ) / (_data.exportConversionRate || 1)
                                    ).toFixed(2)}
                                  </div>
                                )}{' '}
                            </>
                          ) : (
                            <div
                              style={{
                                width: '25%',
                                textAlign: 'right',
                                paddingRight: '3px'
                              }}
                            >
                              {getFloatWithTwoDecimal(data.totalTaxableAmount)}
                            </div>
                          )}
                          {TxnEnableFieldsMap.get(
                            'display_product_total_amount_other'
                          ) && data.amountOtherCurrency ? (
                            <div
                              style={{
                                paddingRight: '3px',
                                width: '25%',
                                textAlign: 'right'
                              }}
                            >
                              {data.amountOtherCurrency?.toFixed(2)}
                            </div>
                          ) : (
                            <div
                              style={{
                                paddingRight: '3px',
                                width: '26%',
                                textAlign: 'right',
                                display: _data.exportConversionRate
                                  ? 'block'
                                  : 'none'
                              }}
                            >
                              {(
                                data.subTotal /
                                (_data.exportConversionRate || 1)
                              ).toFixed(2)}
                            </div>
                          )}
                        </div>

                        <div
                          style={{
                            border: '1px solid',
                            breakInside: 'avoid',
                            display: 'flex',
                            flexDirection: 'row',
                            paddingLeft: '10px'
                          }}
                        >
                          <div
                            style={{
                              width: '57%',
                              display: 'flex',
                              flexDirection: 'column'
                            }}
                          >
                            {this.getSeparator(1, classes.separator)}
                            <div
                              style={{
                                display:
                                  data.exportConversionRate > 0
                                    ? 'none'
                                    : 'block'
                              }}
                            >
                              <div
                                style={{
                                  width: '100%',
                                  display: 'flex',
                                  border: '1px solid',
                                  flexDirection: 'row',
                                  textAlign: 'center',
                                  fontWeight: 'bold',
                                  fontSize: '6px'
                                }}
                              >
                                <div
                                  style={{
                                    borderRight: '1px solid',
                                    width: '20%'
                                  }}
                                >
                                  <p>TAXABLE AMT</p>
                                </div>
                                <div
                                  style={{
                                    borderRight: '1px solid',
                                    width: '14%'
                                  }}
                                >
                                  <p>CGST %</p>
                                </div>
                                <div
                                  style={{
                                    borderRight: '1px solid',
                                    width: '14%'
                                  }}
                                >
                                  <p>CGST AMT</p>
                                </div>
                                <div
                                  style={{
                                    borderRight: '1px solid',
                                    width: '14%'
                                  }}
                                >
                                  <p>SGST %</p>
                                </div>
                                <div
                                  style={{
                                    borderRight: '1px solid',
                                    width: '14%'
                                  }}
                                >
                                  <p>SGST AMT</p>
                                </div>
                                <div
                                  style={{
                                    borderRight: '1px solid',
                                    width: '14%'
                                  }}
                                >
                                  <p>IGST %</p>
                                </div>
                                <div style={{ width: '14%' }}>
                                  <p>IGST AMT</p>
                                </div>
                              </div>

                              {taxSplitDataList ? getUITaxSplitGSTRows() : ''}
                              <div
                                style={{
                                  width: '100%',
                                  borderLeft: '1px solid',
                                  borderRight: '1px solid',
                                  borderBottom: '1px solid',
                                  display: 'flex',
                                  flexDirection: 'row',
                                  textAlign: 'center',
                                  fontWeight: 'bold',
                                  fontSize: '6px'
                                }}
                              >
                                <div
                                  style={{
                                    borderRight: '1px solid',
                                    width: '20%'
                                  }}
                                >
                                  <p>TOTAL</p>
                                </div>
                                <div
                                  style={{
                                    borderRight: '1px solid',
                                    width: '14%'
                                  }}
                                >
                                  <p>CGST</p>
                                </div>
                                <div
                                  style={{
                                    borderRight: '1px solid',
                                    width: '14%'
                                  }}
                                >
                                  <p>â‚¹ {getFloatWithTwoDecimal(totalCGST)}</p>
                                </div>
                                <div
                                  style={{
                                    borderRight: '1px solid',
                                    width: '14%'
                                  }}
                                >
                                  <p>SGST </p>
                                </div>
                                <div
                                  style={{
                                    borderRight: '1px solid',
                                    width: '14%'
                                  }}
                                >
                                  <p>â‚¹ {getFloatWithTwoDecimal(totalSGST)}</p>
                                </div>
                                <div
                                  style={{
                                    borderRight: '1px solid',
                                    width: '14%'
                                  }}
                                >
                                  <p>IGST </p>
                                </div>
                                <div style={{ width: '14%' }}>
                                  <p>â‚¹ {getFloatWithTwoDecimal(totalIGST)}</p>
                                </div>
                              </div>
                            </div>

                            <div style={{ flex: 1, wordBreak: 'keep-all' }}>
                              <div
                                style={{
                                  display: 'flex',
                                  flexDirection: 'column'
                                }}
                              >
                                {!_data.date && settings.boolDesc ? (
                                  <Fragment>
                                    <p
                                      style={{
                                        fontWeight: 600,
                                        paddingBottom: '0px',
                                        marginBottom: '0px'
                                      }}
                                    >
                                      Description
                                    </p>
                                    <p
                                      style={{
                                        backgroundColor: '#f5f2f2',
                                        marginTop: '0px',
                                        paddingTop: '0px',
                                        paddingBottom: '0px',
                                        marginBottom: '0px'
                                      }}
                                    >
                                      {settings.strDesc}
                                    </p>
                                  </Fragment>
                                ) : (
                                  ''
                                )}
                                {TxnEnableFieldsMap.get('display_bill_notes') ||
                                TxnEnableFieldsMap.get(
                                  'display_total_weight'
                                ) ? (
                                  <Fragment>
                                    <p
                                      style={{
                                        fontWeight: 600,
                                        paddingBottom: '0px',
                                        marginBottom: '0px'
                                      }}
                                    >
                                      Notes
                                    </p>
                                    {data.notes && (
                                      <p
                                        style={{
                                          backgroundColor: '#f5f2f2',
                                          marginTop: '0px',
                                          paddingTop: '0px',
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        {data.notes}
                                      </p>
                                    )}
                                    {TxnEnableFieldsMap.get(
                                      'display_total_weight'
                                    ) && (
                                      <>
                                        {_data.weightIn &&
                                        _data.weightIn > 0 ? (
                                          <div
                                            style={{
                                              backgroundColor: '#f5f2f2',
                                              textAlign: 'right',
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <p
                                              style={{
                                                fontWeight: 600,
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              Weight In
                                            </p>
                                            <p
                                              style={{
                                                flex: 1,
                                                wordBreak: 'keep-all',
                                                fontWeight: 600,
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              {getFloatWithTwoDecimal(
                                                _data.weightIn
                                                  ? _data.weightIn
                                                  : 0
                                              )}
                                              g
                                            </p>
                                          </div>
                                        ) : null}
                                        {_data.weightOut &&
                                        _data.weightOut > 0 ? (
                                          <div
                                            style={{
                                              backgroundColor: '#f5f2f2',
                                              textAlign: 'right',
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <p
                                              style={{
                                                fontWeight: 600,
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              Weight Out
                                            </p>
                                            <p
                                              style={{
                                                flex: 1,
                                                wordBreak: 'keep-all',
                                                fontWeight: 600
                                              }}
                                            >
                                              {getFloatWithTwoDecimal(
                                                _data.weightOut
                                                  ? _data.weightOut
                                                  : 0
                                              )}
                                              g
                                            </p>
                                          </div>
                                        ) : null}
                                        {_data.wastage && _data.wastage > 0 ? (
                                          <div
                                            style={{
                                              backgroundColor: '#f5f2f2',
                                              textAlign: 'right',
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <p
                                              style={{
                                                fontWeight: 600,
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              Wastage
                                            </p>
                                            <p
                                              style={{
                                                flex: 1,
                                                wordBreak: 'keep-all',
                                                fontWeight: 600,
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              {getFloatWithTwoDecimal(
                                                _data.wastage
                                                  ? _data.wastage
                                                  : 0
                                              )}
                                              g
                                            </p>
                                          </div>
                                        ) : null}
                                      </>
                                    )}
                                  </Fragment>
                                ) : (
                                  ''
                                )}
                                <p
                                  style={{
                                    fontWeight: 600,
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  INVOICE AMOUNT IN WORDS
                                </p>
                                <p
                                  style={{
                                    textTransform: 'capitalize',
                                    backgroundColor: '#f5f2f2',
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.strTotal}
                                </p>
                                {data.terms !== '' ? (
                                  <Fragment>
                                    <p
                                      style={{
                                        fontWeight: 600,
                                        paddingBottom: '0px',
                                        marginBottom: '0px'
                                      }}
                                    >
                                      TERMS AND CONDITIONS
                                    </p>
                                    <div
                                      style={{
                                        whiteSpace: 'break-spaces',
                                        marginTop: '0px',
                                        paddingTop: '0px',
                                        paddingBottom: '0px',
                                        marginBottom: '0px'
                                      }}
                                    >
                                      {data.terms}
                                    </div>
                                  </Fragment>
                                ) : (
                                  ''
                                )}
                                <div
                                  style={{
                                    width: '100%',
                                    display: 'flex',
                                    flexDirection: 'row'
                                  }}
                                >
                                  {settings.boolBankDetail ? (
                                    <div style={{ width: '70%' }}>
                                      {settings.boolBankDetailsOnCreditSaleOnly &&
                                      data.balanceAmount > 0 ? (
                                        <Fragment>
                                          <div>
                                            <p
                                              style={{
                                                fontWeight: 600,
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              BANK DETAILS
                                            </p>
                                            <div
                                              style={{
                                                display: 'flex',
                                                flexDirection: 'row'
                                              }}
                                            >
                                              <div style={{ width: '45%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  A/C Holder's Name
                                                </p>
                                              </div>
                                              <div style={{ width: '55%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  :{' '}
                                                  {
                                                    settings.bankAccountHolderName
                                                  }
                                                </p>
                                              </div>
                                            </div>
                                            <div
                                              style={{
                                                display: 'flex',
                                                flexDirection: 'row'
                                              }}
                                            >
                                              <div style={{ width: '45%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  BANK NAME
                                                </p>
                                              </div>
                                              <div style={{ width: '55%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  : {settings.bankName}
                                                </p>
                                              </div>
                                            </div>
                                            <div
                                              style={{
                                                display: 'flex',
                                                flexDirection: 'row'
                                              }}
                                            >
                                              <div style={{ width: '45%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  A/C NO.
                                                </p>
                                              </div>
                                              <div style={{ width: '55%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  : {settings.bankAccountNumber}
                                                </p>
                                              </div>
                                            </div>
                                            <div
                                              style={{
                                                display: 'flex',
                                                flexDirection: 'row'
                                              }}
                                            >
                                              <div style={{ width: '45%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  IFSC Code
                                                </p>
                                              </div>
                                              <div style={{ width: '55%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  : {settings.bankIfscCode}
                                                </p>
                                              </div>
                                            </div>
                                          </div>
                                        </Fragment>
                                      ) : (
                                        <div>
                                          {!settings.boolBankDetailsOnCreditSaleOnly ? (
                                            <Fragment>
                                              <div>
                                                <p style={{ fontWeight: 600 }}>
                                                  BANK DETAILS
                                                </p>
                                                <div
                                                  style={{
                                                    display: 'flex',
                                                    flexDirection: 'row'
                                                  }}
                                                >
                                                  <div style={{ width: '45%' }}>
                                                    <p
                                                      style={{
                                                        marginTop: '0px',
                                                        paddingTop: '0px',
                                                        paddingBottom: '0px',
                                                        marginBottom: '0px'
                                                      }}
                                                    >
                                                      A/C Holder's Name
                                                    </p>
                                                  </div>
                                                  <div style={{ width: '55%' }}>
                                                    <p
                                                      style={{
                                                        marginTop: '0px',
                                                        paddingTop: '0px',
                                                        paddingBottom: '0px',
                                                        marginBottom: '0px'
                                                      }}
                                                    >
                                                      :{' '}
                                                      {
                                                        settings.bankAccountHolderName
                                                      }
                                                    </p>
                                                  </div>
                                                </div>
                                                <div
                                                  style={{
                                                    display: 'flex',
                                                    flexDirection: 'row'
                                                  }}
                                                >
                                                  <div style={{ width: '45%' }}>
                                                    <p
                                                      style={{
                                                        marginTop: '0px',
                                                        paddingTop: '0px',
                                                        paddingBottom: '0px',
                                                        marginBottom: '0px'
                                                      }}
                                                    >
                                                      BANK NAME
                                                    </p>
                                                  </div>
                                                  <div style={{ width: '55%' }}>
                                                    <p
                                                      style={{
                                                        marginTop: '0px',
                                                        paddingTop: '0px',
                                                        paddingBottom: '0px',
                                                        marginBottom: '0px'
                                                      }}
                                                    >
                                                      : {settings.bankName}
                                                    </p>
                                                  </div>
                                                </div>
                                                <div
                                                  style={{
                                                    display: 'flex',
                                                    flexDirection: 'row'
                                                  }}
                                                >
                                                  <div style={{ width: '45%' }}>
                                                    <p
                                                      style={{
                                                        marginTop: '0px',
                                                        paddingTop: '0px',
                                                        paddingBottom: '0px',
                                                        marginBottom: '0px'
                                                      }}
                                                    >
                                                      A/C NO.
                                                    </p>
                                                  </div>
                                                  <div style={{ width: '55%' }}>
                                                    <p
                                                      style={{
                                                        marginTop: '0px',
                                                        paddingTop: '0px',
                                                        paddingBottom: '0px',
                                                        marginBottom: '0px'
                                                      }}
                                                    >
                                                      :{' '}
                                                      {
                                                        settings.bankAccountNumber
                                                      }
                                                    </p>
                                                  </div>
                                                </div>
                                                <div
                                                  style={{
                                                    display: 'flex',
                                                    flexDirection: 'row'
                                                  }}
                                                >
                                                  <div style={{ width: '45%' }}>
                                                    <p
                                                      style={{
                                                        marginTop: '0px',
                                                        paddingTop: '0px',
                                                        paddingBottom: '0px',
                                                        marginBottom: '0px'
                                                      }}
                                                    >
                                                      IFSC Code
                                                    </p>
                                                  </div>
                                                  <div style={{ width: '55%' }}>
                                                    <p
                                                      style={{
                                                        marginTop: '0px',
                                                        paddingTop: '0px',
                                                        paddingBottom: '0px',
                                                        marginBottom: '0px'
                                                      }}
                                                    >
                                                      : {settings.bankIfscCode}
                                                    </p>
                                                  </div>
                                                </div>
                                              </div>
                                            </Fragment>
                                          ) : (
                                            ''
                                          )}
                                        </div>
                                      )}
                                    </div>
                                  ) : (
                                    ''
                                  )}
                                  <div
                                    style={{
                                      width: '30%',
                                      textAlign: 'center'
                                    }}
                                  >
                                    {settings.boolQrCode ? (
                                      <Fragment>
                                        {this.getSeparator(
                                          1,
                                          classes.separator
                                        )}
                                        <QRCode
                                          value={
                                            data.qrCodestr ? data.qrCodestr : ''
                                          }
                                          size={75}
                                        />
                                      </Fragment>
                                    ) : (
                                      ''
                                    )}
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>

                          <div
                            style={{
                              width: '3%',
                              display: 'flex',
                              flexDirection: 'column',
                              fontSize: '9px',
                              alignSelf: 'flex-end',
                              marginBottom: '10px'
                            }}
                          >
                            <div>
                              {/* <p>No. of Items : {_data.item_list.length}</p> */}
                            </div>
                          </div>

                          <div
                            style={{
                              width: '46%',
                              borderLeft: '1px solid',
                              borderBottom: '1px solid',
                              display: 'flex',
                              flexDirection: 'column',
                              fontSize: '9px'
                            }}
                          >
                            <div style={{ width: '100%', padding: '5px 3px' }}>
                              <div
                                style={{
                                  textAlign: 'right',
                                  display: 'flex',
                                  flexDirection: 'row'
                                }}
                              >
                                <p>Sub Total</p>
                                {data.exportConversionRate ? (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    {data.exportCurrency}{' '}
                                    {(
                                      getFloatWithTwoDecimal(
                                        data.totalTaxableAmount +
                                          data.subTotalDisc
                                      ) / data.exportConversionRate
                                    )?.toFixed(2)}
                                    {/* {getFloatWithTwoDecimal(data.subTotal)} */}
                                  </p>
                                ) : (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    â‚¹{' '}
                                    {/* {getFloatWithTwoDecimal(
                                      data.totalTaxableAmount +
                                        data.subTotalDisc
                                    )} */}
                                    {getFloatWithTwoDecimal(data.subTotal)}
                                  </p>
                                )}
                              </div>

                              {_data.exportConversionRate === 0 &&
                              TxnEnableFieldsMap.get(
                                'display_bill_packing_charge'
                              ) &&
                              _data.packing_charge ? (
                                <div
                                  style={{
                                    textAlign: 'right',
                                    display: 'flex',
                                    flexDirection: 'row',
                                    flexWrap: 'wrap'
                                  }}
                                >
                                  <p>Package Charge</p>
                                  <p
                                    style={{
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    â‚¹{' '}
                                    {getFloatWithTwoDecimal(
                                      _data.packing_charge
                                        ? _data.packing_charge
                                        : 0
                                    )}
                                  </p>
                                </div>
                              ) : (
                                ' '
                              )}

                              {_data.exportConversionRate > 0 &&
                              TxnEnableFieldsMap.get(
                                'display_packing_other_currency'
                              ) &&
                              _data.packingChargeOtherCurrency ? (
                                <div
                                  style={{
                                    textAlign: 'right',
                                    display: 'flex',
                                    flexDirection: 'row',
                                    flexWrap: 'wrap'
                                  }}
                                >
                                  {_data.packingChargeOtherCurrency && (
                                    <div
                                      style={{
                                        minWidth: '100%',
                                        display: 'flex',
                                        textAlign: 'right'
                                      }}
                                    >
                                      <p>Package Charge</p>
                                      <p
                                        style={{
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                      >
                                        {data.exportCurrency}{' '}
                                        {getFloatWithTwoDecimal(
                                          _data.packingChargeOtherCurrency
                                            ? _data.packingChargeOtherCurrency
                                            : 0
                                        )}
                                      </p>
                                    </div>
                                  )}
                                </div>
                              ) : (
                                ' '
                              )}

                              {_data.exportConversionRate === 0 &&
                              TxnEnableFieldsMap.get(
                                'display_bill_shipping_charge'
                              ) &&
                              !_data.backToBackPurchaseNumber &&
                              _data.shipping_charge ? (
                                <div
                                  style={{
                                    textAlign: 'right',
                                    display: 'flex',
                                    flexDirection: 'row',
                                    flexWrap: 'wrap'
                                  }}
                                >
                                  <p>Shipping Charge</p>
                                  <p
                                    style={{
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    â‚¹{' '}
                                    {getFloatWithTwoDecimal(
                                      _data.shipping_charge
                                        ? _data.shipping_charge
                                        : 0
                                    )}
                                  </p>
                                </div>
                              ) : (
                                ' '
                              )}

                              {_data.exportConversionRate > 0 &&
                              TxnEnableFieldsMap.get(
                                'display_shipping_other_currency'
                              ) &&
                              !_data.backToBackPurchaseNumber &&
                              _data.shippingChargeOtherCurrency ? (
                                <div
                                  style={{
                                    textAlign: 'right',
                                    display: 'flex',
                                    flexDirection: 'row',
                                    flexWrap: 'wrap'
                                  }}
                                >
                                  {_data.shippingChargeOtherCurrency && (
                                    <div
                                      style={{
                                        minWidth: '100%',
                                        display: 'flex',
                                        textAlign: 'right'
                                      }}
                                    >
                                      <p>Shipping Charge</p>
                                      <p
                                        style={{
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                      >
                                        {data.exportCurrency}{' '}
                                        {getFloatWithTwoDecimal(
                                          _data.shippingChargeOtherCurrency
                                            ? _data.shippingChargeOtherCurrency
                                            : 0
                                        )}
                                      </p>
                                    </div>
                                  )}
                                </div>
                              ) : (
                                ' '
                              )}

                              {TxnEnableFieldsMap.get(
                                'display_bill_shipping_charge'
                              ) &&
                                _data.backToBackPurchaseNumber && (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row'
                                    }}
                                  >
                                    <p>Freight Charge</p>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all'
                                      }}
                                    >
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.freightCharge
                                          ? _data.freightCharge
                                          : 0
                                      )}
                                    </p>
                                  </div>
                                )}

                              {_data.exportConversionRate === 0 &&
                              TxnEnableFieldsMap.get(
                                'display_bill_insurance'
                              ) &&
                              _data.insurance &&
                              _data.insurance.amount > 0 ? (
                                <div
                                  style={{
                                    textAlign: 'right',
                                    display: 'flex',
                                    flexDirection: 'row'
                                  }}
                                >
                                  <p>Insurance</p>
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    â‚¹{' '}
                                    {getFloatWithTwoDecimal(
                                      _data.insurance && _data.insurance.amount
                                        ? _data.insurance.amount
                                        : 0
                                    )}
                                  </p>
                                </div>
                              ) : (
                                ' '
                              )}

                              {_data.exportConversionRate > 0 &&
                              TxnEnableFieldsMap.get(
                                'display_insurance_other_currency'
                              ) &&
                              _data.insurance &&
                              _data.insurance.amountOtherCurrency > 0 ? (
                                <div
                                  style={{
                                    textAlign: 'right',
                                    display: 'flex',
                                    flexDirection: 'row'
                                  }}
                                >
                                  <p>Insurance</p>
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    {data.exportCurrency}{' '}
                                    {getFloatWithTwoDecimal(
                                      _data.insurance &&
                                        _data.insurance.amountOtherCurrency
                                        ? _data.insurance.amountOtherCurrency
                                        : 0
                                    )}
                                  </p>
                                </div>
                              ) : (
                                ' '
                              )}

                              {data.totalDiscount === 0 ? (
                                ''
                              ) : (
                                <>
                                  {((_data.invoice_number &&
                                    TxnEnableFieldsMap.get(
                                      'display_bill_discount'
                                    )) ||
                                    !_data.invoice_number) && (
                                    <div
                                      style={{
                                        textAlign: 'right',
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <p>Total Discount</p>
                                      <p
                                        style={{
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(
                                          data.totalDiscount
                                        )}
                                      </p>
                                    </div>
                                  )}
                                </>
                              )}

                              {/* TCS Amount */}
                              {data.tcsAmount > 0 && (
                                <div
                                  style={{
                                    textAlign: 'right',
                                    display: 'flex',
                                    flexDirection: 'row'
                                  }}
                                >
                                  <p>
                                    TCS@{data.tcsRate}% {data.tcsCode}
                                  </p>
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    â‚¹ {getFloatWithTwoDecimal(data.tcsAmount)}
                                  </p>
                                </div>
                              )}

                              {TxnEnableFieldsMap.get('display_product_cess') &&
                                data.totalCess > 0 && (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row'
                                    }}
                                  >
                                    <p>Total Cess</p>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all'
                                      }}
                                    >
                                      â‚¹ {getFloatWithTwoDecimal(data.totalCess)}
                                    </p>
                                  </div>
                                )}

                              {String(_data.is_roundoff).toLowerCase() ===
                                'true' && (
                                <div
                                  style={{
                                    textAlign: 'right',
                                    display: 'flex',
                                    flexDirection: 'row'
                                  }}
                                >
                                  <p style={{ fontWeight: 600 }}>Round off</p>
                                  <p
                                    style={{
                                      flex: 1,
                                      wordBreak: 'keep-all',
                                      fontWeight: 600
                                    }}
                                  >
                                    {data.exportConversionRate ? (
                                      <span>
                                        {data.exportCurrency}{' '}
                                        {getFloatWithTwoDecimal(
                                          _data.round_amount /
                                            _data.exportConversionRate
                                        )}
                                      </span>
                                    ) : (
                                      <span>
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(
                                          _data.round_amount
                                        )}
                                      </span>
                                    )}
                                  </p>
                                </div>
                              )}
                              <div
                                style={{
                                  textAlign: 'right',
                                  display: 'flex',
                                  flexDirection: 'row'
                                }}
                              >
                                <p
                                  style={{ fontSize: '12px', fontWeight: 600 }}
                                >
                                  Total
                                </p>
                                <p
                                  style={{
                                    fontSize: '12px',
                                    fontWeight: 600,
                                    flex: 1,
                                    wordBreak: 'keep-all'
                                  }}
                                >
                                  {data.exportConversionRate ? (
                                    <span>
                                      {data.exportCurrency}{' '}
                                      {getFloatWithTwoDecimal(data.totalAmount)}
                                    </span>
                                  ) : (
                                    <span>
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(data.totalAmount)}
                                    </span>
                                  )}
                                </p>
                              </div>

                              {_data.estimateType === 'open' ||
                              _data.estimateType === 'close' ? (
                                ''
                              ) : (
                                <>
                                  {data.receivedAmount > 0 && (
                                    <div
                                      style={{
                                        textAlign: 'right',
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <p>{data.paidReceivedTitle}</p>
                                      <p
                                        style={{
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(
                                          data.receivedAmount
                                        )}
                                      </p>
                                    </div>
                                  )}
                                  {_data.exportConversionRate === 0 &&
                                  data.balanceAmount > 0 ? (
                                    <div
                                      style={{
                                        textAlign: 'right',
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <p>Balance</p>
                                      <p
                                        style={{
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(
                                          data.balanceAmount
                                        )}
                                      </p>
                                    </div>
                                  ) : (
                                    ''
                                  )}
                                  {settings.boolPaymentMode &&
                                  data.paymentType !== '' ? (
                                    <div
                                      style={{
                                        textAlign: 'right',
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <p>Payment Type</p>

                                      <p
                                        style={{
                                          textTransform: 'capitalize',
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                        dangerouslySetInnerHTML={{
                                          __html: data.paymentType
                                        }}
                                      ></p>
                                    </div>
                                  ) : (
                                    ''
                                  )}
                                  {data.tdsAmount > 0 ? (
                                    <div
                                      style={{
                                        textAlign: 'right',
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <p>
                                        TDS@{data.tdsRate}% {data.tdsCode}
                                      </p>
                                      <p
                                        style={{
                                          textTransform: 'capitalize',
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(data.tdsAmount)}
                                      </p>
                                    </div>
                                  ) : (
                                    ''
                                  )}
                                </>
                              )}

                              {/****** Outstanding Payble / Receivable *****/}
                              {settings.boolPreviousBalance &&
                                outStandingType &&
                                outStandingBalance !== 0 && (
                                  <>
                                    <div
                                      style={{
                                        textAlign: 'right',
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <p>Outstanding-{outStandingType} </p>
                                      <p
                                        style={{
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(
                                          outStandingBalance
                                        )}
                                      </p>
                                    </div>
                                  </>
                                )}
                            </div>
                            {/* </Grid> */}
                          </div>
                        </div>

                        <div
                          style={{
                            border: '1px solid',
                            breakInside: 'avoid',
                            width: '100%',
                            display: 'flex',
                            flexDirection: 'row'
                          }}
                        >
                          <div
                            style={{
                              width: '50%',
                              display: 'flex',
                              flexDirection: 'column',
                              paddingLeft: '10px'
                            }}
                          >
                            <p>
                              For{' '}
                              {settings.boolCompanyName &&
                                settings.strCompanyName}
                            </p>
                            <div style={{ width: '50%' }}>
                              {settings.boolSignature &&
                              settings.strSignature ? (
                                <>
                                  <Box
                                    component="img"
                                    style={
                                      settings.signatureSize === 'Small'
                                        ? {
                                            width: signatureSmall,
                                            height: signatureSmall,
                                            marginLeft: '20px'
                                          }
                                        : settings.signatureSize === 'Medium'
                                        ? {
                                            width: signatureMedium,
                                            height: signatureMedium,
                                            marginLeft: '20px'
                                          }
                                        : {
                                            width: signatureLarge,
                                            height: signatureLarge,
                                            marginLeft: '20px'
                                          }
                                    }
                                    src={settings.strSignature}
                                  />
                                  <p>Authorised signature</p>
                                </>
                              ) : (
                                <>
                                  {this.getSeparator(5, classes.separator)}
                                  <p>Authorised signature</p>
                                </>
                              )}
                            </div>
                          </div>
                          {TxnEnableFieldsMap.get(
                            'display_customer_signature'
                          ) && (
                            <div
                              style={{
                                width: '50%',
                                textAlign: 'end',
                                alignSelf: 'flex-end',
                                paddingRight: '10px'
                              }}
                            >
                              <p>Customer's Signature</p>
                            </div>
                          )}
                        </div>
                        <div style={{ textAlign: 'center' }}>
                          {settings.boolJurisdiction &&
                            settings.jurisdiction !== '' && (
                              <p>{settings.jurisdiction}</p>
                            )}
                        </div>
                      </div>
                    ) : (
                      <div
                        style={{
                          border: '1px solid',
                          breakInside: 'avoid',
                          width: '100%',
                          display: 'flex',
                          flexDirection: 'row',
                          borderTop: 'none'
                        }}
                      >
                        <div
                          style={{
                            width: '50%',
                            display: 'flex',
                            flexDirection: 'column',
                            paddingLeft: '10px'
                          }}
                        >
                          <p>
                            For{' '}
                            {settings.boolCompanyName &&
                              settings.strCompanyName}
                          </p>
                          <div style={{ width: '50%' }}>
                            {settings.boolSignature && settings.strSignature ? (
                              <>
                                <Box
                                  component="img"
                                  style={
                                    settings.signatureSize === 'Small'
                                      ? {
                                          width: signatureSmall,
                                          height: signatureSmall,
                                          marginLeft: '20px'
                                        }
                                      : settings.signatureSize === 'Medium'
                                      ? {
                                          width: signatureMedium,
                                          height: signatureMedium,
                                          marginLeft: '20px'
                                        }
                                      : {
                                          width: signatureLarge,
                                          height: signatureLarge,
                                          marginLeft: '20px'
                                        }
                                  }
                                  src={settings.strSignature}
                                />
                                <p>Authorised signature</p>
                              </>
                            ) : (
                              <>
                                {this.getSeparator(5, classes.separator)}
                                <p>Authorised signature</p>
                              </>
                            )}
                          </div>
                        </div>
                        {TxnEnableFieldsMap.get(
                          'display_customer_signature'
                        ) && (
                          <div
                            style={{
                              width: '50%',
                              textAlign: 'end',
                              alignSelf: 'flex-end',
                              paddingRight: '10px'
                            }}
                          >
                            <p>Customer's Signature</p>
                          </div>
                        )}
                      </div>
                    )}
                  </div>
                ))
              : ''}
          </div>
        ) : settings.theme === 'Theme 5' ? (
          <div
            style={
              settings.textSize === 'Small'
                ? { fontSize: txtSmall }
                : settings.textSize === 'Medium'
                ? { fontSize: txtMedium }
                : { fontSize: txtLarge }
            }
          >
            {this.props && this.props.data
              ? format.map((item, index) => (
                  <div
                    style={{
                      paddingTop: '0px',
                      pageBreakAfter: 'always',
                      paddingBottom: '0px',
                      width: '100%',
                      padding: '5px',
                      fontFamily: 'Roboto',
                      wordBreak: 'break-word'
                    }}
                  >
                    <div style={{ border: '1px solid', minHeight: '60px' }}>
                      <h1 style={{ marginTop: '10px' }}>
                        <center>{data.mainTitle}</center>
                      </h1>
                      {item.name != '' && (
                        <p
                          style={{
                            float: 'right',
                            marginRight: '2px',
                            padding: '5px',
                            border: '1px solid #8080807a',
                            color: '#808080bf',
                            fontWeight: 'bold',
                            fontSize: '11px',
                            height: 'auto',
                            marginTop: '-29px'
                          }}
                        >
                          {item.name}
                        </p>
                      )}
                      {settings.boolBisHallmark && (
                        <div style={{ float: 'left', marginTop: '-39px' }}>
                          <Box
                            component="img"
                            style={{
                              ...(settings.logoSize === 'Small'
                                ? {
                                    width: bisLogoSmall,
                                    height: bisLogoHeightS
                                  }
                                : settings.logoSize === 'Medium'
                                ? {
                                    width: bisLogoMedium,
                                    height: bisLogoHeightM
                                  }
                                : {
                                    width: bisLogoLarge,
                                    height: bisLogoHeightL
                                  }),
                              padding: '5px'
                            }}
                            src={bisImage}
                          />
                        </div>
                      )}
                    </div>

                    <div
                      style={{
                        display: 'flex',
                        flexDirection: 'row',
                        border: '1px solid',
                        clear: 'both'
                      }}
                    >
                      <div style={{ width: '50%', borderRight: '1px solid' }}>
                        <div
                          style={{
                            display: 'flex',
                            flexDirection: 'row',
                            paddingLeft: '12px'
                          }}
                        >
                          {settings.boolCompanyLogo && (
                            <div
                              style={{
                                width: '25%',
                                paddingRight: '5px',
                                alignSelf: 'center'
                              }}
                            >
                              <Box
                                component="img"
                                style={
                                  settings.logoSize === 'Small'
                                    ? { width: logoSmall, height: logoHeightS }
                                    : settings.logoSize === 'Medium'
                                    ? { width: logoMedium, height: logoHeightM }
                                    : { width: logoLarge, height: logoHeightL }
                                }
                                src={settings.fileCompanyLogo}
                              />
                            </div>
                          )}
                          <div>
                            <p>
                              {settings.boolCompanyName && (
                                <Fragment>
                                  <h1>
                                    <strong
                                      style={{
                                        color: settings.companyNameColor
                                      }}
                                    >
                                      {settings.strCompanyName}
                                    </strong>
                                  </h1>
                                </Fragment>
                              )}
                              {settings.boolCompanyAdditionalDesc && (
                                <Fragment>
                                  {' '}
                                  {settings.companyAdditionalDesc}
                                  <br />
                                </Fragment>
                              )}
                              {settings.boolGSTIN && (
                                <Fragment>GSTIN: {settings.strGSTIN}</Fragment>
                              )}
                              {settings.boolPAN && (
                                <Fragment>
                                  <br />
                                  PAN: {settings.strPAN}
                                </Fragment>
                              )}
                              {settings.boolAddress && (
                                <Fragment>
                                  <br />
                                  {settings.strAddress}
                                </Fragment>
                              )}
                              {settings.boolPhone && (
                                <Fragment>
                                  <br />
                                  Ph. no: {settings.strPhone}
                                </Fragment>
                              )}
                              {settings.boolEmail || settings.boolWebsite ? (
                                <>
                                  <Fragment>
                                    <br />
                                    Email: {settings.strEmail}
                                  </Fragment>

                                  {settings.boolWebsite && (
                                    <Fragment>
                                      {' '}
                                      Website: {settings.strEmail}
                                    </Fragment>
                                  )}
                                </>
                              ) : (
                                ''
                              )}
                            </p>
                          </div>
                        </div>
                        <div style={{ borderTop: '1px solid' }}>
                          {_data.delivery_challan_invoice_number &&
                          data.shipToCustomerName ? (
                            <p
                              style={{
                                textAlign: 'left',
                                paddingLeft: '12px',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              {/* {<br />} */}
                              <b>{data.billTitle}</b>
                              {<br />}
                              <b>{data.shipToCustomerName}</b>
                              {<br />}
                              {data.shipToCustomerAddress ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.shipToCustomerAddress}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.shipToCustomerPhoneNo ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Ph. no: {data.shipToCustomerPhoneNo}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.shipToCustomerGSTNo ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  GSTIN: {data.shipToCustomerGSTNo}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.shipToCustomerState ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.shipToCustomerState}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                            </p>
                          ) : (
                            <p
                              style={{
                                textAlign: 'left',
                                paddingLeft: '12px',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              <b>{data.billTitle}</b>
                              {<br />}
                              <b>{data.tname}</b>
                              {<br />}
                              {data.tadd ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.tadd}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.tphone ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Ph No: {data.tphone}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.tgstn ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  <b>{data.tgstn}</b>
                                </p>
                              ) : (
                                ''
                              )}
                              {_data.aadharNumber ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Aaadhar No: {_data.aadharNumber}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.tstate ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.tstate}
                                </p>
                              ) : (
                                ''
                              )}
                            </p>
                          )}
                        </div>
                      </div>
                      <div
                        style={{
                          width: '50%',
                          display: 'flex',
                          flexDirection: 'column'
                        }}
                      >
                        <div
                          style={{
                            width: '100%',
                            display: 'flex',
                            flexDirection: 'row',
                            borderBottom: '1px solid'
                          }}
                        >
                          <div
                            style={{
                              width: '50%',
                              borderRight: '1px solid',
                              paddingLeft: '3px'
                            }}
                          >
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all',
                                fontWeight: 600
                              }}
                            >
                              <b>
                                {data.invoiceNoTitle}
                                :
                                <br />
                                {data.invoiceNumber}
                              </b>
                            </p>
                          </div>
                          <div style={{ width: '50%', paddingLeft: '3px' }}>
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              {_data.purchase_order_invoice_number ? (
                                <b>PO Date: </b>
                              ) : data.salesReturnDate ? (
                                <b>Invoice Date:</b>
                              ) : (
                                <b>Date: </b>
                              )}
                              <br />
                              {dateFormatter(data.date) + ' '}{' '}
                              {TxnEnableFieldsMap.get(
                                'display_bill_transaction_time'
                              ) && getTimefromTimeStamp(data.updatedAt)}
                            </p>
                          </div>
                        </div>
                        {taxSettingsData?.exporterCodeNo && (
                          <div
                            style={{
                              width: '100%',
                              display: 'flex',
                              flexDirection: 'row',
                              borderBottom: '1px solid'
                            }}
                          >
                            <div
                              style={{
                                width: '50%',
                                borderRight: '1px solid',
                                paddingLeft: '3px'
                              }}
                            >
                              <p
                                style={{
                                  textAlign: 'left',
                                  flex: 1,
                                  wordBreak: 'keep-all',
                                  fontWeight: 600
                                }}
                              >
                                <b> EXP Ref: </b>{' '}
                                {taxSettingsData?.exporterCodeNo}
                              </p>
                            </div>
                            <div style={{ width: '50%', paddingLeft: '3px' }}>
                              <p
                                style={{
                                  textAlign: 'left',
                                  flex: 1,
                                  wordBreak: 'keep-all'
                                }}
                              >
                                <b> EXP Reg Date: </b>{' '}
                                {taxSettingsData?.exporterRegistrationDate}
                              </p>
                            </div>
                          </div>
                        )}
                        <div
                          style={{
                            width: '100%',
                            display: 'flex',
                            flexDirection: 'row',
                            borderBottom: '1px solid'
                          }}
                        >
                          <div
                            style={{
                              width: '50%',
                              borderRight: '1px solid',
                              paddingLeft: '3px'
                            }}
                          >
                            {data.salesReturnDate && (
                              <>
                                <p
                                  style={{
                                    textAlign: 'left',
                                    flex: 1,
                                    wordBreak: 'keep-all'
                                  }}
                                >
                                  <b>Return Date : </b>
                                  <br />
                                  {dateFormatter(data.salesReturnDate)}
                                </p>
                                <p
                                  style={{
                                    textAlign: 'left',
                                    flex: 1,
                                    wordBreak: 'keep-all'
                                  }}
                                >
                                  <b>Invoice No. :</b>
                                  {' ' + data.salesInvoiceNumber}
                                </p>
                              </>
                            )}
                            <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                              <b>Place Of Supply:</b>
                              <br />
                              {data.placeOfSupplyName ? (
                                data.placeOfSupplyName
                              ) : (
                                <br />
                              )}
                            </p>
                            {_data.rateList &&
                              _data.rateList.length > 0 &&
                              localStorage.getItem('isJewellery') ===
                                'true' && (
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  <b>Due Date:</b>
                                  <br />
                                  {data.duedate ? (
                                    dateFormatter(data.duedate)
                                  ) : (
                                    <br />
                                  )}
                                </p>
                              )}
                          </div>
                          <div style={{ width: '50%', paddingLeft: '3px' }}>
                            {_data.rateList &&
                            _data.rateList.length > 0 &&
                            localStorage.getItem('isJewellery') === 'true' ? (
                              getMetalNRates()
                            ) : (
                              <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                <b>Due Date:</b>
                                <br />
                                {data.duedate ? (
                                  dateFormatter(data.duedate)
                                ) : (
                                  <br />
                                )}
                              </p>
                            )}
                          </div>
                        </div>
                        {
                          <div
                            style={{
                              width: '100%',
                              display: 'flex',
                              flexDirection: 'row',
                              borderBottom: '1px solid'
                            }}
                          >
                            {true && data.exportCountryOrigin !== '' && (
                              <div
                                style={{
                                  width: '50%',
                                  borderRight: '1px solid',
                                  paddingLeft: '3px'
                                }}
                              >
                                <p
                                  style={{
                                    textAlign: 'left',
                                    flex: 1,
                                    wordBreak: 'keep-all'
                                  }}
                                >
                                  <b>Country of origin{' : '}</b>
                                  {data.exportCountryOrigin}
                                </p>
                              </div>
                            )}

                            {true && data.exportCountry !== '' && (
                              <div style={{ width: '50%', paddingLeft: '3px' }}>
                                <p
                                  style={{
                                    textAlign: 'left',
                                    flex: 1,
                                    wordBreak: 'keep-all'
                                  }}
                                >
                                  <b>Country of Final{' : '}</b>
                                  {data.exportCountry}
                                </p>
                              </div>
                            )}
                          </div>
                        }

                        <div
                          style={{
                            width: '100%',
                            display: 'flex',
                            flexDirection: 'row'
                          }}
                        >
                          <div
                            style={{
                              width: '50%',
                              borderRight: '1px solid',
                              paddingLeft: '3px'
                            }}
                          >
                            {data.isSale && data.shipToCustomerName && (
                              <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                <b>
                                  {TxnSettings?.enableBuyerOtherThanConsignee
                                    ? 'Buyer (Other Consignee)'
                                    : 'Ship To'}
                                </b>
                                {<br />}
                                {data.shipToCustomerName
                                  ? data.shipToCustomerName
                                  : 'N/A'}
                                {<br />}
                                {data.shipToCustomerAddress && (
                                  <p
                                    style={{
                                      marginTop: '0px',
                                      paddingTop: '0px',
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    {data.shipToCustomerAddress}
                                    {<br />}
                                  </p>
                                )}
                                {data.shipToCustomerPhoneNo && (
                                  <p
                                    style={{
                                      marginTop: '0px',
                                      paddingTop: '0px',
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    Ph No: {data.shipToCustomerPhoneNo}
                                    {<br />}
                                  </p>
                                )}
                                {data.shipToCustomerGSTNo && (
                                  <p
                                    style={{
                                      marginTop: '0px',
                                      paddingTop: '0px',
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    <b> GSTIN: {data.shipToCustomerGSTNo}</b>
                                  </p>
                                )}
                                {data.shipToCustomerState ? (
                                  <p
                                    style={{
                                      marginTop: '0px',
                                      paddingTop: '0px',
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    {data.shipToCustomerState}
                                    {<br />}
                                  </p>
                                ) : (
                                  ''
                                )}

                                {isTemple && (
                                  <div
                                    dangerouslySetInnerHTML={{
                                      __html: data.astrologyDetails + '<br />'
                                    }}
                                  ></div>
                                )}
                                {isTemple && (
                                  <div
                                    dangerouslySetInnerHTML={{
                                      __html:
                                        data.additionalTempleDetails + '<br />'
                                    }}
                                  ></div>
                                )}
                              </p>
                            )}
                          </div>
                          <div
                            style={{
                              width: '50%',
                              paddingLeft: '3px',
                              minHeight: _data.delivery_challan_invoice_number
                                ? '175px'
                                : '150px'
                            }}
                          >
                            {data.order_type === 'kot' ? (
                              <>
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  <b>Table No.: </b>
                                  {data.tableNumber && data.tableNumber}
                                </p>
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  <b>Chairs : </b>
                                  {data.chairsUsedInString &&
                                    data.chairsUsedInString}
                                </p>
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  <b>Waiter Name : </b>
                                  {data.waiter_name && data.waiter_name}
                                </p>
                              </>
                            ) : (
                              <>
                                {TxnSettings &&
                                  TxnEnableFieldsMap.get(
                                    'display_job_work_employee'
                                  ) && (
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      <b>Job By{' : '}</b>
                                      {_data.jobAssignedEmployeeName}
                                    </p>
                                  )}
                                {TxnSettings &&
                                  TxnEnableFieldsMap.get(
                                    'display_salesman'
                                  ) && (
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      <b>Sales By{' : '}</b>
                                      {_data.salesEmployeeName}
                                    </p>
                                  )}
                                {_data.backToBackPurchaseNumber &&
                                  _data.supervisorName !== '' && (
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      <b>Supervisor{' : '}</b>
                                      {_data.supervisorName}
                                    </p>
                                  )}
                                {_data.backToBackPurchaseNumber &&
                                  _data.materialsInChargeName !== '' && (
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      <b>Materials In Charge{' : '}</b>
                                      {_data.materialsInChargeName}
                                    </p>
                                  )}
                                {data.eWayBillNo && data.eWayBillNo !== '' && (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    <b>E-Way Bill No : </b>
                                    {data.eWayBillNo !== '' && data.eWayBillNo}
                                  </p>
                                )}
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  {TxnSettings &&
                                  TxnEnableFieldsMap.get(
                                    'display_transportation'
                                  ) ? (
                                    <>
                                      <b>Transport Mode: </b>
                                      {data.transportMode && data.transportMode}
                                    </>
                                  ) : (
                                    <>
                                      <b> </b>{' '}
                                    </>
                                  )}
                                </p>
                                {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) ? (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    <b>Port of loading: </b>

                                    {TxnSettings &&
                                      TxnEnableFieldsMap.get(
                                        'display_transportation'
                                      ) &&
                                      data.portOfLoading && (
                                        <>
                                          <br />
                                          {data.portOfLoading}
                                        </>
                                      )}
                                  </p>
                                ) : (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    <b> </b>
                                    <>
                                      <br />
                                      {}
                                    </>
                                  </p>
                                )}

                                {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) ? (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    <b>Port of Discharge: </b>

                                    {TxnSettings &&
                                      TxnEnableFieldsMap.get(
                                        'display_transportation'
                                      ) &&
                                      data.portOfDischarge && (
                                        <>
                                          <br />
                                          {data.portOfDischarge}
                                        </>
                                      )}
                                  </p>
                                ) : (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    <b> </b>
                                    <>
                                      <br />
                                      {}
                                    </>
                                  </p>
                                )}

                                {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) ? (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    <b>Vessel Flight No: </b>

                                    {TxnSettings &&
                                      TxnEnableFieldsMap.get(
                                        'display_transportation'
                                      ) &&
                                      data.vesselFlightNo && (
                                        <>{data.vesselFlightNo}</>
                                      )}
                                  </p>
                                ) : (
                                  <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                    <b> </b>
                                    <>{}</>
                                  </p>
                                )}
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  {TxnSettings &&
                                  TxnEnableFieldsMap.get(
                                    'display_transportation'
                                  ) ? (
                                    <>
                                      <b>Transporter Id : </b>
                                      {data.transporterId && data.transporterId}
                                    </>
                                  ) : (
                                    <>
                                      <b> </b>{' '}
                                    </>
                                  )}
                                </p>
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  {TxnSettings &&
                                  TxnEnableFieldsMap.get(
                                    'display_transportation'
                                  ) ? (
                                    <>
                                      <b> Vehicle No : </b>
                                      {data.vehicleNo && data.vehicleNo}
                                    </>
                                  ) : (
                                    <>
                                      <b> </b>{' '}
                                    </>
                                  )}
                                </p>
                              </>
                            )}
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              {TxnSettings &&
                              TxnEnableFieldsMap.get('display_po') ? (
                                <>
                                  <b>PO Number: </b>
                                  {data.poNo && data.poNo}
                                </>
                              ) : (
                                <>
                                  <b> </b>{' '}
                                </>
                              )}
                            </p>
                            <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                              {TxnSettings &&
                              TxnEnableFieldsMap.get('display_po') ? (
                                <>
                                  <b>PO Date:</b>
                                  {data.poDate &&
                                    dateFormatter(data.poDate) + ' '}
                                </>
                              ) : (
                                <>
                                  <b></b>{' '}
                                </>
                              )}
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>

                    <div>
                      {getHeaderRow()}

                      <div
                        style={{ border: '1px solid', minHeight: minRowHeight }}
                      >
                        {_data.item_list && _data.item_list.length > 0
                          ? getInvoiceRows()
                          : ''}
                      </div>

                      {/***************Theme 5 - Footer************/}
                      {!isPackagePreivew ? (
                        <div>
                          <div
                            style={{
                              border: '1px solid',
                              breakInside: 'avoid',
                              fontWeight: 600,
                              display: 'flex',
                              flexDirection: 'row'
                            }}
                          >
                            <div
                              style={{
                                borderRight: '1px solid ',
                                textAlign: 'center',
                                width: '10%'
                              }}
                            ></div>
                            <div
                              style={{
                                textAlign: 'center',
                                borderRight: '1px solid ',
                                paddingRight: '3px',
                                width: '30%'
                              }}
                            >
                              Total
                            </div>

                            {/******* HSN ********/}
                            {TxnEnableFieldsMap.get('display_hsn') && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {/********* Serial/IMEI No. *********/}
                            {TxnSettings &&
                              TxnEnableFieldsMap.get(
                                'display_product_serial_imei'
                              ) && (
                                <div
                                  style={{
                                    borderRight: '1px solid ',
                                    paddingRight: '3px',
                                    width: '15%',
                                    textAlign: 'right'
                                  }}
                                ></div>
                              )}

                            {/* Batch Number */}
                            {TxnEnableFieldsMap.get(
                              'display_product_batch_number'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {/* Barcode */}
                            {TxnEnableFieldsMap.get(
                              'display_product_barcode'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {/* Brand */}
                            {TxnEnableFieldsMap.get(
                              'display_product_brand'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {/* Model No */}
                            {TxnEnableFieldsMap.get(
                              'display_product_model_no'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {/* Manufacturing Date */}
                            {TxnEnableFieldsMap.get(
                              'display_product_manufacturing_date'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {/* Expiry Date */}
                            {TxnEnableFieldsMap.get(
                              'display_product_expiry_date'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_quantity'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              >
                                {totalqty}
                              </div>
                            )}

                            {/* Total Free Quantity */}
                            {TxnEnableFieldsMap.get(
                              'display_product_free_quantity'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              >
                                {totalfreeqty}
                              </div>
                            )}

                            {/* Unit */}
                            {TxnEnableFieldsMap.get('display_product_unit') && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get('display_product_mrp') && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_price'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  width: '15%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {_data.exportConversionRate > 0 &&
                              TxnEnableFieldsMap.get(
                                'display_product_price_other_currency'
                              ) && (
                                <p
                                  style={{
                                    borderRight: '1px solid ',
                                    width: '15%',
                                    textAlign: 'right',
                                    paddingRight: '3px'
                                  }}
                                ></p>
                              )}

                            {TxnEnableFieldsMap.get(
                              'display_product_price_per_gram'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  width: '30%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_gross_weight'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              >
                                {parseFloat(totalGrossWt).toFixed(3)}
                              </div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_stone_weight'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              >
                                {parseFloat(totalStoneWt).toFixed(3)}
                              </div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_net_weight'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              >
                                {parseFloat(totalNetWt).toFixed(3)}
                              </div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_wastage'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_making_charge'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_making_charge_per_gram'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_stone_charge'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_purity'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              ></div>
                            )}

                            {/* Copper */}
                            {TxnEnableFieldsMap.get(
                              'display_product_copper'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_discount'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              >
                                {data.exportConversionRate > 0 ? (
                                  <span>
                                    {getFloatWithTwoDecimal(
                                      data.subTotalDisc /
                                        data.exportConversionRate
                                    )}
                                  </span>
                                ) : (
                                  <span>
                                    â‚¹{' '}
                                    {getFloatWithTwoDecimal(data.subTotalDisc)}
                                  </span>
                                )}
                              </div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_gst_percentage'
                            ) && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get('display_product_gst') && (
                              <div
                                style={{
                                  borderRight: '1px solid ',
                                  paddingRight: '3px',
                                  width: '15%',
                                  textAlign: 'right'
                                }}
                              >
                                {getFloatWithTwoDecimal(totaltax_gst)}
                              </div>
                            )}

                            {data.isSale ? (
                              <>
                                {TxnEnableFieldsMap.get(
                                  'display_product_total_amount'
                                ) && (
                                  <div
                                    style={{
                                      width: '25%',
                                      textAlign: 'right',
                                      paddingRight: '3px'
                                    }}
                                  >
                                    {(
                                      getFloatWithTwoDecimal(
                                        data.totalTaxableAmount
                                      ) / (_data.exportConversionRate || 1)
                                    ).toFixed(2)}
                                  </div>
                                )}
                              </>
                            ) : (
                              <div
                                style={{
                                  width: '25%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              >
                                {getFloatWithTwoDecimal(
                                  data.totalTaxableAmount
                                )}
                              </div>
                            )}

                            {_data.exportConversionRate > 0 &&
                              TxnEnableFieldsMap.get(
                                'display_product_total_amount_other'
                              ) &&
                              data.amountOtherCurrency && (
                                <div
                                  style={{
                                    paddingRight: '3px',
                                    width: '25%',
                                    textAlign: 'right',
                                    borderLeft: '1px solid '
                                  }}
                                >
                                  {data.amountOtherCurrency?.toFixed(2)}
                                </div>
                              )}
                          </div>

                          <div
                            style={{
                              display: 'flex',
                              flexDirection: 'row',
                              border: '1px solid',
                              breakInside: 'avoid',
                              width: 'auto'
                            }}
                          >
                            <div style={{ width: '70%', textAlign: 'right' }}>
                              <b>Sub Total</b>
                            </div>
                            <div
                              style={{
                                width: '30%',
                                textAlign: 'right',
                                paddingRight: '3px'
                              }}
                            >
                              {data.exportConversionRate ? (
                                <b>
                                  {data.exportCurrency}{' '}
                                  {(
                                    getFloatWithTwoDecimal(
                                      data.totalTaxableAmount +
                                        data.subTotalDisc
                                    ) / data.exportConversionRate
                                  )?.toFixed(2)}
                                  {/* {getFloatWithTwoDecimal(data.subTotal)} */}
                                </b>
                              ) : (
                                <b>
                                  â‚¹{' '}
                                  {/* {getFloatWithTwoDecimal(
                                    data.totalTaxableAmount + data.subTotalDisc
                                  )} */}
                                  {getFloatWithTwoDecimal(data.subTotal)}
                                </b>
                              )}
                            </div>
                          </div>

                          {settings.boolTaxDetails && gstMap.size > 0 && (
                            <div
                              style={{
                                border: '1px solid',
                                breakInside: 'avoid',
                                width: 'auto'
                              }}
                            >
                              {Array.from(gstMap.keys()).map((key) => {
                                return (
                                  <div
                                    style={{
                                      display: 'flex',
                                      flexDirection: 'row'
                                    }}
                                  >
                                    <div
                                      style={{
                                        width: '70%',
                                        textAlign: 'right'
                                      }}
                                    >
                                      <b>
                                        {' '}
                                        <p>{key}</p>
                                      </b>
                                    </div>
                                    <div
                                      style={{
                                        width: '30%',
                                        textAlign: 'right',
                                        paddingRight: '3px'
                                      }}
                                    >
                                      <b>
                                        {' '}
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(
                                          gstMap.get(key)
                                        )}
                                      </b>
                                    </div>
                                  </div>
                                );
                              })}
                            </div>
                          )}

                          <div
                            style={{
                              border: '1px solid',
                              breakInside: 'avoid',
                              width: 'auto'
                            }}
                          >
                            {_data.exportConversionRate === 0 &&
                            TxnEnableFieldsMap.get(
                              'display_bill_packing_charge'
                            ) &&
                            _data.packing_charge ? (
                              <div
                                style={{
                                  display: 'flex',
                                  flexDirection: 'row',
                                  width: 'auto'
                                }}
                              >
                                <div
                                  style={{ width: '70%', textAlign: 'right' }}
                                >
                                  <div>
                                    <p>Package Charge</p>
                                  </div>
                                </div>
                                <div
                                  style={{
                                    width: '30%',
                                    textAlign: 'right',
                                    paddingRight: '3px'
                                  }}
                                >
                                  <div>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all'
                                      }}
                                    >
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.packing_charge
                                          ? _data.packing_charge
                                          : 0
                                      )}
                                    </p>
                                  </div>
                                </div>
                              </div>
                            ) : (
                              ' '
                            )}

                            {_data.exportConversionRate > 0 &&
                            TxnEnableFieldsMap.get(
                              'display_packing_other_currency'
                            ) &&
                            _data.packingChargeOtherCurrency ? (
                              <div
                                style={{
                                  display: 'flex',
                                  flexDirection: 'row',
                                  width: 'auto'
                                }}
                              >
                                <div
                                  style={{ width: '70%', textAlign: 'right' }}
                                >
                                  <div>
                                    {_data.packingChargeOtherCurrency && (
                                      <p>Package Charge</p>
                                    )}
                                  </div>
                                </div>
                                <div
                                  style={{
                                    width: '30%',
                                    textAlign: 'right',
                                    paddingRight: '3px'
                                  }}
                                >
                                  <div>
                                    {_data.packingChargeOtherCurrency && (
                                      <div>
                                        <p>
                                          {data.exportCurrency}{' '}
                                          {getFloatWithTwoDecimal(
                                            _data.packingChargeOtherCurrency
                                              ? _data.packingChargeOtherCurrency
                                              : 0
                                          )}
                                        </p>
                                      </div>
                                    )}
                                  </div>
                                </div>
                              </div>
                            ) : (
                              ' '
                            )}

                            {_data.exportConversionRate === 0 &&
                            TxnEnableFieldsMap.get(
                              'display_bill_shipping_charge'
                            ) &&
                            !_data.backToBackPurchaseNumber &&
                            _data.shipping_charge ? (
                              <div
                                style={{
                                  display: 'flex',
                                  flexDirection: 'row'
                                }}
                              >
                                <div
                                  style={{ width: '70%', textAlign: 'right' }}
                                >
                                  <div>
                                    <p>Shipping Charge</p>
                                  </div>
                                </div>
                                <div
                                  style={{
                                    width: '30%',
                                    textAlign: 'right',
                                    paddingRight: '3px'
                                  }}
                                >
                                  <div>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all'
                                      }}
                                    >
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.shipping_charge
                                          ? _data.shipping_charge
                                          : 0
                                      )}
                                    </p>
                                  </div>
                                </div>
                              </div>
                            ) : (
                              ' '
                            )}

                            {_data.exportConversionRate > 0 &&
                            TxnEnableFieldsMap.get(
                              'display_shipping_other_currency'
                            ) &&
                            !_data.backToBackPurchaseNumber &&
                            _data.shippingChargeOtherCurrency ? (
                              <div
                                style={{
                                  display: 'flex',
                                  flexDirection: 'row'
                                }}
                              >
                                <div
                                  style={{ width: '70%', textAlign: 'right' }}
                                >
                                  <div>
                                    {_data.shippingChargeOtherCurrency && (
                                      <p>Shipping Charge</p>
                                    )}
                                  </div>
                                </div>
                                <div
                                  style={{
                                    width: '30%',
                                    textAlign: 'right',
                                    paddingRight: '3px'
                                  }}
                                >
                                  <div>
                                    {_data.shippingChargeOtherCurrency && (
                                      <div>
                                        <p>
                                          {data.exportCurrency}{' '}
                                          {getFloatWithTwoDecimal(
                                            _data.shippingChargeOtherCurrency
                                              ? _data.shippingChargeOtherCurrency
                                              : 0
                                          )}
                                        </p>
                                      </div>
                                    )}
                                  </div>
                                </div>
                              </div>
                            ) : (
                              ' '
                            )}

                            <div
                              style={{
                                display: 'flex',
                                flexDirection: 'row'
                              }}
                            >
                              <div style={{ width: '70%', textAlign: 'right' }}>
                                {_data.freightCharge !== 0 &&
                                  _data.backToBackPurchaseNumber && (
                                    <>
                                      {TxnEnableFieldsMap.get(
                                        'display_bill_shipping_charge'
                                      ) && <p>Freight Charge</p>}
                                    </>
                                  )}
                              </div>
                              <div
                                style={{
                                  width: '30%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              >
                                {_data.freightCharge !== 0 &&
                                  _data.backToBackPurchaseNumber && (
                                    <>
                                      {TxnEnableFieldsMap.get(
                                        'display_bill_shipping_charge'
                                      ) && (
                                        <p
                                          style={{
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                        >
                                          â‚¹{' '}
                                          {getFloatWithTwoDecimal(
                                            _data.freightCharge
                                              ? _data.freightCharge
                                              : 0
                                          )}
                                        </p>
                                      )}
                                    </>
                                  )}
                              </div>
                            </div>

                            {_data.exportConversionRate === 0 &&
                            TxnEnableFieldsMap.get('display_bill_insurance') &&
                            _data.insurance &&
                            _data.insurance.amount !== 0 ? (
                              <div
                                style={{
                                  display: 'flex',
                                  flexDirection: 'row'
                                }}
                              >
                                <div
                                  style={{ width: '70%', textAlign: 'right' }}
                                >
                                  <p>Insurance</p>
                                </div>
                                <div
                                  style={{
                                    width: '30%',
                                    textAlign: 'right',
                                    paddingRight: '3px'
                                  }}
                                >
                                  <p
                                    style={{
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    â‚¹{' '}
                                    {getFloatWithTwoDecimal(
                                      _data.insurance && _data.insurance.amount
                                        ? _data.insurance.amount
                                        : 0
                                    )}
                                  </p>
                                </div>
                              </div>
                            ) : (
                              ' '
                            )}

                            {_data.exportConversionRate > 0 &&
                            TxnEnableFieldsMap.get(
                              'display_insurance_other_currency'
                            ) &&
                            _data.insurance &&
                            _data.insurance.amountOtherCurrency ? (
                              <div
                                style={{
                                  display: 'flex',
                                  flexDirection: 'row'
                                }}
                              >
                                <div
                                  style={{ width: '70%', textAlign: 'right' }}
                                >
                                  <p>Insurance</p>
                                </div>
                                <div
                                  style={{
                                    width: '30%',
                                    textAlign: 'right',
                                    paddingRight: '3px'
                                  }}
                                >
                                  <p
                                    style={{
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    {data.exportCurrency}{' '}
                                    {getFloatWithTwoDecimal(
                                      _data.insurance &&
                                        _data.insurance.amountOtherCurrency
                                        ? _data.insurance.amountOtherCurrency
                                        : 0
                                    )}
                                  </p>
                                </div>
                              </div>
                            ) : (
                              ' '
                            )}
                          </div>

                          {(TxnEnableFieldsMap.get('display_bill_discount') ||
                            data.tcsAmount > 0) && (
                            <div
                              style={{
                                border: '1px solid',
                                breakInside: 'avoid'
                              }}
                            >
                              {TxnEnableFieldsMap.get(
                                'display_bill_discount'
                              ) &&
                                data.totalDiscount !== 0 && (
                                  <div
                                    style={{
                                      width: '100%',
                                      display: 'flex',
                                      flexDirection: 'row'
                                    }}
                                  >
                                    <div
                                      style={{
                                        width: '70%',
                                        textAlign: 'right'
                                      }}
                                    >
                                      {data.totalDiscount === 0 ? (
                                        ''
                                      ) : (
                                        <>
                                          {((_data.invoice_number &&
                                            TxnEnableFieldsMap.get(
                                              'display_bill_discount'
                                            )) ||
                                            !_data.invoice_number) && (
                                            <p>Total Discount</p>
                                          )}
                                        </>
                                      )}
                                    </div>
                                    <div
                                      style={{
                                        width: '30%',
                                        textAlign: 'right',
                                        paddingRight: '3px'
                                      }}
                                    >
                                      {data.totalDiscount === 0 ? (
                                        ''
                                      ) : (
                                        <>
                                          {((_data.invoice_number &&
                                            TxnEnableFieldsMap.get(
                                              'display_bill_discount'
                                            )) ||
                                            !_data.invoice_number) && (
                                            <p
                                              style={{
                                                flex: 1,
                                                wordBreak: 'keep-all'
                                              }}
                                            >
                                              â‚¹{' '}
                                              {getFloatWithTwoDecimal(
                                                data.totalDiscount
                                              )}
                                            </p>
                                          )}
                                        </>
                                      )}
                                    </div>
                                  </div>
                                )}

                              {/* TCS Amount */}
                              {data.tcsAmount > 0 && (
                                <>
                                  <div
                                    style={{
                                      width: '100%',
                                      display: 'flex',
                                      flexDirection: 'row'
                                    }}
                                  >
                                    <div
                                      style={{
                                        width: '70%',
                                        textAlign: 'right'
                                      }}
                                    >
                                      <p>
                                        TCS@{data.tcsRate}% {data.tcsCode}
                                      </p>
                                    </div>
                                    <div
                                      style={{
                                        width: '30%',
                                        textAlign: 'right',
                                        paddingRight: '3px'
                                      }}
                                    >
                                      <p
                                        style={{
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(data.tcsAmount)}
                                      </p>
                                    </div>
                                  </div>
                                </>
                              )}

                              {TxnEnableFieldsMap.get('display_product_cess') &&
                                data.totalCess > 0 && (
                                  <>
                                    <div
                                      style={{
                                        width: '100%',
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <div
                                        style={{
                                          width: '70%',
                                          textAlign: 'right'
                                        }}
                                      >
                                        {data.totalCess === 0 ? (
                                          ''
                                        ) : (
                                          <>
                                            {data.totalCess > 0 && (
                                              <p>Total Cess</p>
                                            )}
                                          </>
                                        )}
                                      </div>
                                      <div
                                        style={{
                                          width: '30%',
                                          textAlign: 'right',
                                          paddingRight: '3px'
                                        }}
                                      >
                                        {data.totalCess === 0 ? (
                                          ''
                                        ) : (
                                          <>
                                            {data.totalCess > 0 && (
                                              <p
                                                style={{
                                                  flex: 1,
                                                  wordBreak: 'keep-all'
                                                }}
                                              >
                                                â‚¹{' '}
                                                {getFloatWithTwoDecimal(
                                                  data.totalCess
                                                )}
                                              </p>
                                            )}
                                          </>
                                        )}
                                      </div>
                                    </div>
                                  </>
                                )}
                            </div>
                          )}

                          {String(_data.is_roundoff).toLowerCase() ===
                            'true' && (
                            <div
                              style={{
                                border: '1px solid',
                                display: 'flex',
                                flexDirection: 'row',
                                breakInside: 'avoid'
                              }}
                            >
                              <div style={{ width: '70%', textAlign: 'right' }}>
                                <p style={{ fontWeight: 600 }}>Round off</p>
                              </div>
                              <div
                                style={{
                                  width: '30%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              >
                                <p
                                  style={{
                                    flex: 1,
                                    wordBreak: 'keep-all',
                                    fontWeight: 600
                                  }}
                                >
                                  {data.exportConversionRate ? (
                                    <span>
                                      {data.exportCurrency}{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.round_amount /
                                          data.exportConversionRate
                                      )}
                                    </span>
                                  ) : (
                                    <span>
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.round_amount
                                      )}
                                    </span>
                                  )}
                                </p>
                              </div>
                            </div>
                          )}

                          {_data.estimateType === 'open' ||
                          _data.estimateType === 'close' ? (
                            ''
                          ) : (
                            <>
                              {data.receivedAmount > 0 && (
                                <div
                                  style={{
                                    border: '1px solid',
                                    display: 'flex',
                                    flexDirection: 'row',
                                    breakInside: 'avoid'
                                  }}
                                >
                                  <div
                                    style={{ width: '70%', textAlign: 'right' }}
                                  >
                                    <p>{data.paidReceivedTitle}</p>
                                  </div>
                                  <div
                                    style={{
                                      width: '30%',
                                      textAlign: 'right',
                                      paddingRight: '3px'
                                    }}
                                  >
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        data.receivedAmount
                                      )}
                                    </p>
                                  </div>
                                </div>
                              )}

                              {_data.exportConversionRate === 0 &&
                                data.balanceAmount > 0 && (
                                  <div
                                    style={{
                                      border: '1px solid',
                                      display: 'flex',
                                      flexDirection: 'row',
                                      breakInside: 'avoid'
                                    }}
                                  >
                                    <div
                                      style={{
                                        width: '70%',
                                        textAlign: 'right'
                                      }}
                                    >
                                      <p>Balance</p>
                                    </div>
                                    <div
                                      style={{
                                        width: '30%',
                                        textAlign: 'right',
                                        paddingRight: '3px'
                                      }}
                                    >
                                      <p
                                        style={{
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(
                                          data.balanceAmount
                                        )}
                                      </p>
                                    </div>
                                  </div>
                                )}

                              {settings.boolPaymentMode &&
                                data.paymentType !== '' && (
                                  <>
                                    <div
                                      style={{
                                        border: '1px solid',
                                        display: 'flex',
                                        flexDirection: 'row',
                                        breakInside: 'avoid'
                                      }}
                                    >
                                      <div
                                        style={{
                                          width: '70%',
                                          textAlign: 'right'
                                        }}
                                      >
                                        <p>Payment Type</p>
                                      </div>
                                      <div
                                        style={{
                                          width: '30%',
                                          textAlign: 'right',
                                          paddingRight: '3px'
                                        }}
                                      >
                                        <p
                                          style={{
                                            textTransform: 'capitalize'
                                          }}
                                          dangerouslySetInnerHTML={{
                                            __html: data.paymentType
                                          }}
                                        ></p>
                                      </div>
                                    </div>
                                  </>
                                )}
                              {data.tdsAmount > 0 && (
                                <>
                                  <div
                                    style={{
                                      border: '1px solid',
                                      display: 'flex',
                                      flexDirection: 'row',
                                      breakInside: 'avoid'
                                    }}
                                  >
                                    <div
                                      style={{
                                        width: '70%',
                                        textAlign: 'right'
                                      }}
                                    >
                                      <p>
                                        TDS@{data.tdsRate}% {data.tdsCode}
                                      </p>
                                    </div>
                                    <div
                                      style={{
                                        width: '30%',
                                        textAlign: 'right',
                                        paddingRight: '3px'
                                      }}
                                    >
                                      <p
                                        style={{ textTransform: 'capitalize' }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(data.tdsAmount)}
                                      </p>
                                    </div>
                                  </div>
                                </>
                              )}
                            </>
                          )}

                          <div
                            style={{
                              border: '1px solid',
                              display: 'flex',
                              flexDirection: 'row',
                              breakInside: 'avoid'
                            }}
                          >
                            <div
                              style={{
                                width: '70%',
                                textAlign: 'right',
                                fontWeight: 600
                              }}
                            >
                              <h1>
                                {' '}
                                <p>TOTAL</p>
                              </h1>
                            </div>
                            <div
                              style={{
                                width: '30%',
                                textAlign: 'right',
                                paddingRight: '3px',
                                fontWeight: 600
                              }}
                            >
                              <h1>
                                {' '}
                                <p>
                                  {data.exportConversionRate ? (
                                    <span>
                                      {data.exportCurrency}{' '}
                                      {getFloatWithTwoDecimal(data.totalAmount)}
                                    </span>
                                  ) : (
                                    <span>
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(data.totalAmount)}
                                    </span>
                                  )}
                                </p>
                              </h1>
                            </div>
                          </div>

                          <div
                            style={{
                              border: '1px solid',
                              breakInside: 'avoid'
                            }}
                          >
                            <p
                              style={{
                                textAlign: 'right',
                                paddingRight: '3px',
                                fontWeight: 600
                              }}
                            >
                              Total Amount (in words):{' '}
                              {data.exportConversionRate ? 'USD' : 'INR'}{' '}
                              {data.strTotal}
                            </p>
                          </div>

                          {/* <div
                            style={{
                              border: '1px solid',
                              textAlign: 'right',
                              breakInside: 'avoid'
                            }}
                          >
                            <p style={{ paddingRight: '3px', fontWeight: 600 }}>
                              Amount Payable:{' '}
                              {data.exportConversionRate > 0
                                ? data.exportCurrency
                                : 'â‚¹'}{' '}
                              {getFloatWithTwoDecimal(data.totalAmount)}
                            </p>
                          </div> */}

                          {/****** Outstanding Payble / Receivable *****/}
                          {settings.boolPreviousBalance &&
                            outStandingType &&
                            outStandingBalance !== 0 && (
                              <div
                                style={{
                                  border: '1px solid',
                                  textAlign: 'right',
                                  breakInside: 'avoid'
                                }}
                              >
                                <p
                                  style={{
                                    paddingRight: '3px',
                                    fontWeight: 600
                                  }}
                                >
                                  Outstanding-{outStandingType}: â‚¹{' '}
                                  {getFloatWithTwoDecimal(outStandingBalance)}
                                </p>
                              </div>
                            )}
                          <div
                            style={{
                              border: '1px solid',
                              display: 'flex',
                              flexDirection: 'row',
                              breakInside: 'avoid'
                            }}
                          >
                            <div style={{ width: '50%', paddingLeft: '12px' }}>
                              {(TxnEnableFieldsMap.get('display_bill_notes') ||
                                TxnEnableFieldsMap.get(
                                  'display_total_weight'
                                )) && (
                                <>
                                  <p
                                    style={{
                                      fontWeight: 600,
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    Notes
                                  </p>
                                  <Fragment>
                                    {data.notes && (
                                      <p
                                        style={{
                                          marginTop: '0px',
                                          paddingTop: '0px',
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        {data.notes}
                                      </p>
                                    )}
                                    {TxnEnableFieldsMap.get(
                                      'display_total_weight'
                                    ) && (
                                      <>
                                        {_data.weightIn &&
                                        _data.weightIn > 0 ? (
                                          <div
                                            style={{
                                              textAlign: 'right',
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <p
                                              style={{
                                                fontWeight: 600,
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              Weight In
                                            </p>
                                            <p
                                              style={{
                                                flex: 1,
                                                wordBreak: 'keep-all',
                                                fontWeight: 600,
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              {getFloatWithTwoDecimal(
                                                _data.weightIn
                                                  ? _data.weightIn
                                                  : 0
                                              )}
                                              g
                                            </p>
                                          </div>
                                        ) : null}
                                        {_data.weightOut &&
                                        _data.weightOut > 0 ? (
                                          <div
                                            style={{
                                              textAlign: 'right',
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <p
                                              style={{
                                                fontWeight: 600,
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              Weight Out
                                            </p>
                                            <p
                                              style={{
                                                flex: 1,
                                                wordBreak: 'keep-all',
                                                fontWeight: 600,
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              {getFloatWithTwoDecimal(
                                                _data.weightOut
                                                  ? _data.weightOut
                                                  : 0
                                              )}
                                              g
                                            </p>
                                          </div>
                                        ) : null}
                                        {_data.wastage && _data.wastage > 0 ? (
                                          <div
                                            style={{
                                              textAlign: 'right',
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <p
                                              style={{
                                                fontWeight: 600,
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              Wastage
                                            </p>
                                            <p
                                              style={{
                                                flex: 1,
                                                wordBreak: 'keep-all',
                                                fontWeight: 600,
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              {getFloatWithTwoDecimal(
                                                _data.wastage
                                                  ? _data.wastage
                                                  : 0
                                              )}
                                              g
                                            </p>
                                          </div>
                                        ) : null}
                                      </>
                                    )}
                                  </Fragment>
                                </>
                              )}
                              {!_data.date && settings.boolDesc && (
                                <Fragment>
                                  <p
                                    style={{
                                      fontWeight: 600,
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    Description
                                  </p>
                                  <p
                                    style={{
                                      marginTop: '0px',
                                      paddingTop: '0px',
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    {settings.strDesc}
                                  </p>
                                </Fragment>
                              )}

                              {settings.boolBankDetail && (
                                <div>
                                  {settings.boolBankDetailsOnCreditSaleOnly &&
                                  data.balanceAmount > 0 ? (
                                    <Fragment>
                                      <div>
                                        <p
                                          style={{
                                            fontWeight: 600,
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          BANK DETAILS
                                        </p>
                                        <div
                                          style={{
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <div style={{ width: '40%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              A/C Holder's Name
                                            </p>
                                          </div>
                                          <div style={{ width: '60%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              : {settings.bankAccountHolderName}
                                            </p>
                                          </div>
                                        </div>
                                        <div
                                          style={{
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <div style={{ width: '40%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              BANK NAME
                                            </p>
                                          </div>
                                          <div style={{ width: '60%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              : {settings.bankName}
                                            </p>
                                          </div>
                                        </div>
                                        <div
                                          style={{
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <div style={{ width: '40%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              A/C NO.
                                            </p>
                                          </div>
                                          <div style={{ width: '60%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              : {settings.bankAccountNumber}
                                            </p>
                                          </div>
                                        </div>
                                        <div
                                          style={{
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <div style={{ width: '40%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              IFSC Code
                                            </p>
                                          </div>
                                          <div style={{ width: '60%' }}>
                                            <p
                                              style={{
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              : {settings.bankIfscCode}
                                            </p>
                                          </div>
                                        </div>
                                      </div>
                                    </Fragment>
                                  ) : (
                                    <div>
                                      {!settings.boolBankDetailsOnCreditSaleOnly && (
                                        <Fragment>
                                          <div>
                                            <p
                                              style={{
                                                fontWeight: 600,
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              BANK DETAILS
                                            </p>
                                            <div
                                              style={{
                                                display: 'flex',
                                                flexDirection: 'row'
                                              }}
                                            >
                                              <div style={{ width: '40%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  A/C Holder's Name
                                                </p>
                                              </div>
                                              <div style={{ width: '60%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  :{' '}
                                                  {
                                                    settings.bankAccountHolderName
                                                  }
                                                </p>
                                              </div>
                                            </div>
                                            <div
                                              style={{
                                                display: 'flex',
                                                flexDirection: 'row'
                                              }}
                                            >
                                              <div style={{ width: '40%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  BANK NAME
                                                </p>
                                              </div>
                                              <div style={{ width: '60%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  : {settings.bankName}
                                                </p>
                                              </div>
                                            </div>
                                            <div
                                              style={{
                                                display: 'flex',
                                                flexDirection: 'row'
                                              }}
                                            >
                                              <div style={{ width: '40%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  A/C NO.
                                                </p>
                                              </div>
                                              <div style={{ width: '60%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  : {settings.bankAccountNumber}
                                                </p>
                                              </div>
                                            </div>
                                            <div
                                              style={{
                                                display: 'flex',
                                                flexDirection: 'row'
                                              }}
                                            >
                                              <div style={{ width: '40%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  IFSC Code
                                                </p>
                                              </div>
                                              <div style={{ width: '60%' }}>
                                                <p
                                                  style={{
                                                    marginTop: '0px',
                                                    paddingTop: '0px',
                                                    paddingBottom: '0px',
                                                    marginBottom: '0px'
                                                  }}
                                                >
                                                  : {settings.bankIfscCode}
                                                </p>
                                              </div>
                                            </div>
                                          </div>
                                        </Fragment>
                                      )}
                                    </div>
                                  )}
                                </div>
                              )}
                            </div>
                            <div
                              style={{
                                width: '20%',
                                borderRight: '1px solid',
                                textAlign: 'center'
                              }}
                            >
                              {settings.boolQrCode && (
                                <>
                                  <p
                                    style={{
                                      alignSelf: 'center',
                                      fontWeight: 600
                                    }}
                                  >
                                    Pay using UPI:
                                  </p>
                                  <Fragment>
                                    {this.getSeparator(1, classes.separator)}
                                    <QRCode
                                      value={
                                        data.qrCodestr ? data.qrCodestr : ''
                                      }
                                      size={75}
                                    />
                                  </Fragment>
                                </>
                              )}
                              {TxnEnableFieldsMap.get(
                                'display_customer_signature'
                              ) && (
                                <div
                                  style={{
                                    textAlign: 'center',
                                    alignSelf: 'flex-end'
                                  }}
                                >
                                  {this.getSeparator(8, classes.separator)}
                                  <p>Customer's Signature</p>
                                </div>
                              )}
                            </div>
                            <div
                              style={{
                                width: '30%',
                                textAlign: 'left',
                                paddingLeft: '5px'
                              }}
                            >
                              <p>For {settings.strCompanyName}</p>
                              {settings.boolSignature &&
                              settings.strSignature ? (
                                <>
                                  <Box
                                    component="img"
                                    style={
                                      settings.signatureSize === 'Small'
                                        ? {
                                            width: signatureSmall,
                                            height: signatureSmall
                                          }
                                        : settings.signatureSize === 'Medium'
                                        ? {
                                            width: signatureMedium,
                                            height: signatureMedium
                                          }
                                        : {
                                            width: signatureLarge,
                                            height: signatureLarge
                                          }
                                    }
                                    src={settings.strSignature}
                                  />
                                  <p>Authorised signature</p>
                                </>
                              ) : (
                                <>
                                  {this.getSeparator(8, classes.separator)}
                                  <p>Authorised signature</p>
                                </>
                              )}
                            </div>
                          </div>

                          <div
                            style={{
                              breakInside: 'avoid',
                              border: '1px solid',
                              display: 'flex',
                              flexDirection: 'row'
                            }}
                          >
                            <div style={{ width: '50%', paddingLeft: '3px' }}>
                              <p style={{ fontWeight: 600 }}>
                                Terms and Conditions:
                              </p>
                              {data.terms !== '' ? (
                                <Fragment>
                                  <div style={{ whiteSpace: 'break-spaces' }}>
                                    {data.terms}
                                  </div>
                                </Fragment>
                              ) : (
                                this.getSeparator(4, classes.separator)
                              )}
                            </div>
                            <div
                              style={{
                                width: '50%',
                                borderRight: '1px solid',
                                paddingLeft: '12px',
                                paddingRight: '12px'
                              }}
                            >
                              {data.irnNo && (
                                <div
                                  style={{
                                    display: 'flex',
                                    flexDirection: 'row',
                                    breakInside: 'avoid',
                                    width: '100%'
                                  }}
                                >
                                  <div
                                    style={{
                                      width: '25%',
                                      textAlign: 'center'
                                    }}
                                  >
                                    {data.eInvoiceQrCodeStr ? (
                                      <>
                                        {this.getSeparator(
                                          1,
                                          classes.separator
                                        )}
                                        <QRCode
                                          value={
                                            data.eInvoiceQrCodeStr
                                              ? data.eInvoiceQrCodeStr
                                              : ''
                                          }
                                          size={30}
                                        />
                                      </>
                                    ) : (
                                      ''
                                    )}
                                  </div>
                                  <div style={{ width: '75%' }}>
                                    <div
                                      style={{
                                        display: 'flex',
                                        flexDirection: 'column',
                                        width: '100%'
                                      }}
                                    >
                                      <div
                                        style={{
                                          display: 'flex',
                                          flexDirection: 'row',
                                          paddingLeft: '5px',
                                          width: '100%'
                                        }}
                                      >
                                        <div style={{ width: '30%' }}>
                                          <p>IRN :</p>
                                        </div>
                                        <div style={{ width: '70%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            {data.irnNo}
                                          </p>
                                        </div>
                                      </div>
                                      <div
                                        style={{
                                          display: 'flex',
                                          flexDirection: 'row',
                                          paddingLeft: '5px',
                                          width: '100%'
                                        }}
                                      >
                                        <div style={{ width: '30%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            Ack No. :
                                          </p>
                                        </div>
                                        <div style={{ width: '70%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            {data.ackNo}
                                          </p>
                                        </div>
                                      </div>
                                      <div
                                        style={{
                                          display: 'flex',
                                          flexDirection: 'row',
                                          paddingLeft: '5px',
                                          width: '100%'
                                        }}
                                      >
                                        <div style={{ width: '30%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            Ack Date :
                                          </p>
                                        </div>
                                        <div style={{ width: '70%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            {data.ackDt}
                                          </p>
                                        </div>
                                      </div>
                                      {/* <div style={{ paddingLeft: '5px' }}>
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  e-Invoicing detail{'('}s{')'} generated from
                                  the Government's e-Invoicing system
                                </p>
                              </div> */}
                                    </div>
                                  </div>
                                </div>
                              )}
                            </div>
                          </div>
                          <div style={{ textAlign: 'center' }}>
                            {settings.boolJurisdiction &&
                              settings.jurisdiction !== '' && (
                                <p>{settings.jurisdiction}</p>
                              )}
                          </div>
                        </div>
                      ) : (
                        <div
                          style={{
                            border: '1px solid',
                            display: 'flex',
                            flexDirection: 'row',
                            breakInside: 'avoid',
                            borderTop: 'none'
                          }}
                        >
                          <div style={{ width: '50%', paddingLeft: '12px' }}>
                            {(TxnEnableFieldsMap.get('display_bill_notes') ||
                              TxnEnableFieldsMap.get(
                                'display_total_weight'
                              )) && (
                              <>
                                <p
                                  style={{
                                    fontWeight: 600,
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Notes
                                </p>
                                <Fragment>
                                  {data.notes && (
                                    <p
                                      style={{
                                        marginTop: '0px',
                                        paddingTop: '0px',
                                        paddingBottom: '0px',
                                        marginBottom: '0px'
                                      }}
                                    >
                                      {data.notes}
                                    </p>
                                  )}
                                  {TxnEnableFieldsMap.get(
                                    'display_total_weight'
                                  ) && (
                                    <>
                                      {_data.weightIn && _data.weightIn > 0 ? (
                                        <div
                                          style={{
                                            textAlign: 'right',
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <p
                                            style={{
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            Weight In
                                          </p>
                                          <p
                                            style={{
                                              flex: 1,
                                              wordBreak: 'keep-all',
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            {getFloatWithTwoDecimal(
                                              _data.weightIn
                                                ? _data.weightIn
                                                : 0
                                            )}
                                            g
                                          </p>
                                        </div>
                                      ) : null}
                                      {_data.weightOut &&
                                      _data.weightOut > 0 ? (
                                        <div
                                          style={{
                                            textAlign: 'right',
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <p
                                            style={{
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            Weight Out
                                          </p>
                                          <p
                                            style={{
                                              flex: 1,
                                              wordBreak: 'keep-all',
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            {getFloatWithTwoDecimal(
                                              _data.weightOut
                                                ? _data.weightOut
                                                : 0
                                            )}
                                            g
                                          </p>
                                        </div>
                                      ) : null}
                                      {_data.wastage && _data.wastage > 0 ? (
                                        <div
                                          style={{
                                            textAlign: 'right',
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <p
                                            style={{
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            Wastage
                                          </p>
                                          <p
                                            style={{
                                              flex: 1,
                                              wordBreak: 'keep-all',
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            {getFloatWithTwoDecimal(
                                              _data.wastage ? _data.wastage : 0
                                            )}
                                            g
                                          </p>
                                        </div>
                                      ) : null}
                                    </>
                                  )}
                                </Fragment>
                              </>
                            )}
                            {!_data.date && settings.boolDesc && (
                              <Fragment>
                                <p
                                  style={{
                                    fontWeight: 600,
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Description
                                </p>
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {settings.strDesc}
                                </p>
                              </Fragment>
                            )}

                            {settings.boolBankDetail && (
                              <div>
                                {settings.boolBankDetailsOnCreditSaleOnly &&
                                data.balanceAmount > 0 ? (
                                  <Fragment>
                                    <div>
                                      <p
                                        style={{
                                          fontWeight: 600,
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        BANK DETAILS
                                      </p>
                                      <div
                                        style={{
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <div style={{ width: '40%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            A/C Holder's Name
                                          </p>
                                        </div>
                                        <div style={{ width: '60%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            : {settings.bankAccountHolderName}
                                          </p>
                                        </div>
                                      </div>
                                      <div
                                        style={{
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <div style={{ width: '40%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            BANK NAME
                                          </p>
                                        </div>
                                        <div style={{ width: '60%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            : {settings.bankName}
                                          </p>
                                        </div>
                                      </div>
                                      <div
                                        style={{
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <div style={{ width: '40%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            A/C NO.
                                          </p>
                                        </div>
                                        <div style={{ width: '60%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            : {settings.bankAccountNumber}
                                          </p>
                                        </div>
                                      </div>
                                      <div
                                        style={{
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <div style={{ width: '40%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            IFSC Code
                                          </p>
                                        </div>
                                        <div style={{ width: '60%' }}>
                                          <p
                                            style={{
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            : {settings.bankIfscCode}
                                          </p>
                                        </div>
                                      </div>
                                    </div>
                                  </Fragment>
                                ) : (
                                  <div>
                                    {!settings.boolBankDetailsOnCreditSaleOnly && (
                                      <Fragment>
                                        <div>
                                          <p
                                            style={{
                                              fontWeight: 600,
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            BANK DETAILS
                                          </p>
                                          <div
                                            style={{
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <div style={{ width: '40%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                A/C Holder's Name
                                              </p>
                                            </div>
                                            <div style={{ width: '60%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                :{' '}
                                                {settings.bankAccountHolderName}
                                              </p>
                                            </div>
                                          </div>
                                          <div
                                            style={{
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <div style={{ width: '40%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                BANK NAME
                                              </p>
                                            </div>
                                            <div style={{ width: '60%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                : {settings.bankName}
                                              </p>
                                            </div>
                                          </div>
                                          <div
                                            style={{
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <div style={{ width: '40%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                A/C NO.
                                              </p>
                                            </div>
                                            <div style={{ width: '60%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                : {settings.bankAccountNumber}
                                              </p>
                                            </div>
                                          </div>
                                          <div
                                            style={{
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <div style={{ width: '40%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                IFSC Code
                                              </p>
                                            </div>
                                            <div style={{ width: '60%' }}>
                                              <p
                                                style={{
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                : {settings.bankIfscCode}
                                              </p>
                                            </div>
                                          </div>
                                        </div>
                                      </Fragment>
                                    )}
                                  </div>
                                )}
                              </div>
                            )}
                          </div>
                          <div
                            style={{
                              width: '19.7%',
                              borderRight: '1px solid',
                              textAlign: 'center'
                            }}
                          >
                            {settings.boolQrCode && (
                              <>
                                <p
                                  style={{
                                    alignSelf: 'center',
                                    fontWeight: 600
                                  }}
                                >
                                  Pay using UPI:
                                </p>
                                <Fragment>
                                  {this.getSeparator(1, classes.separator)}
                                  <QRCode
                                    value={data.qrCodestr ? data.qrCodestr : ''}
                                    size={75}
                                  />
                                </Fragment>
                              </>
                            )}
                            {TxnEnableFieldsMap.get(
                              'display_customer_signature'
                            ) && (
                              <div
                                style={{
                                  textAlign: 'center',
                                  alignSelf: 'flex-end'
                                }}
                              >
                                {this.getSeparator(8, classes.separator)}
                                <p>Customer's Signature</p>
                              </div>
                            )}
                          </div>
                          <div
                            style={{
                              width: '30%',
                              textAlign: 'left',
                              paddingLeft: '5px'
                            }}
                          >
                            <p>For {settings.strCompanyName}</p>
                            {settings.boolSignature && settings.strSignature ? (
                              <>
                                <Box
                                  component="img"
                                  style={
                                    settings.signatureSize === 'Small'
                                      ? {
                                          width: signatureSmall,
                                          height: signatureSmall
                                        }
                                      : settings.signatureSize === 'Medium'
                                      ? {
                                          width: signatureMedium,
                                          height: signatureMedium
                                        }
                                      : {
                                          width: signatureLarge,
                                          height: signatureLarge
                                        }
                                  }
                                  src={settings.strSignature}
                                />
                                <p>Authorised signature</p>
                              </>
                            ) : (
                              <>
                                {this.getSeparator(8, classes.separator)}
                                <p>Authorised signature</p>
                              </>
                            )}
                          </div>
                        </div>
                      )}
                    </div>
                  </div>
                ))
              : ''}
          </div>
        ) : settings.theme === 'Theme 7' ? (
          <div
            style={
              settings.textSize === 'Small'
                ? { fontSize: txtSmall }
                : settings.textSize === 'Medium'
                ? { fontSize: txtMedium }
                : { fontSize: txtLarge }
            }
          >
            {this.props && this.props.data
              ? format.map((item, index) => (
                  <div
                    style={{
                      paddingTop: '0px',
                      pageBreakAfter: 'always',
                      paddingBottom: '0px',
                      width: '100%',
                      padding: '5px',
                      fontFamily: 'Roboto',
                      wordBreak: 'break-word'
                    }}
                  >
                    <div style={{ border: '1px solid' }}>
                      <div style={{ display: 'flex', flexDirection: 'row' }}>
                        <div
                          style={{
                            width: '40%',
                            paddingLeft: '5px',
                            paddingTop: '5px'
                          }}
                        >
                          {settings.boolGSTIN ? (
                            <h5>GSTIN: {settings.strGSTIN}</h5>
                          ) : (
                            ''
                          )}
                        </div>
                        <div style={{ width: '60%' }}>
                          <h2 style={{ marginTop: '10px' }}>
                            {data.mainTitle}
                          </h2>
                          {settings.boolBisHallmark && (
                            <div style={{ float: 'right', marginTop: '-34px' }}>
                              <Box
                                component="img"
                                style={{
                                  ...(settings.logoSize === 'Small'
                                    ? {
                                        width: bisLogoSmall,
                                        height: bisLogoHeightS
                                      }
                                    : settings.logoSize === 'Medium'
                                    ? {
                                        width: bisLogoMedium,
                                        height: bisLogoHeightM
                                      }
                                    : {
                                        width: bisLogoLarge,
                                        height: bisLogoHeightL
                                      }),
                                  padding: '5px'
                                }}
                                src={bisImage}
                              />
                            </div>
                          )}
                          {item.name !== '' && (
                            <p
                              style={{
                                float: 'right',
                                marginRight: '2px',
                                padding: '5px',
                                border: '1px solid #8080807a',
                                color: '#808080bf',
                                fontWeight: 'bold',
                                fontSize: '11px',
                                height: 'auto',
                                marginTop: '-26px'
                              }}
                            >
                              {item.name}
                            </p>
                          )}
                        </div>
                      </div>

                      <div style={{ display: 'flex', flexDirection: 'row' }}>
                        <div style={{ width: '70%', paddingLeft: '10px' }}>
                          <div
                            style={{ display: 'flex', flexDirection: 'row' }}
                          >
                            <div>
                              {settings.boolCompanyLogo && (
                                <Box
                                  component="img"
                                  style={
                                    settings.logoSize === 'Small'
                                      ? {
                                          width: logoSmall,
                                          height: logoHeightS,
                                          paddingLeft: '10px'
                                        }
                                      : settings.logoSize === 'Medium'
                                      ? {
                                          width: logoMedium,
                                          height: logoHeightM,
                                          paddingLeft: '10px'
                                        }
                                      : {
                                          width: logoLarge,
                                          height: logoHeightL,
                                          paddingLeft: '10px'
                                        }
                                  }
                                  src={settings.fileCompanyLogo}
                                />
                              )}
                            </div>
                            <div>
                              <p>
                                {settings.boolCompanyName ? (
                                  <Fragment>
                                    <h1>
                                      <strong
                                        style={{
                                          color: settings.companyNameColor
                                        }}
                                      >
                                        {settings.strCompanyName}
                                      </strong>
                                    </h1>
                                  </Fragment>
                                ) : (
                                  ''
                                )}
                                {settings.boolCompanyAdditionalDesc ? (
                                  <Fragment>
                                    {settings.companyAdditionalDesc}
                                  </Fragment>
                                ) : (
                                  ''
                                )}
                                {settings.boolAddress ? (
                                  <Fragment>{settings.strAddress}</Fragment>
                                ) : (
                                  ''
                                )}
                                {settings.boolPhone ? (
                                  <Fragment>
                                    <br />
                                    Ph. no: {settings.strPhone}
                                  </Fragment>
                                ) : (
                                  ''
                                )}
                              </p>
                            </div>
                          </div>
                        </div>
                        <div
                          style={{
                            width: '30%',
                            textAlign: 'right',
                            paddingRight: '10px'
                          }}
                        >
                          {data.irnNo && (
                            <>
                              {data.eInvoiceQrCodeStr ? (
                                <>
                                  <QRCode
                                    value={
                                      data.eInvoiceQrCodeStr
                                        ? data.eInvoiceQrCodeStr
                                        : ''
                                    }
                                    size={45}
                                  />
                                  <div>
                                    <p>Ack No. : {data.ackNo && data.ackNo}</p>
                                  </div>
                                </>
                              ) : (
                                ''
                              )}
                            </>
                          )}
                        </div>
                      </div>
                      <div
                        style={{
                          display: 'flex',
                          flexDirection: 'row',
                          marginTop: '0px',
                          paddingTop: '0px',
                          paddingBottom: '0px',
                          marginBottom: '0px'
                        }}
                      >
                        {settings.boolPAN && (
                          <div style={{ marginLeft: '10px' }}>
                            {' '}
                            PAN: {settings.strPAN}
                          </div>
                        )}
                        {settings.boolEmail && (
                          <div style={{ marginLeft: '10px' }}>
                            Email: {settings.strEmail}
                          </div>
                        )}
                        {settings.boolWebsite && (
                          <div style={{ marginLeft: '10px' }}>
                            Website: {settings.strWebsite}
                          </div>
                        )}
                      </div>
                      {data.irnNo && (
                        <div
                          style={{
                            display: 'flex',
                            flexDirection: 'row',
                            paddingLeft: '10px',
                            width: '100%',
                            marginTop: '0px',
                            paddingTop: '0px',
                            paddingBottom: '0px',
                            marginBottom: '0px'
                          }}
                        >
                          <p
                            style={{
                              marginTop: '0px',
                              paddingTop: '0px',
                              paddingBottom: '0px',
                              marginBottom: '0px'
                            }}
                          >
                            <b>IRN : {data.irnNo}</b>
                          </p>
                        </div>
                      )}
                    </div>

                    <div
                      style={{
                        display: 'flex',
                        flexDirection: 'row',
                        border: '1px solid'
                      }}
                    >
                      <div
                        style={{
                          width: '50%',
                          paddingLeft: '10px',
                          borderRight: '1px solid'
                        }}
                      >
                        <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                          <b>
                            {' '}
                            {data.invoiceNoTitle}
                            {' : '}
                            {data.invoiceNumber}{' '}
                          </b>
                        </p>
                        {data.salesInvoiceNumber && (
                          <>
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              <b> Return Date : </b>
                              {dateFormatter(data.salesReturnDate)}{' '}
                            </p>
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              <b>
                                Sale Invoice No. : {data.salesInvoiceNumber}{' '}
                              </b>
                            </p>
                          </>
                        )}
                        <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                          {_data.purchase_order_invoice_number ? (
                            <b>{'PO Date : '}</b>
                          ) : data.salesReturnDate ? (
                            <b>{'Invoice Date : '}</b>
                          ) : (
                            <b>{'Date : '}</b>
                          )}
                          {dateFormatter(data.date) + ' '}{' '}
                          {TxnEnableFieldsMap.get(
                            'display_bill_transaction_time'
                          ) && getTimefromTimeStamp(data.updatedAt)}
                        </p>
                        {taxSettingsData?.exporterCodeNo ? (
                          <p>
                            <b> EXP Ref: </b> {taxSettingsData?.exporterCodeNo}
                          </p>
                        ) : (
                          ''
                        )}
                        {taxSettingsData?.exporterRegistrationDate ? (
                          <p>
                            <b> EXP Reg Date: </b>{' '}
                            {taxSettingsData?.exporterRegistrationDate}
                          </p>
                        ) : (
                          ''
                        )}
                        {data.duedate && (
                          <p>
                            <b>Due Date : </b>
                            {dateFormatter(data.duedate)}
                          </p>
                        )}
                        {data.placeOfSupplyName && (
                          <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                            <b>Place Of Supply{' : '}</b>
                            {data.placeOfSupplyName}
                          </p>
                        )}
                        {true && data.exportCountryOrigin !== '' && (
                          <p
                            style={{
                              textAlign: 'left',
                              flex: 1,
                              wordBreak: 'keep-all'
                            }}
                          >
                            <b>Country of origin{' : '}</b>
                            {data.exportCountryOrigin}
                          </p>
                        )}
                        {true && data.exportCountry !== '' && (
                          <p
                            style={{
                              textAlign: 'left',
                              flex: 1,
                              wordBreak: 'keep-all'
                            }}
                          >
                            <b>Country of Final{' : '}</b>
                            {data.exportCountry}
                          </p>
                        )}
                        {TxnSettings &&
                          TxnEnableFieldsMap.get('display_po') && (
                            <p>
                              <b>{data.poNo && 'PO Number : '}</b>
                              {data.poNo && data.poNo}
                            </p>
                          )}
                        {data.poDate && (
                          <p>
                            <b>PO Date : </b>
                            {dateFormatter(data.poDate) + ' '}
                          </p>
                        )}
                        {_data.rateList &&
                          _data.rateList.length > 0 &&
                          localStorage.getItem('isJewellery') === 'true' &&
                          getMetalNRates()}
                      </div>
                      <div style={{ width: '50%', paddingLeft: '10px' }}>
                        {data.order_type === 'kot' ? (
                          <>
                            <p>
                              <b>Table No : </b>
                              {data.tableNumber && data.tableNumber}
                            </p>
                            <p>
                              <b>Chairs : </b>
                              {data.chairsUsedInString &&
                                data.chairsUsedInString}
                            </p>
                            {data.duedate && (
                              <p>
                                <b>Waiter Name : </b>
                                {data.waiter_name && data.waiter_name}
                              </p>
                            )}{' '}
                          </>
                        ) : (
                          <>
                            {TxnSettings &&
                              TxnEnableFieldsMap.get(
                                'display_job_work_employee'
                              ) && (
                                <p>
                                  <b>Job By{' : '}</b>
                                  <br />
                                  {_data.jobAssignedEmployeeName}
                                </p>
                              )}
                            {TxnSettings &&
                              TxnEnableFieldsMap.get('display_salesman') && (
                                <p>
                                  <b>Sales By{' : '}</b>
                                  <br />
                                  {_data.salesEmployeeName}
                                </p>
                              )}
                            {_data.backToBackPurchaseNumber &&
                              _data.supervisorName !== '' && (
                                <p>
                                  <b>Supervisor{' : '}</b>
                                  {_data.supervisorName}
                                </p>
                              )}
                            {_data.backToBackPurchaseNumber &&
                              _data.materialsInChargeName !== '' && (
                                <p>
                                  <b>Materials In Charge{' : '}</b>
                                  {_data.materialsInChargeName}
                                </p>
                              )}
                            {data.eWayBillNo && (
                              <p>
                                <b>E-Way Bill No{' : '}</b>
                                {data.eWayBillNo}
                              </p>
                            )}
                            {TxnSettings &&
                              TxnEnableFieldsMap.get(
                                'display_transportation'
                              ) &&
                              data.transportMode && (
                                <p>
                                  <b>{'Transport Mode: '}</b>
                                  {data.transportMode}
                                </p>
                              )}
                            {TxnSettings &&
                            TxnEnableFieldsMap.get('display_transportation') ? (
                              <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                <b>Port of loading: </b>

                                {TxnSettings &&
                                  TxnEnableFieldsMap.get(
                                    'display_transportation'
                                  ) &&
                                  data.portOfLoading && (
                                    <>{data.portOfLoading}</>
                                  )}
                              </p>
                            ) : (
                              <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                <b> </b>
                                <>{}</>
                              </p>
                            )}

                            {TxnSettings &&
                            TxnEnableFieldsMap.get('display_transportation') ? (
                              <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                <b>Port of Discharge: </b>

                                {TxnSettings &&
                                  TxnEnableFieldsMap.get(
                                    'display_transportation'
                                  ) &&
                                  data.portOfDischarge && (
                                    <>{data.portOfDischarge}</>
                                  )}
                              </p>
                            ) : (
                              <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                <b> </b>
                                <>{}</>
                              </p>
                            )}

                            {TxnSettings &&
                            TxnEnableFieldsMap.get('display_transportation') ? (
                              <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                <b>Vessel Flight No: </b>

                                {TxnSettings &&
                                  TxnEnableFieldsMap.get(
                                    'display_transportation'
                                  ) &&
                                  data.vesselFlightNo && (
                                    <>{data.vesselFlightNo}</>
                                  )}
                              </p>
                            ) : (
                              <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                <b> </b>
                                <>{}</>
                              </p>
                            )}
                            {TxnSettings &&
                              TxnEnableFieldsMap.get(
                                'display_transportation'
                              ) &&
                              data.transporterId && (
                                <p>
                                  <b>{'Transport Mode: '}</b>
                                  {data.transporterId}
                                </p>
                              )}

                            {TxnSettings &&
                              TxnEnableFieldsMap.get(
                                'display_transportation'
                              ) &&
                              data.vehicleNo && (
                                <p>
                                  <b>{'Vehicle No : '}</b>
                                  {data.vehicleNo}
                                </p>
                              )}
                          </>
                        )}

                        {isTemple && (
                          <div
                            dangerouslySetInnerHTML={{
                              __html: data.astrologyDetails + '<br />'
                            }}
                          ></div>
                        )}
                        {isTemple && (
                          <div
                            dangerouslySetInnerHTML={{
                              __html: data.additionalTempleDetails + '<br />'
                            }}
                          ></div>
                        )}
                      </div>
                    </div>

                    <div
                      style={{
                        display: 'flex',
                        flexDirection: 'row',
                        border: '1px solid'
                      }}
                    >
                      <div
                        style={{
                          width: '50%',
                          paddingLeft: '10px',
                          borderRight: '1px solid'
                        }}
                      >
                        {_data.delivery_challan_invoice_number &&
                        data.shipToCustomerName ? (
                          <>
                            <p>
                              <b>{data.billTitle}</b>
                            </p>
                            <span style={{ magin: '0px', padding: '0px' }}>
                              <b>{data.shipToCustomerName}</b>
                            </span>
                            <br />
                            {data.shipToCustomerAddress && (
                              <span>{data.shipToCustomerAddress}</span>
                            )}
                            {data.shipToCustomerPhoneNo && (
                              <span style={{ magin: '0px', padding: '0px' }}>
                                Ph. no: {data.shipToCustomerPhoneNo}
                              </span>
                            )}
                            {data.shipToCustomerGSTNo && (
                              <p style={{ magin: '0px', padding: '0px' }}>
                                {' '}
                                <b>GSTIN: {data.shipToCustomerGSTNo}</b>{' '}
                              </p>
                            )}

                            {data.shipToCustomerState ? (
                              <p style={{ magin: '0px', padding: '0px' }}>
                                {data.shipToCustomerState}
                                {<br />}
                              </p>
                            ) : (
                              ''
                            )}
                          </>
                        ) : (
                          <>
                            <p>
                              <b>{data.billTitle}</b>
                            </p>
                            <span style={{ magin: '0px', padding: '0px' }}>
                              <b>{data.tname}</b>
                            </span>
                            <br />
                            {data.tadd && (
                              <span style={{ magin: '0px', padding: '0px' }}>
                                {data.tadd}
                              </span>
                            )}
                            {data.tphone && (
                              <span style={{ magin: '0px', padding: '0px' }}>
                                , Ph No: {data.tphone}
                              </span>
                            )}
                            {data.tgstn && (
                              <p style={{ magin: '0px', padding: '0px' }}>
                                <b>{data.tgstn}</b>
                              </p>
                            )}
                            {_data.aadharNumber ? (
                              <p style={{ magin: '0px', padding: '0px' }}>
                                Aaadhar No: {_data.aadharNumber}
                                {<br />}
                              </p>
                            ) : (
                              ''
                            )}
                            {data.tstate && (
                              <p style={{ magin: '0px', padding: '0px' }}>
                                {data.tstate}
                              </p>
                            )}
                          </>
                        )}
                      </div>
                      <div
                        style={{
                          width: '50%',
                          paddingRight: '10px',
                          paddingLeft: '10px'
                        }}
                      >
                        {data.isSale && data.shipToCustomerName && (
                          <>
                            <p>
                              <b>
                                {TxnSettings?.enableBuyerOtherThanConsignee
                                  ? 'Buyer (Other Consignee)'
                                  : 'Ship To'}
                              </b>
                            </p>
                            {data.shipToCustomerName && (
                              <>
                                <span style={{ magin: '0px', padding: '0px' }}>
                                  {' '}
                                  <b>{data.shipToCustomerName} </b>
                                </span>{' '}
                                <br />
                              </>
                            )}

                            {data.shipToCustomerAddress && (
                              <span style={{ magin: '0px', padding: '0px' }}>
                                {data.shipToCustomerAddress}
                              </span>
                            )}
                            {data.shipToCustomerPhoneNo && (
                              <span style={{ magin: '0px', padding: '0px' }}>
                                , Ph No: {data.shipToCustomerPhoneNo}
                              </span>
                            )}
                            {data.shipToCustomerGSTNo && (
                              <p>
                                {' '}
                                <b>GSTIN: {data.shipToCustomerGSTNo}</b>{' '}
                              </p>
                            )}
                            {data.shipToCustomerState ? (
                              <p style={{ magin: '0px', padding: '0px' }}>
                                {data.shipToCustomerState}
                                {<br />}
                              </p>
                            ) : (
                              ''
                            )}
                          </>
                        )}
                      </div>
                    </div>

                    {getHeaderRow()}

                    <div>
                      <div
                        style={{ border: '1px solid', minHeight: minRowHeight }}
                      >
                        {_data.item_list && _data.item_list.length > 0
                          ? getInvoiceRows()
                          : ''}
                      </div>

                      {!isPackagePreivew ? (
                        <div>
                          <div
                            style={{
                              width: '100%',
                              border: '1px solid',
                              breakInside: 'avoid',
                              fontWeight: 600,
                              display: 'flex',
                              flexDirection: 'row'
                            }}
                          >
                            <div
                              style={{ textAlign: 'center', width: '10%' }}
                            ></div>
                            <div
                              style={{
                                textAlign: 'center',
                                width: '30%'
                              }}
                            >
                              Total
                            </div>

                            {/******* HSN ********/}
                            {TxnEnableFieldsMap.get('display_hsn') && (
                              <div
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {/********* Serial/IMEI No. *********/}
                            {TxnSettings &&
                              TxnEnableFieldsMap.get(
                                'display_product_serial_imei'
                              ) && (
                                <div
                                  style={{
                                    borderRight: '1px solid ',
                                    paddingRight: '3px',
                                    width: '15%',
                                    textAlign: 'right'
                                  }}
                                ></div>
                              )}

                            {/* Batch Number */}
                            {TxnEnableFieldsMap.get(
                              'display_product_batch_number'
                            ) && (
                              <div
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {/* BArcode */}
                            {TxnEnableFieldsMap.get(
                              'display_product_barcode'
                            ) && (
                              <div
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {/* Brand */}
                            {TxnEnableFieldsMap.get(
                              'display_product_brand'
                            ) && (
                              <div
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {/* Model Number */}
                            {TxnEnableFieldsMap.get(
                              'display_product_model_no'
                            ) && (
                              <div
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {/* Manufacturing Date */}
                            {TxnEnableFieldsMap.get(
                              'display_product_manufacturing_date'
                            ) && (
                              <div
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {/* Expiry Date */}
                            {TxnEnableFieldsMap.get(
                              'display_product_expiry_date'
                            ) && (
                              <div
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_quantity'
                            ) && (
                              <div style={{ width: '15%', textAlign: 'right' }}>
                                {totalqty}
                              </div>
                            )}

                            {/* Total Free Quantity */}
                            {TxnEnableFieldsMap.get(
                              'display_product_free_quantity'
                            ) && (
                              <div style={{ width: '15%', textAlign: 'right' }}>
                                {totalfreeqty}
                              </div>
                            )}

                            {/* Unit */}
                            {TxnEnableFieldsMap.get('display_product_unit') && (
                              <div
                                style={{ width: '15%', textAlign: 'right' }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get('display_product_mrp') && (
                              <div
                                style={{ width: '15%', textAlign: 'right' }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_price'
                            ) && (
                              <div
                                style={{
                                  width: '15%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {_data.exportConversionRate > 0 &&
                              TxnEnableFieldsMap.get(
                                'display_product_price_other_currency'
                              ) && (
                                <p
                                  style={{
                                    width: '15%',
                                    textAlign: 'right',
                                    paddingRight: '3px'
                                  }}
                                ></p>
                              )}

                            {TxnEnableFieldsMap.get(
                              'display_product_price_per_gram'
                            ) && (
                              <div
                                style={{
                                  width: '30%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_gross_weight'
                            ) && (
                              <div style={{ width: '15%', textAlign: 'right' }}>
                                {parseFloat(totalGrossWt).toFixed(3)}
                              </div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_stone_weight'
                            ) && (
                              <div style={{ width: '15%', textAlign: 'right' }}>
                                {parseFloat(totalStoneWt).toFixed(3)}
                              </div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_net_weight'
                            ) && (
                              <div style={{ width: '15%', textAlign: 'right' }}>
                                {parseFloat(totalNetWt).toFixed(3)}
                              </div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_wastage'
                            ) && (
                              <div
                                style={{ width: '15%', textAlign: 'right' }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_making_charge'
                            ) && (
                              <div
                                style={{ width: '15%', textAlign: 'right' }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_making_charge_per_gram'
                            ) && (
                              <div
                                style={{ width: '15%', textAlign: 'right' }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_stone_charge'
                            ) && (
                              <div
                                style={{ width: '15%', textAlign: 'right' }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_purity'
                            ) && (
                              <div
                                style={{ width: '15%', textAlign: 'right' }}
                              ></div>
                            )}

                            {/* Copper */}
                            {TxnEnableFieldsMap.get(
                              'display_product_copper'
                            ) && (
                              <div
                                style={{ width: '15%', textAlign: 'right' }}
                              ></div>
                            )}

                            {TxnEnableFieldsMap.get(
                              'display_product_discount'
                            ) && (
                              <div style={{ width: '15%', textAlign: 'right' }}>
                                {data.exportConversionRate > 0 ? (
                                  <span>
                                    {getFloatWithTwoDecimal(
                                      data.subTotalDisc /
                                        data.exportConversionRate
                                    )}
                                  </span>
                                ) : (
                                  <span>
                                    â‚¹{' '}
                                    {getFloatWithTwoDecimal(data.subTotalDisc)}
                                  </span>
                                )}
                              </div>
                            )}

                            {TxnEnableFieldsMap.get('display_product_gst') && (
                              <div
                                style={{
                                  width: '30%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              >
                                {getFloatWithTwoDecimal(totaltax_gst)}
                              </div>
                            )}

                            {data.isSale ? (
                              <>
                                {TxnEnableFieldsMap.get(
                                  'display_product_total_amount'
                                ) && (
                                  <div
                                    style={{
                                      width: '25%',
                                      textAlign: 'right',
                                      paddingRight: '3px'
                                    }}
                                  >
                                    {(
                                      getFloatWithTwoDecimal(
                                        data.totalTaxableAmount
                                      ) / (_data.exportConversionRate || 1)
                                    ).toFixed(2)}
                                  </div>
                                )}
                              </>
                            ) : (
                              <div
                                style={{
                                  width: '25%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              >
                                {getFloatWithTwoDecimal(
                                  data.totalTaxableAmount
                                )}
                              </div>
                            )}

                            {_data.exportConversionRate > 0 &&
                              TxnEnableFieldsMap.get(
                                'display_product_total_amount_other'
                              ) &&
                              data.amountOtherCurrency && (
                                <div
                                  style={{
                                    paddingRight: '3px',
                                    width: '25%',
                                    textAlign: 'right'
                                  }}
                                >
                                  {data.amountOtherCurrency?.toFixed(2)}
                                </div>
                              )}
                          </div>

                          <div
                            style={{
                              border: '1px solid',
                              breakInside: 'avoid',
                              display: 'flex',
                              flexDirection: 'row',
                              paddingLeft: '10px'
                            }}
                          >
                            <div
                              style={{
                                width: '57%',
                                display: 'flex',
                                flexDirection: 'column'
                              }}
                            >
                              {this.getSeparator(1, classes.separator)}
                              <div
                                style={{
                                  display:
                                    data.exportConversionRate > 0
                                      ? 'none'
                                      : 'block'
                                }}
                              >
                                <div
                                  style={{
                                    width: '100%',
                                    display: 'flex',
                                    border: '1px solid',
                                    flexDirection: 'row',
                                    textAlign: 'center',
                                    fontWeight: 'bold',
                                    fontSize: '6px'
                                  }}
                                >
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '20%'
                                    }}
                                  >
                                    <p>TAXABLE AMT</p>
                                  </div>
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '14%'
                                    }}
                                  >
                                    <p>CGST %</p>
                                  </div>
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '14%'
                                    }}
                                  >
                                    <p>CGST AMT</p>
                                  </div>
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '14%'
                                    }}
                                  >
                                    <p>SGST %</p>
                                  </div>
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '14%'
                                    }}
                                  >
                                    <p>SGST AMT</p>
                                  </div>
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '14%'
                                    }}
                                  >
                                    <p>IGST %</p>
                                  </div>
                                  <div style={{ width: '14%' }}>
                                    <p>IGST AMT</p>
                                  </div>
                                </div>

                                {taxSplitDataList ? getUITaxSplitGSTRows() : ''}

                                <div
                                  style={{
                                    width: '100%',
                                    borderLeft: '1px solid',
                                    borderRight: '1px solid',
                                    borderBottom: '1px solid',
                                    display: 'flex',
                                    flexDirection: 'row',
                                    textAlign: 'center',
                                    fontWeight: 'bold',
                                    fontSize: '6px'
                                  }}
                                >
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '20%'
                                    }}
                                  >
                                    <p>TOTAL</p>
                                  </div>
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '14%'
                                    }}
                                  >
                                    <p>CGST</p>
                                  </div>
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '14%'
                                    }}
                                  >
                                    <p>â‚¹ {getFloatWithTwoDecimal(totalCGST)}</p>
                                  </div>
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '14%'
                                    }}
                                  >
                                    <p>SGST </p>
                                  </div>
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '14%'
                                    }}
                                  >
                                    <p>â‚¹ {getFloatWithTwoDecimal(totalSGST)}</p>
                                  </div>
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '14%'
                                    }}
                                  >
                                    <p>IGST </p>
                                  </div>
                                  <div style={{ width: '14%' }}>
                                    <p>â‚¹ {getFloatWithTwoDecimal(totalIGST)}</p>
                                  </div>
                                </div>
                              </div>
                              <div style={{ flex: 1, wordBreak: 'keep-all' }}>
                                <div
                                  style={{
                                    display: 'flex',
                                    flexDirection: 'column'
                                  }}
                                >
                                  {!_data.date && settings.boolDesc ? (
                                    <Fragment>
                                      <p
                                        style={{
                                          fontWeight: 600,
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        Description
                                      </p>
                                      <p
                                        style={{
                                          backgroundColor: '#f5f2f2',
                                          marginTop: '0px',
                                          paddingTop: '0px',
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        {settings.strDesc}
                                      </p>
                                    </Fragment>
                                  ) : (
                                    ''
                                  )}
                                  {TxnEnableFieldsMap.get(
                                    'display_bill_notes'
                                  ) ||
                                  TxnEnableFieldsMap.get(
                                    'display_total_weight'
                                  ) ? (
                                    <Fragment>
                                      <p
                                        style={{
                                          fontWeight: 600,
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        Notes
                                      </p>
                                      {data.notes && (
                                        <p
                                          style={{
                                            backgroundColor: '#f5f2f2',
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          {data.notes}
                                        </p>
                                      )}
                                      {TxnEnableFieldsMap.get(
                                        'display_total_weight'
                                      ) && (
                                        <>
                                          {_data.weightIn &&
                                          _data.weightIn > 0 ? (
                                            <div
                                              style={{
                                                backgroundColor: '#f5f2f2',
                                                textAlign: 'right',
                                                display: 'flex',
                                                flexDirection: 'row'
                                              }}
                                            >
                                              <p
                                                style={{
                                                  fontWeight: 600,
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                Weight In
                                              </p>
                                              <p
                                                style={{
                                                  flex: 1,
                                                  wordBreak: 'keep-all',
                                                  fontWeight: 600,
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                {getFloatWithTwoDecimal(
                                                  _data.weightIn
                                                    ? _data.weightIn
                                                    : 0
                                                )}
                                                g
                                              </p>
                                            </div>
                                          ) : null}
                                          {_data.weightOut &&
                                          _data.weightOut > 0 ? (
                                            <div
                                              style={{
                                                backgroundColor: '#f5f2f2',
                                                textAlign: 'right',
                                                display: 'flex',
                                                flexDirection: 'row'
                                              }}
                                            >
                                              <p
                                                style={{
                                                  fontWeight: 600,
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                Weight Out
                                              </p>
                                              <p
                                                style={{
                                                  flex: 1,
                                                  wordBreak: 'keep-all',
                                                  fontWeight: 600,
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                {getFloatWithTwoDecimal(
                                                  _data.weightOut
                                                    ? _data.weightOut
                                                    : 0
                                                )}
                                                g
                                              </p>
                                            </div>
                                          ) : null}
                                          {_data.wastage &&
                                          _data.wastage > 0 ? (
                                            <div
                                              style={{
                                                backgroundColor: '#f5f2f2',
                                                textAlign: 'right',
                                                display: 'flex',
                                                flexDirection: 'row'
                                              }}
                                            >
                                              <p
                                                style={{
                                                  fontWeight: 600,
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                Wastage
                                              </p>
                                              <p
                                                style={{
                                                  flex: 1,
                                                  wordBreak: 'keep-all',
                                                  fontWeight: 600,
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                {getFloatWithTwoDecimal(
                                                  _data.wastage
                                                    ? _data.wastage
                                                    : 0
                                                )}
                                                g
                                              </p>
                                            </div>
                                          ) : null}
                                        </>
                                      )}
                                    </Fragment>
                                  ) : (
                                    ''
                                  )}
                                  <p
                                    style={{
                                      fontWeight: 600,
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    INVOICE AMOUNT IN WORDS
                                  </p>
                                  <p
                                    style={{
                                      textTransform: 'capitalize',
                                      backgroundColor: '#f5f2f2',
                                      marginTop: '0px',
                                      paddingTop: '0px',
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    {data.strTotal}
                                  </p>
                                </div>
                              </div>
                            </div>

                            <div
                              style={{
                                width: '3%',
                                display: 'flex',
                                flexDirection: 'column',
                                fontSize: '9px',
                                alignSelf: 'flex-end',
                                marginBottom: '10px'
                              }}
                            >
                              <div>
                                {/* <p>No. of Items : {_data.item_list.length}</p> */}
                              </div>
                            </div>

                            <div
                              style={{
                                width: '46%',
                                borderLeft: '1px solid',
                                borderBottom: '1px solid',
                                display: 'flex',
                                flexDirection: 'column',
                                fontSize: '9px'
                              }}
                            >
                              <div
                                style={{ width: '100%', padding: '5px 3px' }}
                              >
                                <div
                                  style={{
                                    textAlign: 'right',
                                    display: 'flex',
                                    flexDirection: 'row'
                                  }}
                                >
                                  <p>Sub Total</p>
                                  {data.exportConversionRate ? (
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      {data.exportCurrency}{' '}
                                      {(
                                        getFloatWithTwoDecimal(
                                          data.totalTaxableAmount +
                                            data.subTotalDisc
                                        ) / data.exportConversionRate
                                      )?.toFixed(2)}
                                      {/* {getFloatWithTwoDecimal(data.subTotal)} */}
                                    </p>
                                  ) : (
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      â‚¹{' '}
                                      {/* {getFloatWithTwoDecimal(
                                        data.totalTaxableAmount +
                                          data.subTotalDisc
                                      )} */}
                                      {getFloatWithTwoDecimal(data.subTotal)}
                                    </p>
                                  )}
                                </div>

                                {_data.exportConversionRate === 0 &&
                                TxnEnableFieldsMap.get(
                                  'display_bill_packing_charge'
                                ) &&
                                _data.packing_charge ? (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row',
                                      flexWrap: 'wrap'
                                    }}
                                  >
                                    <p>Package Charge</p>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all'
                                      }}
                                    >
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.packing_charge
                                          ? _data.packing_charge
                                          : 0
                                      )}
                                    </p>
                                  </div>
                                ) : (
                                  ' '
                                )}

                                {_data.exportConversionRate > 0 &&
                                TxnEnableFieldsMap.get(
                                  'display_packing_other_currency'
                                ) &&
                                _data.packingChargeOtherCurrency ? (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row',
                                      flexWrap: 'wrap'
                                    }}
                                  >
                                    {_data.packingChargeOtherCurrency && (
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          minWidth: '100%'
                                        }}
                                      >
                                        <p>Package Charge</p>
                                        <p
                                          style={{
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                        >
                                          {data.exportCurrency}{' '}
                                          {getFloatWithTwoDecimal(
                                            _data.packingChargeOtherCurrency
                                              ? _data.packingChargeOtherCurrency
                                              : 0
                                          )}
                                        </p>
                                      </div>
                                    )}
                                  </div>
                                ) : (
                                  ' '
                                )}

                                {_data.exportConversionRate === 0 &&
                                TxnEnableFieldsMap.get(
                                  'display_bill_shipping_charge'
                                ) &&
                                !_data.backToBackPurchaseNumber &&
                                _data.shipping_charge ? (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row',
                                      flexWrap: 'wrap'
                                    }}
                                  >
                                    <p>Shipping Charge</p>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all'
                                      }}
                                    >
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.shipping_charge
                                          ? _data.shipping_charge
                                          : 0
                                      )}
                                    </p>
                                  </div>
                                ) : (
                                  ' '
                                )}

                                {_data.exportConversionRate > 0 &&
                                TxnEnableFieldsMap.get(
                                  'display_shipping_other_currency'
                                ) &&
                                !_data.backToBackPurchaseNumber &&
                                _data.shippingChargeOtherCurrency ? (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row',
                                      flexWrap: 'wrap'
                                    }}
                                  >
                                    {_data.shippingChargeOtherCurrency && (
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          minWidth: '100%'
                                        }}
                                      >
                                        <p>Shipping Charge</p>
                                        <p
                                          style={{
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                        >
                                          {data.exportCurrency}{' '}
                                          {getFloatWithTwoDecimal(
                                            _data.shippingChargeOtherCurrency
                                              ? _data.shippingChargeOtherCurrency
                                              : 0
                                          )}
                                        </p>
                                      </div>
                                    )}
                                  </div>
                                ) : (
                                  ' '
                                )}

                                {_data.freightCharge === 0 ? (
                                  ''
                                ) : (
                                  <>
                                    {TxnEnableFieldsMap.get(
                                      'display_bill_shipping_charge'
                                    ) &&
                                      _data.backToBackPurchaseNumber && (
                                        <div
                                          style={{
                                            textAlign: 'right',
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <p>Freight Charge</p>
                                          <p
                                            style={{
                                              flex: 1,
                                              wordBreak: 'keep-all'
                                            }}
                                          >
                                            â‚¹{' '}
                                            {getFloatWithTwoDecimal(
                                              _data.freightCharge
                                                ? _data.freightCharge
                                                : 0
                                            )}
                                          </p>
                                        </div>
                                      )}
                                  </>
                                )}

                                {_data.exportConversionRate === 0 &&
                                TxnEnableFieldsMap.get(
                                  'display_bill_insurance'
                                ) &&
                                _data.insurance &&
                                _data.insurance.amount !== 0 ? (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row'
                                    }}
                                  >
                                    <p>Insurance</p>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all'
                                      }}
                                    >
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.insurance &&
                                          _data.insurance.amount
                                          ? _data.insurance &&
                                              _data.insurance.amount
                                          : 0
                                      )}
                                    </p>
                                  </div>
                                ) : (
                                  ' '
                                )}

                                {_data.exportConversionRate > 0 &&
                                TxnEnableFieldsMap.get(
                                  'display_insurance_other_currency'
                                ) &&
                                _data.insurance &&
                                _data.insurance.amountOtherCurrency !== 0 ? (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row'
                                    }}
                                  >
                                    <p>Insurance</p>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all'
                                      }}
                                    >
                                      {data.exportCurrency}{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.insurance &&
                                          _data.insurance.amountOtherCurrency
                                          ? _data.insurance &&
                                              _data.insurance
                                                .amountOtherCurrency
                                          : 0
                                      )}
                                    </p>
                                  </div>
                                ) : (
                                  ' '
                                )}

                                {data.totalDiscount === 0 ? (
                                  ''
                                ) : (
                                  <>
                                    {((_data.invoice_number &&
                                      TxnEnableFieldsMap.get(
                                        'display_bill_discount'
                                      )) ||
                                      !_data.invoice_number) && (
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p>Total Discount</p>
                                        <p
                                          style={{
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                        >
                                          â‚¹{' '}
                                          {getFloatWithTwoDecimal(
                                            data.totalDiscount
                                          )}
                                        </p>
                                      </div>
                                    )}
                                  </>
                                )}

                                {/* TCS Amount */}
                                {data.tcsAmount > 0 && (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row'
                                    }}
                                  >
                                    <p>
                                      TCS@{data.tcsRate}% {data.tcsCode}
                                    </p>
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      â‚¹ {getFloatWithTwoDecimal(data.tcsAmount)}
                                    </p>
                                  </div>
                                )}

                                {data.totalCess === 0 ? (
                                  ''
                                ) : (
                                  <>
                                    {TxnEnableFieldsMap.get(
                                      'display_product_cess'
                                    ) &&
                                      data.totalCess > 0 && (
                                        <div
                                          style={{
                                            textAlign: 'right',
                                            display: 'flex',
                                            flexDirection: 'row'
                                          }}
                                        >
                                          <p>Total Cess</p>
                                          <p
                                            style={{
                                              flex: 1,
                                              wordBreak: 'keep-all'
                                            }}
                                          >
                                            â‚¹{' '}
                                            {getFloatWithTwoDecimal(
                                              data.totalCess
                                            )}
                                          </p>
                                        </div>
                                      )}
                                  </>
                                )}

                                {String(_data.is_roundoff).toLowerCase() ===
                                  'true' && (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row'
                                    }}
                                  >
                                    <p style={{ fontWeight: 600 }}>Round off</p>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all',
                                        fontWeight: 600
                                      }}
                                    >
                                      {data.exportConversionRate ? (
                                        <span>
                                          {data.exportCurrency}{' '}
                                          {getFloatWithTwoDecimal(
                                            _data.round_amount /
                                              data.exportConversionRate
                                          )}
                                        </span>
                                      ) : (
                                        <span>
                                          â‚¹{' '}
                                          {getFloatWithTwoDecimal(
                                            _data.round_amount
                                          )}
                                        </span>
                                      )}
                                    </p>
                                  </div>
                                )}
                                <div
                                  style={{
                                    textAlign: 'right',
                                    display: 'flex',
                                    flexDirection: 'row'
                                  }}
                                >
                                  <p
                                    style={{
                                      fontSize: '12px',
                                      fontWeight: 600
                                    }}
                                  >
                                    Total
                                  </p>
                                  <p
                                    style={{
                                      fontSize: '12px',
                                      fontWeight: 600,
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    {data.exportConversionRate ? (
                                      <span>
                                        {data.exportCurrency}{' '}
                                        {getFloatWithTwoDecimal(
                                          data.totalAmount
                                        )}
                                      </span>
                                    ) : (
                                      <span>
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(
                                          data.totalAmount
                                        )}
                                      </span>
                                    )}
                                  </p>
                                </div>

                                {_data.estimateType === 'open' ||
                                _data.estimateType === 'close' ? (
                                  ''
                                ) : (
                                  <>
                                    {data.receivedAmount > 0 && (
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p>{data.paidReceivedTitle}</p>
                                        <p
                                          style={{
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                        >
                                          â‚¹{' '}
                                          {getFloatWithTwoDecimal(
                                            data.receivedAmount
                                          )}
                                        </p>
                                      </div>
                                    )}
                                    {_data.exportConversionRate === 0 &&
                                    data.balanceAmount > 0 ? (
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p>Balance</p>
                                        <p
                                          style={{
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                        >
                                          â‚¹{' '}
                                          {getFloatWithTwoDecimal(
                                            data.balanceAmount
                                          )}
                                        </p>
                                      </div>
                                    ) : (
                                      ''
                                    )}
                                    {settings.boolPaymentMode &&
                                    data.paymentType !== '' ? (
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p>Payment Type</p>

                                        <p
                                          style={{
                                            textTransform: 'capitalize',
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                          dangerouslySetInnerHTML={{
                                            __html: data.paymentType
                                          }}
                                        ></p>
                                      </div>
                                    ) : (
                                      ''
                                    )}
                                    {data.tdsAmount > 0 ? (
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p>
                                          TDS@{data.tdsRate}% {data.tdsCode}
                                        </p>
                                        <p
                                          style={{
                                            textTransform: 'capitalize',
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                        >
                                          â‚¹{' '}
                                          {getFloatWithTwoDecimal(
                                            data.tdsAmount
                                          )}
                                        </p>
                                      </div>
                                    ) : (
                                      ''
                                    )}
                                  </>
                                )}

                                {/****** Outstanding Payble / Receivable *****/}
                                {settings.boolPreviousBalance &&
                                  outStandingType &&
                                  outStandingBalance !== 0 && (
                                    <>
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p>Outstanding-{outStandingType} </p>
                                        <p
                                          style={{
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                        >
                                          â‚¹{' '}
                                          {getFloatWithTwoDecimal(
                                            outStandingBalance
                                          )}
                                        </p>
                                      </div>
                                    </>
                                  )}
                              </div>
                              {/* </Grid> */}
                            </div>
                          </div>

                          <div
                            style={{
                              width: '100%',
                              display: 'flex',
                              flexDirection: 'row',
                              border: '1px solid',
                              paddingLeft: '10px',
                              marginTop: '0px',
                              paddingTop: '2px'
                            }}
                          >
                            {settings.boolBankDetail ? (
                              <div style={{ width: '80%' }}>
                                {settings.boolBankDetailsOnCreditSaleOnly &&
                                data.balanceAmount > 0 ? (
                                  <Fragment>
                                    <div>
                                      <p
                                        style={{
                                          fontWeight: 600,
                                          marginTop: '0px',
                                          paddingTop: '0px',
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        BANK DETAILS
                                      </p>
                                      <div
                                        style={{
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p
                                          style={{
                                            fontWeight: 'bold',
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          A/C Holder's Name:{' '}
                                          {settings.bankAccountHolderName}
                                        </p>
                                        <p
                                          style={{
                                            marginLeft: '20px',
                                            fontWeight: 'bold',
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          A/C NO.: {settings.bankAccountNumber}
                                        </p>
                                      </div>
                                      <div
                                        style={{
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p
                                          style={{
                                            fontWeight: 'bold',
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          BANK NAME: {settings.bankName}
                                        </p>
                                        <p
                                          style={{
                                            marginLeft: '20px',
                                            fontWeight: 'bold',
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          IFSC Code: {settings.bankIfscCode}
                                        </p>
                                      </div>
                                    </div>
                                  </Fragment>
                                ) : (
                                  <div>
                                    {!settings.boolBankDetailsOnCreditSaleOnly ? (
                                      <Fragment>
                                        <div>
                                          <p
                                            style={{
                                              fontWeight: 600,
                                              marginTop: '0px',
                                              paddingTop: '0px',
                                              paddingBottom: '0px',
                                              marginBottom: '0px'
                                            }}
                                          >
                                            BANK DETAILS
                                          </p>
                                          <div
                                            style={{
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <p
                                              style={{
                                                fontWeight: 'bold',
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              A/C Holder's Name:{' '}
                                              {settings.bankAccountHolderName}
                                            </p>
                                            <p
                                              style={{
                                                marginLeft: '20px',
                                                fontWeight: 'bold',
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              A/C NO.:{' '}
                                              {settings.bankAccountNumber}
                                            </p>
                                          </div>

                                          <div
                                            style={{
                                              display: 'flex',
                                              flexDirection: 'row'
                                            }}
                                          >
                                            <p
                                              style={{
                                                fontWeight: 'bold',
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              BANK NAME: {settings.bankName}
                                            </p>
                                            <p
                                              style={{
                                                marginLeft: '20px',
                                                fontWeight: 'bold',
                                                marginTop: '0px',
                                                paddingTop: '0px',
                                                paddingBottom: '0px',
                                                marginBottom: '0px'
                                              }}
                                            >
                                              IFSC Code: {settings.bankIfscCode}
                                            </p>
                                          </div>
                                        </div>
                                      </Fragment>
                                    ) : (
                                      ''
                                    )}
                                  </div>
                                )}
                              </div>
                            ) : (
                              ''
                            )}

                            <div style={{ width: '30%', textAlign: 'center' }}>
                              {settings.boolQrCode ? (
                                <Fragment>
                                  <QRCode
                                    value={data.qrCodestr ? data.qrCodestr : ''}
                                    size={75}
                                  />
                                </Fragment>
                              ) : (
                                ''
                              )}
                            </div>
                          </div>

                          <div
                            style={{
                              breakInside: 'avoid',
                              width: '100%',
                              display: 'flex',
                              flexDirection: 'row',
                              borderLeft: '1px solid',
                              borderRight: '1px solid'
                            }}
                          >
                            <div
                              style={{
                                width: '50%',
                                display: 'flex',
                                flexDirection: 'column',
                                paddingLeft: '10px'
                              }}
                            >
                              <p>
                                For{' '}
                                {settings.boolCompanyName &&
                                  settings.strCompanyName}
                              </p>
                              <div style={{ width: '50%' }}>
                                {settings.boolSignature &&
                                settings.strSignature ? (
                                  <>
                                    <Box
                                      component="img"
                                      style={
                                        settings.signatureSize === 'Small'
                                          ? {
                                              width: signatureSmall,
                                              height: signatureSmall,
                                              marginLeft: '20px'
                                            }
                                          : settings.signatureSize === 'Medium'
                                          ? {
                                              width: signatureSmall,
                                              height: signatureSmall,
                                              marginLeft: '20px'
                                            }
                                          : {
                                              width: signatureSmall,
                                              height: signatureSmall,
                                              marginLeft: '20px'
                                            }
                                      }
                                      src={settings.strSignature}
                                    />
                                    <p>Authorised signature</p>
                                  </>
                                ) : (
                                  <>
                                    {this.getSeparator(5, classes.separator)}
                                    <p>Authorised signature</p>
                                  </>
                                )}
                              </div>
                            </div>
                            {TxnEnableFieldsMap.get(
                              'display_customer_signature'
                            ) && (
                              <div
                                style={{
                                  width: '50%',
                                  textAlign: 'end',
                                  alignSelf: 'flex-end',
                                  paddingRight: '10px'
                                }}
                              >
                                <p>Customer's Signature</p>
                              </div>
                            )}
                          </div>
                          <div
                            style={{
                              border: '1px solid',
                              breakInside: 'avoid',
                              width: '100%',
                              paddingLeft: '10px'
                            }}
                          >
                            {data.terms !== '' ? (
                              <Fragment>
                                <p style={{ fontWeight: 600 }}>
                                  TERMS AND CONDITIONS
                                </p>
                                <div
                                  style={{
                                    whiteSpace: 'break-spaces',
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.terms}
                                </div>
                              </Fragment>
                            ) : (
                              ''
                            )}
                          </div>
                          <div style={{ textAlign: 'center' }}>
                            {settings.boolJurisdiction &&
                              settings.jurisdiction !== '' && (
                                <p>{settings.jurisdiction}</p>
                              )}
                          </div>
                        </div>
                      ) : (
                        <div
                          style={{
                            breakInside: 'avoid',
                            width: '100%',
                            display: 'flex',
                            flexDirection: 'row',
                            borderLeft: '1px solid',
                            borderRight: '1px solid',
                            borderBottom: '1px solid'
                          }}
                        >
                          <div
                            style={{
                              width: '50%',
                              display: 'flex',
                              flexDirection: 'column',
                              paddingLeft: '10px'
                            }}
                          >
                            <p>
                              For{' '}
                              {settings.boolCompanyName &&
                                settings.strCompanyName}
                            </p>
                            <div style={{ width: '50%' }}>
                              {settings.boolSignature &&
                              settings.strSignature ? (
                                <>
                                  <Box
                                    component="img"
                                    style={
                                      settings.signatureSize === 'Small'
                                        ? {
                                            width: signatureSmall,
                                            height: signatureSmall,
                                            marginLeft: '20px'
                                          }
                                        : settings.signatureSize === 'Medium'
                                        ? {
                                            width: signatureSmall,
                                            height: signatureSmall,
                                            marginLeft: '20px'
                                          }
                                        : {
                                            width: signatureSmall,
                                            height: signatureSmall,
                                            marginLeft: '20px'
                                          }
                                    }
                                    src={settings.strSignature}
                                  />
                                  <p>Authorised signature</p>
                                </>
                              ) : (
                                <>
                                  {this.getSeparator(5, classes.separator)}
                                  <p>Authorised signature</p>
                                </>
                              )}
                            </div>
                          </div>
                          {TxnEnableFieldsMap.get(
                            'display_customer_signature'
                          ) && (
                            <div
                              style={{
                                width: '50%',
                                textAlign: 'end',
                                alignSelf: 'flex-end',
                                paddingRight: '10px'
                              }}
                            >
                              <p>Customer's Signature</p>
                            </div>
                          )}
                        </div>
                      )}
                    </div>
                  </div>
                ))
              : ''}
          </div>
        ) : (
          settings.theme === 'Theme 8' && (
            <div
              style={
                settings.textSize === 'Small'
                  ? { fontSize: txtSmall }
                  : settings.textSize === 'Medium'
                  ? { fontSize: txtMedium }
                  : { fontSize: txtLarge }
              }
            >
              {this.props && this.props.data
                ? format.map((item, index) => (
                    <div
                      style={{
                        paddingTop: '0px',
                        pageBreakAfter: 'always',
                        paddingBottom: '0px',
                        width: '100%',
                        padding: '5px',
                        fontFamily: 'Roboto',
                        wordBreak: 'break-word'
                      }}
                    >
                      <div style={{ border: '1px solid' }}>
                        <div style={{ width: '100%' }}>
                          <h2 style={{ marginTop: '10px' }}>
                            <center>{data.mainTitle}</center>
                          </h2>
                          {item.name !== '' && (
                            <p
                              style={{
                                float: 'right',
                                marginRight: '2px',
                                padding: '5px',
                                border: '1px solid #8080807a',
                                color: '#808080bf',
                                fontWeight: 'bold',
                                fontSize: '11px',
                                height: 'auto',
                                marginTop: '-29px'
                              }}
                            >
                              {item.name}
                            </p>
                          )}
                          {settings.boolBisHallmark && (
                            <div style={{ float: 'left', marginTop: '-29px' }}>
                              <Box
                                component="img"
                                style={{
                                  ...(settings.logoSize === 'Small'
                                    ? {
                                        width: bisLogoSmall,
                                        height: bisLogoHeightS
                                      }
                                    : settings.logoSize === 'Medium'
                                    ? {
                                        width: bisLogoMedium,
                                        height: bisLogoHeightM
                                      }
                                    : {
                                        width: bisLogoLarge,
                                        height: bisLogoHeightL
                                      }),
                                  padding: '5px'
                                }}
                                src={bisImage}
                              />
                            </div>
                          )}
                        </div>

                        <div
                          style={{
                            display: 'flex',
                            flexDirection: 'row',
                            clear: 'both'
                          }}
                        >
                          <div
                            style={{
                              width: '50%',
                              paddingLeft: '10px',
                              paddingTop: '10px'
                            }}
                          >
                            <div>
                              {settings.boolCompanyLogo && (
                                <Box
                                  component="img"
                                  style={
                                    settings.logoSize === 'Small'
                                      ? {
                                          width: logoSmall,
                                          height: logoHeightS
                                        }
                                      : settings.logoSize === 'Medium'
                                      ? {
                                          width: logoMedium,
                                          height: logoHeightM
                                        }
                                      : {
                                          width: logoLarge,
                                          height: logoHeightL
                                        }
                                  }
                                  src={settings.fileCompanyLogo}
                                />
                              )}
                            </div>
                            <div>
                              <p>
                                {settings.boolCompanyName ? (
                                  <Fragment>
                                    <h1>
                                      <strong
                                        style={{
                                          color: settings.companyNameColor
                                        }}
                                      >
                                        {settings.strCompanyName}
                                      </strong>
                                    </h1>
                                  </Fragment>
                                ) : (
                                  ''
                                )}
                                {settings.boolCompanyAdditionalDesc ? (
                                  <Fragment>
                                    {settings.companyAdditionalDesc}
                                    <br />
                                  </Fragment>
                                ) : (
                                  ''
                                )}
                                {settings.boolAddress ? (
                                  <Fragment>{settings.strAddress}</Fragment>
                                ) : (
                                  ''
                                )}
                                {settings.boolPhone ? (
                                  <Fragment>
                                    <br />
                                    Ph. no: {settings.strPhone}
                                  </Fragment>
                                ) : (
                                  ''
                                )}
                                {settings.boolEmail || settings.boolWebsite ? (
                                  <>
                                    <Fragment>
                                      <br />
                                      Email: {settings.strEmail}
                                    </Fragment>

                                    {settings.boolWebsite && (
                                      <Fragment>
                                        {' '}
                                        Website: {settings.strEmail}
                                      </Fragment>
                                    )}
                                  </>
                                ) : (
                                  ''
                                )}
                              </p>
                            </div>
                          </div>
                          <div
                            style={{
                              width: '50%',
                              textAlign: 'right',
                              paddingTop: '10px',
                              paddingRight: '10px'
                            }}
                          >
                            <div
                              style={{
                                textAlign: 'right',
                                paddingRight: '10px'
                              }}
                            >
                              {data.irnNo && (
                                <>
                                  {data.eInvoiceQrCodeStr ? (
                                    <>
                                      <QRCode
                                        value={
                                          data.eInvoiceQrCodeStr
                                            ? data.eInvoiceQrCodeStr
                                            : ''
                                        }
                                        size={45}
                                      />
                                      <div>
                                        <p>
                                          Ack No. : {data.ackNo && data.ackNo}
                                        </p>
                                      </div>
                                    </>
                                  ) : (
                                    ''
                                  )}
                                </>
                              )}
                            </div>
                            {data.irnNo && data.irnNo !== '' && (
                              <div
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  <b>IRN : {data.irnNo}</b>
                                </p>
                              </div>
                            )}
                            <b>
                              {settings.boolGSTIN ? (
                                <Fragment> GSTIN: {settings.strGSTIN}</Fragment>
                              ) : (
                                ''
                              )}
                            </b>
                            <p>
                              {settings.boolPAN ? (
                                <Fragment> PAN: {settings.strPAN}</Fragment>
                              ) : (
                                ''
                              )}
                            </p>
                          </div>
                        </div>
                      </div>

                      <div
                        style={{
                          display: 'flex',
                          flexDirection: 'row',
                          border: '1px solid'
                        }}
                      >
                        <div
                          style={{
                            width: '50%',
                            paddingLeft: '10px'
                          }}
                        >
                          <p
                            style={{
                              flex: 1,
                              wordBreak: 'keep-all',
                              marginTop: '0px',
                              paddingTop: '0px',
                              paddingBottom: '0px',
                              marginBottom: '0px'
                            }}
                          >
                            <b>
                              {' '}
                              {data.invoiceNoTitle}
                              {' : '}
                              {data.invoiceNumber}{' '}
                            </b>
                          </p>
                          {data.salesInvoiceNumber && (
                            <>
                              <p
                                style={{
                                  textAlign: 'left',
                                  flex: 1,
                                  wordBreak: 'keep-all',
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                <b> Return Date : </b>
                                {dateFormatter(data.salesReturnDate)}{' '}
                              </p>
                              <p
                                style={{
                                  textAlign: 'left',
                                  flex: 1,
                                  wordBreak: 'keep-all',
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                <b>
                                  Sale Invoice No. : {data.salesInvoiceNumber}{' '}
                                </b>
                              </p>
                            </>
                          )}
                          <p
                            style={{
                              flex: 1,
                              wordBreak: 'keep-all',
                              marginTop: '0px',
                              paddingTop: '0px',
                              paddingBottom: '0px',
                              marginBottom: '0px'
                            }}
                          >
                            {_data.purchase_order_invoice_number ? (
                              <b>{'PO Date : '}</b>
                            ) : data.salesReturnDate ? (
                              <b>{'Invoice Date : '}</b>
                            ) : (
                              <b>{'Date : '}</b>
                            )}
                            {dateFormatter(data.date) + ' '}{' '}
                            {TxnEnableFieldsMap.get(
                              'display_bill_transaction_time'
                            ) && getTimefromTimeStamp(data.updatedAt)}
                          </p>
                          {taxSettingsData?.exporterCodeNo ? (
                            <p>
                              <b> EXP Ref: </b>{' '}
                              {taxSettingsData?.exporterCodeNo}
                            </p>
                          ) : (
                            ''
                          )}
                          {taxSettingsData?.exporterRegistrationDate ? (
                            <p>
                              <b> EXP Reg Date: </b>{' '}
                              {taxSettingsData?.exporterRegistrationDate}
                            </p>
                          ) : (
                            ''
                          )}
                          {data.duedate && (
                            <p
                              style={{
                                marginTop: '0px',
                                paddingTop: '0px',
                                paddingBottom: '0px',
                                marginBottom: '0px'
                              }}
                            >
                              <b>Due Date : </b>
                              {dateFormatter(data.duedate)}
                            </p>
                          )}
                          {data.placeOfSupplyName && (
                            <p
                              style={{
                                flex: 1,
                                wordBreak: 'keep-all',
                                marginTop: '0px',
                                paddingTop: '0px',
                                paddingBottom: '0px',
                                marginBottom: '0px'
                              }}
                            >
                              <b>Place Of Supply{' : '}</b>
                              {data.placeOfSupplyName}
                            </p>
                          )}
                          {true && data.exportCountryOrigin !== '' && (
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              <b>Country of origin{' : '}</b>
                              {data.exportCountryOrigin}
                            </p>
                          )}
                          {true && data.exportCountry !== '' && (
                            <p
                              style={{
                                textAlign: 'left',
                                flex: 1,
                                wordBreak: 'keep-all'
                              }}
                            >
                              <b>Country of Final{' : '}</b>
                              {data.exportCountry}
                            </p>
                          )}
                          {TxnSettings &&
                            TxnEnableFieldsMap.get('display_po') && (
                              <p
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                <b>{data.poNo && 'PO Number : '}</b>
                                {data.poNo && data.poNo}
                              </p>
                            )}
                          {data.poDate && (
                            <p
                              style={{
                                marginTop: '0px',
                                paddingTop: '0px',
                                paddingBottom: '0px',
                                marginBottom: '0px'
                              }}
                            >
                              <b>PO Date : </b>
                              {dateFormatter(data.poDate) + ' '}
                            </p>
                          )}
                          {_data.rateList &&
                            _data.rateList.length > 0 &&
                            localStorage.getItem('isJewellery') === 'true' &&
                            getMetalNRates()}
                        </div>
                        <div style={{ width: '50%', paddingLeft: '10px' }}>
                          {data.order_type === 'kot' ? (
                            <>
                              <p
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                <b>Table No : </b>
                                {data.tableNumber && data.tableNumber}
                              </p>
                              <p
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                <b>Chairs : </b>
                                {data.chairsUsedInString &&
                                  data.chairsUsedInString}
                              </p>
                              {data.duedate && (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  <b>Waiter Name : </b>
                                  {data.waiter_name && data.waiter_name}
                                </p>
                              )}{' '}
                            </>
                          ) : (
                            <>
                              {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_job_work_employee'
                                ) && (
                                  <p
                                    style={{
                                      marginTop: '0px',
                                      paddingTop: '0px',
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    <b>Job By{' : '}</b>
                                    <br />
                                    {_data.jobAssignedEmployeeName}
                                  </p>
                                )}
                              {TxnSettings &&
                                TxnEnableFieldsMap.get('display_salesman') && (
                                  <p
                                    style={{
                                      marginTop: '0px',
                                      paddingTop: '0px',
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    <b>Sales By{' : '}</b>
                                    <br />
                                    {_data.salesEmployeeName}
                                  </p>
                                )}
                              {_data.backToBackPurchaseNumber &&
                                _data.supervisorName !== '' && (
                                  <p
                                    style={{
                                      marginTop: '0px',
                                      paddingTop: '0px',
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    <b>Supervisor{' : '}</b>
                                    {_data.supervisorName}
                                  </p>
                                )}
                              {_data.backToBackPurchaseNumber &&
                                _data.materialsInChargeName !== '' && (
                                  <p
                                    style={{
                                      marginTop: '0px',
                                      paddingTop: '0px',
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    <b>Materials In Charge{' : '}</b>
                                    {_data.materialsInChargeName}
                                  </p>
                                )}
                              {data.eWayBillNo && (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  <b>E-Way Bill No{' : '}</b>
                                  {data.eWayBillNo}
                                </p>
                              )}
                              {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) &&
                                data.transportMode && (
                                  <p
                                    style={{
                                      marginTop: '0px',
                                      paddingTop: '0px',
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    <b>{'Transport Mode: '}</b>
                                    {data.transportMode}
                                  </p>
                                )}

                              {TxnSettings &&
                              TxnEnableFieldsMap.get(
                                'display_transportation'
                              ) ? (
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  <b>Port of loading: </b>

                                  {TxnSettings &&
                                    TxnEnableFieldsMap.get(
                                      'display_transportation'
                                    ) &&
                                    data.portOfLoading && (
                                      <>{data.portOfLoading}</>
                                    )}
                                </p>
                              ) : (
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  <b> </b>
                                  <>{}</>
                                </p>
                              )}

                              {TxnSettings &&
                              TxnEnableFieldsMap.get(
                                'display_transportation'
                              ) ? (
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  <b>Port of Discharge: </b>

                                  {TxnSettings &&
                                    TxnEnableFieldsMap.get(
                                      'display_transportation'
                                    ) &&
                                    data.portOfDischarge && (
                                      <>{data.portOfDischarge}</>
                                    )}
                                </p>
                              ) : (
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  <b> </b>
                                  <>{}</>
                                </p>
                              )}

                              {TxnSettings &&
                              TxnEnableFieldsMap.get(
                                'display_transportation'
                              ) ? (
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  <b>Vessel Flight No: </b>

                                  {TxnSettings &&
                                    TxnEnableFieldsMap.get(
                                      'display_transportation'
                                    ) &&
                                    data.vesselFlightNo && (
                                      <>{data.vesselFlightNo}</>
                                    )}
                                </p>
                              ) : (
                                <p style={{ flex: 1, wordBreak: 'keep-all' }}>
                                  <b> </b>
                                  <>{}</>
                                </p>
                              )}

                              {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) &&
                                data.transporterId && (
                                  <p
                                    style={{
                                      marginTop: '0px',
                                      paddingTop: '0px',
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    <b>{'Transporter Id : '}</b>
                                    {data.transporterId}
                                  </p>
                                )}

                              {TxnSettings &&
                                TxnEnableFieldsMap.get(
                                  'display_transportation'
                                ) &&
                                data.vehicleNo && (
                                  <p
                                    style={{
                                      marginTop: '0px',
                                      paddingTop: '0px',
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    <b>{'Vehicle No : '}</b>
                                    {data.vehicleNo}
                                  </p>
                                )}
                            </>
                          )}

                          {isTemple && (
                            <div
                              dangerouslySetInnerHTML={{
                                __html: data.astrologyDetails + '<br />'
                              }}
                            ></div>
                          )}
                          {isTemple && (
                            <div
                              dangerouslySetInnerHTML={{
                                __html: data.additionalTempleDetails + '<br />'
                              }}
                            ></div>
                          )}
                        </div>
                      </div>

                      <div
                        style={{
                          display: 'flex',
                          flexDirection: 'row',
                          border: '1px solid'
                        }}
                      >
                        <div style={{ width: '50%', paddingLeft: '10px' }}>
                          {_data.delivery_challan_invoice_number &&
                          data.shipToCustomerName ? (
                            <>
                              <p>
                                <b>{data.billTitle}</b>
                              </p>
                              <p
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                <b>{data.shipToCustomerName}</b>
                              </p>
                              {data.shipToCustomerAddress && (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.shipToCustomerAddress}
                                </p>
                              )}
                              {data.shipToCustomerPhoneNo && (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Ph. no: {data.shipToCustomerPhoneNo}
                                </p>
                              )}
                              {data.shipToCustomerGSTNo && (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {' '}
                                  <b>GSTIN: {data.shipToCustomerGSTNo}</b>{' '}
                                </p>
                              )}
                              {data.shipToCustomerState ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.shipToCustomerState}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                            </>
                          ) : (
                            <>
                              <p>
                                <b>{data.billTitle}</b>
                              </p>
                              <p
                                style={{
                                  marginTop: '0px',
                                  paddingTop: '0px',
                                  paddingBottom: '0px',
                                  marginBottom: '0px'
                                }}
                              >
                                <b>{data.tname}</b>
                              </p>
                              {data.tadd && (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.tadd}
                                </p>
                              )}
                              {data.tphone && (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Ph No: {data.tphone}
                                </p>
                              )}
                              {data.tgstn && (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  <b>{data.tgstn}</b>
                                </p>
                              )}
                              {_data.aadharNumber ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Aaadhar No: {_data.aadharNumber}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                              {data.tstate && (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.tstate}
                                </p>
                              )}
                            </>
                          )}
                        </div>
                        <div style={{ width: '50%', paddingLeft: '10px' }}>
                          {data.isSale && data.shipToCustomerName && (
                            <>
                              <b>
                                {TxnSettings?.enableBuyerOtherThanConsignee
                                  ? 'Buyer (Other Consignee)'
                                  : 'Ship To'}
                              </b>
                              {data.shipToCustomerName && (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {' '}
                                  <b>{data.shipToCustomerName} </b>
                                </p>
                              )}

                              {data.shipToCustomerAddress && (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.shipToCustomerAddress}
                                </p>
                              )}
                              {data.shipToCustomerPhoneNo && (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  Ph No: {data.shipToCustomerPhoneNo}
                                </p>
                              )}
                              {data.shipToCustomerGSTNo && (
                                <b
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  GSTIN: {data.shipToCustomerGSTNo}
                                </b>
                              )}
                              {data.shipToCustomerState ? (
                                <p
                                  style={{
                                    marginTop: '0px',
                                    paddingTop: '0px',
                                    paddingBottom: '0px',
                                    marginBottom: '0px'
                                  }}
                                >
                                  {data.shipToCustomerState}
                                  {<br />}
                                </p>
                              ) : (
                                ''
                              )}
                            </>
                          )}
                        </div>
                      </div>

                      {getHeaderRow()}

                      <div
                        style={{ border: '1px solid', minHeight: minRowHeight }}
                      >
                        {_data.item_list && _data.item_list.length > 0
                          ? getInvoiceRows()
                          : ''}
                      </div>
                      {!isPackagePreivew ? (
                        <div>
                          <div
                            style={{
                              width: '100%',
                              borderTop: '1px solid',
                              borderRight: '1px solid',
                              borderLeft: '1px solid',
                              breakInside: 'avoid',
                              fontWeight: 600,
                              display: 'flex',
                              flexDirection: 'row'
                            }}
                          >
                            <div
                              style={{ textAlign: 'center', width: '10%' }}
                            ></div>
                            <div
                              style={{
                                textAlign: 'center',
                                width: '30%'
                              }}
                            >
                              Total
                            </div>
                            {/******* HSN ********/}
                            {TxnEnableFieldsMap.get('display_hsn') && (
                              <div
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}
                            {/********* Serial/IMEI No. *********/}
                            {TxnSettings &&
                              TxnEnableFieldsMap.get(
                                'display_product_serial_imei'
                              ) && (
                                <div
                                  style={{
                                    borderRight: '1px solid ',
                                    paddingRight: '3px',
                                    width: '15%',
                                    textAlign: 'right'
                                  }}
                                ></div>
                              )}
                            {/* Batch Number */}
                            {TxnEnableFieldsMap.get(
                              'display_product_batch_number'
                            ) && (
                              <div
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}
                            {/* BArcode */}
                            {TxnEnableFieldsMap.get(
                              'display_product_barcode'
                            ) && (
                              <div
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}
                            {/* Brand */}
                            {TxnEnableFieldsMap.get(
                              'display_product_brand'
                            ) && (
                              <div
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}
                            {/* Model Number */}
                            {TxnEnableFieldsMap.get(
                              'display_product_model_no'
                            ) && (
                              <div
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}
                            {/* Manufacturing Date */}
                            {TxnEnableFieldsMap.get(
                              'display_product_manufacturing_date'
                            ) && (
                              <div
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}
                            {/* Expiry Date */}
                            {TxnEnableFieldsMap.get(
                              'display_product_expiry_date'
                            ) && (
                              <div
                                style={{
                                  width: '16%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}
                            {TxnEnableFieldsMap.get(
                              'display_product_quantity'
                            ) && (
                              <div style={{ width: '15%', textAlign: 'right' }}>
                                {totalqty}
                              </div>
                            )}
                            {/* Total Free Quantity */}
                            {TxnEnableFieldsMap.get(
                              'display_product_free_quantity'
                            ) && (
                              <div style={{ width: '15%', textAlign: 'right' }}>
                                {totalfreeqty}
                              </div>
                            )}
                            {/* Unit */}
                            {TxnEnableFieldsMap.get('display_product_unit') && (
                              <div
                                style={{ width: '15%', textAlign: 'right' }}
                              ></div>
                            )}
                            {_data.exportConversionRate === 0 &&
                              TxnEnableFieldsMap.get('display_product_mrp') && (
                                <div
                                  style={{ width: '15%', textAlign: 'right' }}
                                ></div>
                              )}
                            {_data.exportConversionRate === 0 &&
                              TxnEnableFieldsMap.get(
                                'display_product_price'
                              ) && (
                                <div
                                  style={{
                                    width: '15%',
                                    textAlign: 'right',
                                    paddingRight: '3px'
                                  }}
                                ></div>
                              )}
                            {_data.exportConversionRate > 0 &&
                              TxnEnableFieldsMap.get(
                                'display_product_price_other_currency'
                              ) && (
                                <p
                                  style={{
                                    width: '15%',
                                    textAlign: 'right',
                                    paddingRight: '3px'
                                  }}
                                ></p>
                              )}
                            {TxnEnableFieldsMap.get(
                              'display_product_price_per_gram'
                            ) && (
                              <div
                                style={{
                                  width: '30%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              ></div>
                            )}
                            {TxnEnableFieldsMap.get(
                              'display_product_gross_weight'
                            ) && (
                              <div style={{ width: '15%', textAlign: 'right' }}>
                                {parseFloat(totalGrossWt).toFixed(3)}
                              </div>
                            )}
                            {TxnEnableFieldsMap.get(
                              'display_product_stone_weight'
                            ) && (
                              <div style={{ width: '15%', textAlign: 'right' }}>
                                {parseFloat(totalStoneWt).toFixed(3)}
                              </div>
                            )}
                            {TxnEnableFieldsMap.get(
                              'display_product_net_weight'
                            ) && (
                              <div style={{ width: '15%', textAlign: 'right' }}>
                                {parseFloat(totalNetWt).toFixed(3)}
                              </div>
                            )}
                            {TxnEnableFieldsMap.get(
                              'display_product_wastage'
                            ) && (
                              <div
                                style={{ width: '15%', textAlign: 'right' }}
                              ></div>
                            )}
                            {TxnEnableFieldsMap.get(
                              'display_product_making_charge'
                            ) && (
                              <div
                                style={{ width: '15%', textAlign: 'right' }}
                              ></div>
                            )}
                            {TxnEnableFieldsMap.get(
                              'display_product_making_charge_per_gram'
                            ) && (
                              <div
                                style={{ width: '15%', textAlign: 'right' }}
                              ></div>
                            )}
                            {TxnEnableFieldsMap.get(
                              'display_product_stone_charge'
                            ) && (
                              <div
                                style={{ width: '15%', textAlign: 'right' }}
                              ></div>
                            )}
                            {TxnEnableFieldsMap.get(
                              'display_product_purity'
                            ) && (
                              <div
                                style={{ width: '15%', textAlign: 'right' }}
                              ></div>
                            )}
                            {/* Copper */}
                            {TxnEnableFieldsMap.get(
                              'display_product_copper'
                            ) && (
                              <div
                                style={{ width: '15%', textAlign: 'right' }}
                              ></div>
                            )}
                            {TxnEnableFieldsMap.get(
                              'display_product_discount'
                            ) && (
                              <div style={{ width: '15%', textAlign: 'right' }}>
                                {data.exportConversionRate > 0 ? (
                                  <span>
                                    {getFloatWithTwoDecimal(
                                      data.subTotalDisc /
                                        data.exportConversionRate
                                    )}
                                  </span>
                                ) : (
                                  <span>
                                    â‚¹{' '}
                                    {getFloatWithTwoDecimal(data.subTotalDisc)}
                                  </span>
                                )}
                              </div>
                            )}
                            {_data.exportConversionRate === 0 &&
                              TxnEnableFieldsMap.get(
                                'display_product_gst_percentage'
                              ) && (
                                <div
                                  style={{ width: '15%', textAlign: 'right' }}
                                ></div>
                              )}
                            {_data.exportConversionRate === 0 &&
                              TxnEnableFieldsMap.get('display_product_gst') && (
                                <div
                                  style={{ width: '15%', textAlign: 'right' }}
                                >
                                  {getFloatWithTwoDecimal(totaltax_gst)}
                                </div>
                              )}
                            {data.isSale ? (
                              <>
                                {_data.exportConversionRate === 0 &&
                                  TxnEnableFieldsMap.get(
                                    'display_product_total_amount'
                                  ) && (
                                    <div
                                      style={{
                                        width: '25%',
                                        textAlign: 'right',
                                        paddingRight: '3px'
                                      }}
                                    >
                                      {getFloatWithTwoDecimal(data.itemTotal)}
                                    </div>
                                  )}{' '}
                                {TxnEnableFieldsMap.get(
                                  'display_product_total_amount_other'
                                ) &&
                                  _data.exportConversionRate > 0 && (
                                    <div
                                      style={{
                                        paddingRight: '3px',
                                        width: '25%',
                                        textAlign: 'right'
                                      }}
                                    >
                                      {getFloatWithTwoDecimal(data.itemTotal)}
                                    </div>
                                  )}
                              </>
                            ) : (
                              <div
                                style={{
                                  width: '25%',
                                  textAlign: 'right',
                                  paddingRight: '3px'
                                }}
                              >
                                {getFloatWithTwoDecimal(data.itemTotal)}
                              </div>
                            )}
                          </div>

                          <div
                            style={{
                              borderLeft: '1px solid',
                              borderRight: '1px solid',
                              borderBottom: '1px solid',
                              breakInside: 'avoid',
                              display: 'flex',
                              flexDirection: 'row',
                              paddingLeft: '10px'
                            }}
                          >
                            <div
                              style={{
                                width: '57%',
                                display: 'flex',
                                flexDirection: 'column'
                              }}
                            >
                              {this.getSeparator(1, classes.separator)}
                              <div
                                style={{
                                  display:
                                    data.exportConversionRate > 0
                                      ? 'none'
                                      : 'block'
                                }}
                              >
                                <div
                                  style={{
                                    width: '100%',
                                    display: 'flex',
                                    border: '1px solid',
                                    flexDirection: 'row',
                                    textAlign: 'center',
                                    fontWeight: 'bold',
                                    fontSize: '6px'
                                  }}
                                >
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '20%'
                                    }}
                                  >
                                    <p>TAXABLE AMT</p>
                                  </div>
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '14%'
                                    }}
                                  >
                                    <p>CGST %</p>
                                  </div>
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '14%'
                                    }}
                                  >
                                    <p>CGST AMT</p>
                                  </div>
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '14%'
                                    }}
                                  >
                                    <p>SGST %</p>
                                  </div>
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '14%'
                                    }}
                                  >
                                    <p>SGST AMT</p>
                                  </div>
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '14%'
                                    }}
                                  >
                                    <p>IGST %</p>
                                  </div>
                                  <div style={{ width: '14%' }}>
                                    <p>IGST AMT</p>
                                  </div>
                                </div>

                                {taxSplitDataList ? getUITaxSplitGSTRows() : ''}
                                <div
                                  style={{
                                    width: '100%',
                                    borderLeft: '1px solid',
                                    borderRight: '1px solid',
                                    borderBottom: '1px solid',
                                    display: 'flex',
                                    flexDirection: 'row',
                                    textAlign: 'center',
                                    fontWeight: 'bold',
                                    fontSize: '6px'
                                  }}
                                >
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '20%'
                                    }}
                                  >
                                    <p>TOTAL</p>
                                  </div>
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '14%'
                                    }}
                                  >
                                    <p>CGST</p>
                                  </div>
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '14%'
                                    }}
                                  >
                                    <p>â‚¹ {getFloatWithTwoDecimal(totalCGST)}</p>
                                  </div>
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '14%'
                                    }}
                                  >
                                    <p>SGST </p>
                                  </div>
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '14%'
                                    }}
                                  >
                                    <p>â‚¹ {getFloatWithTwoDecimal(totalSGST)}</p>
                                  </div>
                                  <div
                                    style={{
                                      borderRight: '1px solid',
                                      width: '14%'
                                    }}
                                  >
                                    <p>IGST </p>
                                  </div>
                                  <div style={{ width: '14%' }}>
                                    <p>â‚¹ {getFloatWithTwoDecimal(totalIGST)}</p>
                                  </div>
                                </div>
                              </div>

                              <div style={{ flex: 1, wordBreak: 'keep-all' }}>
                                <div
                                  style={{
                                    display: 'flex',
                                    flexDirection: 'column'
                                  }}
                                >
                                  {!_data.date && settings.boolDesc ? (
                                    <Fragment>
                                      <p
                                        style={{
                                          fontWeight: 600,
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        Description
                                      </p>
                                      <p
                                        style={{
                                          backgroundColor: '#f5f2f2',
                                          marginTop: '0px',
                                          paddingTop: '0px',
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        {settings.strDesc}
                                      </p>
                                    </Fragment>
                                  ) : (
                                    ''
                                  )}
                                  {TxnEnableFieldsMap.get(
                                    'display_bill_notes'
                                  ) ||
                                  TxnEnableFieldsMap.get(
                                    'display_total_weight'
                                  ) ? (
                                    <Fragment>
                                      <p
                                        style={{
                                          fontWeight: 600,
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        Notes
                                      </p>
                                      {data.notes && (
                                        <p
                                          style={{
                                            backgroundColor: '#f5f2f2',
                                            marginTop: '0px',
                                            paddingTop: '0px',
                                            paddingBottom: '0px',
                                            marginBottom: '0px'
                                          }}
                                        >
                                          {data.notes}
                                        </p>
                                      )}
                                      {TxnEnableFieldsMap.get(
                                        'display_total_weight'
                                      ) && (
                                        <>
                                          {_data.weightIn &&
                                          _data.weightIn > 0 ? (
                                            <div
                                              style={{
                                                backgroundColor: '#f5f2f2',
                                                textAlign: 'right',
                                                display: 'flex',
                                                flexDirection: 'row'
                                              }}
                                            >
                                              <p
                                                style={{
                                                  fontWeight: 600,
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                Weight In
                                              </p>
                                              <p
                                                style={{
                                                  flex: 1,
                                                  wordBreak: 'keep-all',
                                                  fontWeight: 600,
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                {getFloatWithTwoDecimal(
                                                  _data.weightIn
                                                    ? _data.weightIn
                                                    : 0
                                                )}
                                                g
                                              </p>
                                            </div>
                                          ) : null}
                                          {_data.weightOut &&
                                          _data.weightOut > 0 ? (
                                            <div
                                              style={{
                                                backgroundColor: '#f5f2f2',
                                                textAlign: 'right',
                                                display: 'flex',
                                                flexDirection: 'row'
                                              }}
                                            >
                                              <p
                                                style={{
                                                  fontWeight: 600,
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                Weight Out
                                              </p>
                                              <p
                                                style={{
                                                  flex: 1,
                                                  wordBreak: 'keep-all',
                                                  fontWeight: 600
                                                }}
                                              >
                                                {getFloatWithTwoDecimal(
                                                  _data.weightOut
                                                    ? _data.weightOut
                                                    : 0
                                                )}
                                                g
                                              </p>
                                            </div>
                                          ) : null}
                                          {_data.wastage &&
                                          _data.wastage > 0 ? (
                                            <div
                                              style={{
                                                backgroundColor: '#f5f2f2',
                                                textAlign: 'right',
                                                display: 'flex',
                                                flexDirection: 'row'
                                              }}
                                            >
                                              <p
                                                style={{
                                                  fontWeight: 600,
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                Wastage
                                              </p>
                                              <p
                                                style={{
                                                  flex: 1,
                                                  wordBreak: 'keep-all',
                                                  fontWeight: 600,
                                                  marginTop: '0px',
                                                  paddingTop: '0px',
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                {getFloatWithTwoDecimal(
                                                  _data.wastage
                                                    ? _data.wastage
                                                    : 0
                                                )}
                                                g
                                              </p>
                                            </div>
                                          ) : null}
                                        </>
                                      )}
                                    </Fragment>
                                  ) : (
                                    ''
                                  )}
                                  <p
                                    style={{
                                      fontWeight: 600,
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    INVOICE AMOUNT IN WORDS
                                  </p>
                                  <p
                                    style={{
                                      textTransform: 'capitalize',
                                      backgroundColor: '#f5f2f2',
                                      marginTop: '0px',
                                      paddingTop: '0px',
                                      paddingBottom: '0px',
                                      marginBottom: '0px'
                                    }}
                                  >
                                    {data.strTotal}
                                  </p>
                                  {data.terms !== '' ? (
                                    <Fragment>
                                      <p
                                        style={{
                                          fontWeight: 600,
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        TERMS AND CONDITIONS
                                      </p>
                                      <div
                                        style={{
                                          whiteSpace: 'break-spaces',
                                          marginTop: '0px',
                                          paddingTop: '0px',
                                          paddingBottom: '0px',
                                          marginBottom: '0px'
                                        }}
                                      >
                                        {data.terms}
                                      </div>
                                    </Fragment>
                                  ) : (
                                    ''
                                  )}
                                  <div
                                    style={{
                                      width: '100%',
                                      display: 'flex',
                                      flexDirection: 'row'
                                    }}
                                  >
                                    {settings.boolBankDetail ? (
                                      <div style={{ width: '70%' }}>
                                        {settings.boolBankDetailsOnCreditSaleOnly &&
                                        data.balanceAmount > 0 ? (
                                          <Fragment>
                                            <div>
                                              <p
                                                style={{
                                                  fontWeight: 600,
                                                  paddingBottom: '0px',
                                                  marginBottom: '0px'
                                                }}
                                              >
                                                BANK DETAILS
                                              </p>
                                              <div
                                                style={{
                                                  display: 'flex',
                                                  flexDirection: 'row'
                                                }}
                                              >
                                                <div style={{ width: '45%' }}>
                                                  <p
                                                    style={{
                                                      marginTop: '0px',
                                                      paddingTop: '0px',
                                                      paddingBottom: '0px',
                                                      marginBottom: '0px'
                                                    }}
                                                  >
                                                    A/C Holder's Name
                                                  </p>
                                                </div>
                                                <div style={{ width: '55%' }}>
                                                  <p
                                                    style={{
                                                      marginTop: '0px',
                                                      paddingTop: '0px',
                                                      paddingBottom: '0px',
                                                      marginBottom: '0px'
                                                    }}
                                                  >
                                                    :{' '}
                                                    {
                                                      settings.bankAccountHolderName
                                                    }
                                                  </p>
                                                </div>
                                              </div>
                                              <div
                                                style={{
                                                  display: 'flex',
                                                  flexDirection: 'row'
                                                }}
                                              >
                                                <div style={{ width: '45%' }}>
                                                  <p
                                                    style={{
                                                      marginTop: '0px',
                                                      paddingTop: '0px',
                                                      paddingBottom: '0px',
                                                      marginBottom: '0px'
                                                    }}
                                                  >
                                                    BANK NAME
                                                  </p>
                                                </div>
                                                <div style={{ width: '55%' }}>
                                                  <p
                                                    style={{
                                                      marginTop: '0px',
                                                      paddingTop: '0px',
                                                      paddingBottom: '0px',
                                                      marginBottom: '0px'
                                                    }}
                                                  >
                                                    : {settings.bankName}
                                                  </p>
                                                </div>
                                              </div>
                                              <div
                                                style={{
                                                  display: 'flex',
                                                  flexDirection: 'row'
                                                }}
                                              >
                                                <div style={{ width: '45%' }}>
                                                  <p
                                                    style={{
                                                      marginTop: '0px',
                                                      paddingTop: '0px',
                                                      paddingBottom: '0px',
                                                      marginBottom: '0px'
                                                    }}
                                                  >
                                                    A/C NO.
                                                  </p>
                                                </div>
                                                <div style={{ width: '55%' }}>
                                                  <p
                                                    style={{
                                                      marginTop: '0px',
                                                      paddingTop: '0px',
                                                      paddingBottom: '0px',
                                                      marginBottom: '0px'
                                                    }}
                                                  >
                                                    :{' '}
                                                    {settings.bankAccountNumber}
                                                  </p>
                                                </div>
                                              </div>
                                              <div
                                                style={{
                                                  display: 'flex',
                                                  flexDirection: 'row'
                                                }}
                                              >
                                                <div style={{ width: '45%' }}>
                                                  <p
                                                    style={{
                                                      marginTop: '0px',
                                                      paddingTop: '0px',
                                                      paddingBottom: '0px',
                                                      marginBottom: '0px'
                                                    }}
                                                  >
                                                    IFSC Code
                                                  </p>
                                                </div>
                                                <div style={{ width: '55%' }}>
                                                  <p
                                                    style={{
                                                      marginTop: '0px',
                                                      paddingTop: '0px',
                                                      paddingBottom: '0px',
                                                      marginBottom: '0px'
                                                    }}
                                                  >
                                                    : {settings.bankIfscCode}
                                                  </p>
                                                </div>
                                              </div>
                                            </div>
                                          </Fragment>
                                        ) : (
                                          <div>
                                            {!settings.boolBankDetailsOnCreditSaleOnly ? (
                                              <Fragment>
                                                <div>
                                                  <p
                                                    style={{ fontWeight: 600 }}
                                                  >
                                                    BANK DETAILS
                                                  </p>
                                                  <div
                                                    style={{
                                                      display: 'flex',
                                                      flexDirection: 'row'
                                                    }}
                                                  >
                                                    <div
                                                      style={{ width: '45%' }}
                                                    >
                                                      <p
                                                        style={{
                                                          marginTop: '0px',
                                                          paddingTop: '0px',
                                                          paddingBottom: '0px',
                                                          marginBottom: '0px'
                                                        }}
                                                      >
                                                        A/C Holder's Name
                                                      </p>
                                                    </div>
                                                    <div
                                                      style={{ width: '55%' }}
                                                    >
                                                      <p
                                                        style={{
                                                          marginTop: '0px',
                                                          paddingTop: '0px',
                                                          paddingBottom: '0px',
                                                          marginBottom: '0px'
                                                        }}
                                                      >
                                                        :{' '}
                                                        {
                                                          settings.bankAccountHolderName
                                                        }
                                                      </p>
                                                    </div>
                                                  </div>
                                                  <div
                                                    style={{
                                                      display: 'flex',
                                                      flexDirection: 'row'
                                                    }}
                                                  >
                                                    <div
                                                      style={{ width: '45%' }}
                                                    >
                                                      <p
                                                        style={{
                                                          marginTop: '0px',
                                                          paddingTop: '0px',
                                                          paddingBottom: '0px',
                                                          marginBottom: '0px'
                                                        }}
                                                      >
                                                        BANK NAME
                                                      </p>
                                                    </div>
                                                    <div
                                                      style={{ width: '55%' }}
                                                    >
                                                      <p
                                                        style={{
                                                          marginTop: '0px',
                                                          paddingTop: '0px',
                                                          paddingBottom: '0px',
                                                          marginBottom: '0px'
                                                        }}
                                                      >
                                                        : {settings.bankName}
                                                      </p>
                                                    </div>
                                                  </div>
                                                  <div
                                                    style={{
                                                      display: 'flex',
                                                      flexDirection: 'row'
                                                    }}
                                                  >
                                                    <div
                                                      style={{ width: '45%' }}
                                                    >
                                                      <p
                                                        style={{
                                                          marginTop: '0px',
                                                          paddingTop: '0px',
                                                          paddingBottom: '0px',
                                                          marginBottom: '0px'
                                                        }}
                                                      >
                                                        A/C NO.
                                                      </p>
                                                    </div>
                                                    <div
                                                      style={{ width: '55%' }}
                                                    >
                                                      <p
                                                        style={{
                                                          marginTop: '0px',
                                                          paddingTop: '0px',
                                                          paddingBottom: '0px',
                                                          marginBottom: '0px'
                                                        }}
                                                      >
                                                        :{' '}
                                                        {
                                                          settings.bankAccountNumber
                                                        }
                                                      </p>
                                                    </div>
                                                  </div>
                                                  <div
                                                    style={{
                                                      display: 'flex',
                                                      flexDirection: 'row'
                                                    }}
                                                  >
                                                    <div
                                                      style={{ width: '45%' }}
                                                    >
                                                      <p
                                                        style={{
                                                          marginTop: '0px',
                                                          paddingTop: '0px',
                                                          paddingBottom: '0px',
                                                          marginBottom: '0px'
                                                        }}
                                                      >
                                                        IFSC Code
                                                      </p>
                                                    </div>
                                                    <div
                                                      style={{ width: '55%' }}
                                                    >
                                                      <p
                                                        style={{
                                                          marginTop: '0px',
                                                          paddingTop: '0px',
                                                          paddingBottom: '0px',
                                                          marginBottom: '0px'
                                                        }}
                                                      >
                                                        :{' '}
                                                        {settings.bankIfscCode}
                                                      </p>
                                                    </div>
                                                  </div>
                                                </div>
                                              </Fragment>
                                            ) : (
                                              ''
                                            )}
                                          </div>
                                        )}
                                      </div>
                                    ) : (
                                      ''
                                    )}
                                    <div
                                      style={{
                                        width: '30%',
                                        textAlign: 'center'
                                      }}
                                    >
                                      {settings.boolQrCode ? (
                                        <Fragment>
                                          {this.getSeparator(
                                            1,
                                            classes.separator
                                          )}
                                          <QRCode
                                            value={
                                              data.qrCodestr
                                                ? data.qrCodestr
                                                : ''
                                            }
                                            size={75}
                                          />
                                        </Fragment>
                                      ) : (
                                        ''
                                      )}
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>

                            <div
                              style={{
                                width: '3%',
                                display: 'flex',
                                flexDirection: 'column',
                                fontSize: '9px',
                                alignSelf: 'flex-end',
                                marginBottom: '10px'
                              }}
                            >
                              <div>
                                {/* <p>No. of Items : {_data.item_list.length}</p> */}
                              </div>
                            </div>

                            <div
                              style={{
                                width: '46%',
                                borderLeft: '1px solid',
                                borderBottom: '1px solid',
                                display: 'flex',
                                flexDirection: 'column',
                                fontSize: '9px'
                              }}
                            >
                              <div
                                style={{ width: '100%', padding: '5px 3px' }}
                              >
                                {_data.exportConversionRate === 0 &&
                                TxnEnableFieldsMap.get(
                                  'display_bill_packing_charge'
                                ) &&
                                _data.packing_charge ? (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row',
                                      flexWrap: 'wrap'
                                    }}
                                  >
                                    <p>Package Charge</p>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all'
                                      }}
                                    >
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.packing_charge
                                          ? _data.packing_charge
                                          : 0
                                      )}
                                    </p>
                                  </div>
                                ) : (
                                  ' '
                                )}

                                {_data.exportConversionRate > 0 &&
                                TxnEnableFieldsMap.get(
                                  'display_packing_other_currency'
                                ) &&
                                _data.packingChargeOtherCurrency ? (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row',
                                      flexWrap: 'wrap'
                                    }}
                                  >
                                    {_data.packingChargeOtherCurrency && (
                                      <div
                                        style={{
                                          minWidth: '100%',
                                          display: 'flex',
                                          textAlign: 'right'
                                        }}
                                      >
                                        <p>Package Charge</p>
                                        <p
                                          style={{
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                        >
                                          {data.exportCurrency}{' '}
                                          {getFloatWithTwoDecimal(
                                            _data.packingChargeOtherCurrency
                                              ? _data.packingChargeOtherCurrency
                                              : 0
                                          )}
                                        </p>
                                      </div>
                                    )}
                                  </div>
                                ) : (
                                  ' '
                                )}

                                {_data.exportConversionRate === 0 &&
                                TxnEnableFieldsMap.get(
                                  'display_bill_shipping_charge'
                                ) &&
                                !_data.backToBackPurchaseNumber &&
                                _data.shipping_charge ? (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row',
                                      flexWrap: 'wrap'
                                    }}
                                  >
                                    <p>Shipping Charge</p>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all'
                                      }}
                                    >
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.shipping_charge
                                          ? _data.shipping_charge
                                          : 0
                                      )}
                                    </p>
                                  </div>
                                ) : (
                                  ' '
                                )}

                                {_data.exportConversionRate > 0 &&
                                TxnEnableFieldsMap.get(
                                  'display_shipping_other_currency'
                                ) &&
                                !_data.backToBackPurchaseNumber &&
                                _data.shippingChargeOtherCurrency ? (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row',
                                      flexWrap: 'wrap'
                                    }}
                                  >
                                    {_data.shippingChargeOtherCurrency && (
                                      <div
                                        style={{
                                          minWidth: '100%',
                                          display: 'flex',
                                          textAlign: 'right'
                                        }}
                                      >
                                        <p>Shipping Charge</p>
                                        <p
                                          style={{
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                        >
                                          {data.exportCurrency}{' '}
                                          {getFloatWithTwoDecimal(
                                            _data.shippingChargeOtherCurrency
                                              ? _data.shippingChargeOtherCurrency
                                              : 0
                                          )}
                                        </p>
                                      </div>
                                    )}
                                  </div>
                                ) : (
                                  ' '
                                )}

                                {TxnEnableFieldsMap.get(
                                  'display_bill_shipping_charge'
                                ) &&
                                  _data.backToBackPurchaseNumber && (
                                    <div
                                      style={{
                                        textAlign: 'right',
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <p>Freight Charge</p>
                                      <p
                                        style={{
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(
                                          _data.freightCharge
                                            ? _data.freightCharge
                                            : 0
                                        )}
                                      </p>
                                    </div>
                                  )}

                                {_data.exportConversionRate === 0 &&
                                TxnEnableFieldsMap.get(
                                  'display_bill_insurance'
                                ) &&
                                _data.insurance &&
                                _data.insurance.amount > 0 ? (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row'
                                    }}
                                  >
                                    <p>Insurance</p>
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      â‚¹{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.insurance &&
                                          _data.insurance.amount
                                          ? _data.insurance.amount
                                          : 0
                                      )}
                                    </p>
                                  </div>
                                ) : (
                                  ' '
                                )}

                                {_data.exportConversionRate > 0 &&
                                TxnEnableFieldsMap.get(
                                  'display_insurance_other_currency'
                                ) &&
                                _data.insurance &&
                                _data.insurance.amountOtherCurrency > 0 ? (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row'
                                    }}
                                  >
                                    <p>Insurance</p>
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      {data.exportCurrency}{' '}
                                      {getFloatWithTwoDecimal(
                                        _data.insurance &&
                                          _data.insurance.amountOtherCurrency
                                          ? _data.insurance.amountOtherCurrency
                                          : 0
                                      )}
                                    </p>
                                  </div>
                                ) : (
                                  ' '
                                )}

                                {data.totalDiscount === 0 ? (
                                  ''
                                ) : (
                                  <>
                                    {((_data.invoice_number &&
                                      TxnEnableFieldsMap.get(
                                        'display_bill_discount'
                                      )) ||
                                      !_data.invoice_number) && (
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p>Total Discount</p>
                                        <p
                                          style={{
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                        >
                                          â‚¹{' '}
                                          {getFloatWithTwoDecimal(
                                            data.totalDiscount
                                          )}
                                        </p>
                                      </div>
                                    )}
                                  </>
                                )}

                                {/* TCS Amount */}
                                {data.tcsAmount > 0 && (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row'
                                    }}
                                  >
                                    <p>
                                      TCS@{data.tcsRate}% {data.tcsCode}
                                    </p>
                                    <p
                                      style={{ flex: 1, wordBreak: 'keep-all' }}
                                    >
                                      â‚¹ {getFloatWithTwoDecimal(data.tcsAmount)}
                                    </p>
                                  </div>
                                )}

                                {TxnEnableFieldsMap.get(
                                  'display_product_cess'
                                ) &&
                                  data.totalCess > 0 && (
                                    <div
                                      style={{
                                        textAlign: 'right',
                                        display: 'flex',
                                        flexDirection: 'row'
                                      }}
                                    >
                                      <p>Total Cess</p>
                                      <p
                                        style={{
                                          flex: 1,
                                          wordBreak: 'keep-all'
                                        }}
                                      >
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(data.totalCess)}
                                      </p>
                                    </div>
                                  )}

                                {String(_data.is_roundoff).toLowerCase() ===
                                  'true' && (
                                  <div
                                    style={{
                                      textAlign: 'right',
                                      display: 'flex',
                                      flexDirection: 'row'
                                    }}
                                  >
                                    <p style={{ fontWeight: 600 }}>Round off</p>
                                    <p
                                      style={{
                                        flex: 1,
                                        wordBreak: 'keep-all',
                                        fontWeight: 600
                                      }}
                                    >
                                      {data.exportConversionRate ? (
                                        <span>
                                          {data.exportCurrency}{' '}
                                          {getFloatWithTwoDecimal(
                                            _data.round_amount /
                                              _data.exportConversionRate
                                          )}
                                        </span>
                                      ) : (
                                        <span>
                                          â‚¹{' '}
                                          {getFloatWithTwoDecimal(
                                            _data.round_amount
                                          )}
                                        </span>
                                      )}
                                    </p>
                                  </div>
                                )}
                                <div
                                  style={{
                                    textAlign: 'right',
                                    display: 'flex',
                                    flexDirection: 'row'
                                  }}
                                >
                                  <p
                                    style={{
                                      fontSize: '12px',
                                      fontWeight: 600
                                    }}
                                  >
                                    Total
                                  </p>
                                  <p
                                    style={{
                                      fontSize: '12px',
                                      fontWeight: 600,
                                      flex: 1,
                                      wordBreak: 'keep-all'
                                    }}
                                  >
                                    {data.exportConversionRate ? (
                                      <span>
                                        {data.exportCurrency}{' '}
                                        {getFloatWithTwoDecimal(
                                          data.totalAmount
                                        )}
                                      </span>
                                    ) : (
                                      <span>
                                        â‚¹{' '}
                                        {getFloatWithTwoDecimal(
                                          data.totalAmount
                                        )}
                                      </span>
                                    )}
                                  </p>
                                </div>

                                {_data.estimateType === 'open' ||
                                _data.estimateType === 'close' ? (
                                  ''
                                ) : (
                                  <>
                                    {data.receivedAmount > 0 && (
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p>{data.paidReceivedTitle}</p>
                                        <p
                                          style={{
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                        >
                                          â‚¹{' '}
                                          {getFloatWithTwoDecimal(
                                            data.receivedAmount
                                          )}
                                        </p>
                                      </div>
                                    )}
                                    {_data.exportConversionRate === 0 &&
                                    data.balanceAmount > 0 ? (
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p>Balance</p>
                                        <p
                                          style={{
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                        >
                                          â‚¹{' '}
                                          {getFloatWithTwoDecimal(
                                            data.balanceAmount
                                          )}
                                        </p>
                                      </div>
                                    ) : (
                                      ''
                                    )}
                                    {settings.boolPaymentMode &&
                                    data.paymentType !== '' ? (
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p>Payment Type</p>

                                        <p
                                          style={{
                                            textTransform: 'capitalize',
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                          dangerouslySetInnerHTML={{
                                            __html: data.paymentType
                                          }}
                                        ></p>
                                      </div>
                                    ) : (
                                      ''
                                    )}
                                    {data.tdsAmount > 0 ? (
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p>
                                          TDS@{data.tdsRate}% {data.tdsCode}
                                        </p>
                                        <p
                                          style={{
                                            textTransform: 'capitalize',
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                        >
                                          â‚¹{' '}
                                          {getFloatWithTwoDecimal(
                                            data.tdsAmount
                                          )}
                                        </p>
                                      </div>
                                    ) : (
                                      ''
                                    )}
                                  </>
                                )}

                                {/****** Outstanding Payble / Receivable *****/}
                                {settings.boolPreviousBalance &&
                                  outStandingType &&
                                  outStandingBalance !== 0 && (
                                    <>
                                      <div
                                        style={{
                                          textAlign: 'right',
                                          display: 'flex',
                                          flexDirection: 'row'
                                        }}
                                      >
                                        <p>Outstanding-{outStandingType} </p>
                                        <p
                                          style={{
                                            flex: 1,
                                            wordBreak: 'keep-all'
                                          }}
                                        >
                                          â‚¹{' '}
                                          {getFloatWithTwoDecimal(
                                            outStandingBalance
                                          )}
                                        </p>
                                      </div>
                                    </>
                                  )}
                              </div>
                              {/* </Grid> */}
                            </div>
                          </div>

                          <div
                            style={{
                              border: '1px solid',
                              breakInside: 'avoid',
                              width: '100%',
                              display: 'flex',
                              flexDirection: 'row'
                            }}
                          >
                            <div
                              style={{
                                width: '50%',
                                display: 'flex',
                                flexDirection: 'column',
                                paddingLeft: '10px'
                              }}
                            >
                              <p>
                                For{' '}
                                {settings.boolCompanyName &&
                                  settings.strCompanyName}
                              </p>
                              <div style={{ width: '50%' }}>
                                {settings.boolSignature &&
                                settings.strSignature ? (
                                  <>
                                    <Box
                                      component="img"
                                      style={
                                        settings.signatureSize === 'Small'
                                          ? {
                                              width: signatureSmall,
                                              height: signatureSmall,
                                              marginLeft: '20px'
                                            }
                                          : settings.signatureSize === 'Medium'
                                          ? {
                                              width: signatureMedium,
                                              height: signatureMedium,
                                              marginLeft: '20px'
                                            }
                                          : {
                                              width: signatureLarge,
                                              height: signatureLarge,
                                              marginLeft: '20px'
                                            }
                                      }
                                      src={settings.strSignature}
                                    />
                                    <p>Authorised signature</p>
                                  </>
                                ) : (
                                  <>
                                    {this.getSeparator(5, classes.separator)}
                                    <p>Authorised signature</p>
                                  </>
                                )}
                              </div>
                            </div>
                            {TxnEnableFieldsMap.get(
                              'display_customer_signature'
                            ) && (
                              <div
                                style={{
                                  width: '50%',
                                  textAlign: 'end',
                                  alignSelf: 'flex-end',
                                  paddingRight: '10px'
                                }}
                              >
                                <p>Customer's Signature</p>
                              </div>
                            )}
                          </div>
                          <div style={{ textAlign: 'center' }}>
                            {settings.boolJurisdiction &&
                              settings.jurisdiction !== '' && (
                                <p>{settings.jurisdiction}</p>
                              )}
                          </div>
                        </div>
                      ) : (
                        <div
                          style={{
                            border: '1px solid',
                            breakInside: 'avoid',
                            width: '100%',
                            display: 'flex',
                            flexDirection: 'row',
                            borderTop: 'none'
                          }}
                        >
                          <div
                            style={{
                              width: '50%',
                              display: 'flex',
                              flexDirection: 'column',
                              paddingLeft: '10px'
                            }}
                          >
                            <p>
                              For{' '}
                              {settings.boolCompanyName &&
                                settings.strCompanyName}
                            </p>
                            <div style={{ width: '50%' }}>
                              {settings.boolSignature &&
                              settings.strSignature ? (
                                <>
                                  <Box
                                    component="img"
                                    style={
                                      settings.signatureSize === 'Small'
                                        ? {
                                            width: signatureSmall,
                                            height: signatureSmall,
                                            marginLeft: '20px'
                                          }
                                        : settings.signatureSize === 'Medium'
                                        ? {
                                            width: signatureMedium,
                                            height: signatureMedium,
                                            marginLeft: '20px'
                                          }
                                        : {
                                            width: signatureLarge,
                                            height: signatureLarge,
                                            marginLeft: '20px'
                                          }
                                    }
                                    src={settings.strSignature}
                                  />
                                  <p>Authorised signature</p>
                                </>
                              ) : (
                                <>
                                  {this.getSeparator(5, classes.separator)}
                                  <p>Authorised signature</p>
                                </>
                              )}
                            </div>
                          </div>
                          {TxnEnableFieldsMap.get(
                            'display_customer_signature'
                          ) && (
                            <div
                              style={{
                                width: '50%',
                                textAlign: 'end',
                                alignSelf: 'flex-end',
                                paddingRight: '10px'
                              }}
                            >
                              <p>Customer's Signature</p>
                            </div>
                          )}
                        </div>
                      )}
                    </div>
                  ))
                : ''}
            </div>
          )
        )}
      </>
    );
  }
}
export default withStyles(styles)(InvoiceRegularPrint);